import{createElement,forwardRef as forwardRefReact}from"react";import{useTranslation}from"./useTranslation.js";import{getDisplayName}from"./utils.js";export function withTranslation(ns){let options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return function(WrappedComponent){function I18nextWithTranslation(_ref){let{forwardedRef:forwardedRef,...rest}=_ref;const[t,i18n,ready]=useTranslation(ns,{...rest,keyPrefix:options.keyPrefix}),passDownProps={...rest,t:t,i18n:i18n,tReady:ready};return options.withRef&&forwardedRef?passDownProps.ref=forwardedRef:!options.withRef&&forwardedRef&&(passDownProps.forwardedRef=forwardedRef),createElement(WrappedComponent,passDownProps)}I18nextWithTranslation.displayName=`withI18nextTranslation(${getDisplayName(WrappedComponent)})`,I18nextWithTranslation.WrappedComponent=WrappedComponent;return options.withRef?forwardRefReact(((props,ref)=>createElement(I18nextWithTranslation,Object.assign({},props,{forwardedRef:ref})))):I18nextWithTranslation}}
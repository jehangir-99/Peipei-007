import{Fragment,isValidElement,cloneElement,createElement,Children}from"react";import HTML from"html-parse-stringify";import{warn,warnOnce}from"./utils.js";import{getDefaults}from"./defaults.js";import{getI18n}from"./i18nInstance.js";function hasChildren(node,checkLength){if(!node)return!1;const base=node.props?node.props.children:node.children;return checkLength?base.length>0:!!base}function getChildren(node){if(!node)return[];const children=node.props?node.props.children:node.children;return node.props&&node.props.i18nIsDynamicList?getAsArray(children):children}function hasValidReactChildren(children){return"[object Array]"===Object.prototype.toString.call(children)&&children.every((child=>isValidElement(child)))}function getAsArray(data){return Array.isArray(data)?data:[data]}function mergeProps(source,target){const newTarget={...target};return newTarget.props=Object.assign(source.props,target.props),newTarget}export function nodesToString(children,i18nOptions){if(!children)return"";let stringNode="";const childrenArray=getAsArray(children),keepArray=i18nOptions.transSupportBasicHtmlNodes&&i18nOptions.transKeepBasicHtmlNodesFor?i18nOptions.transKeepBasicHtmlNodesFor:[];return childrenArray.forEach(((child,childIndex)=>{if("string"==typeof child)stringNode+=`${child}`;else if(isValidElement(child)){const childPropsCount=Object.keys(child.props).length,shouldKeepChild=keepArray.indexOf(child.type)>-1,childChildren=child.props.children;if(!childChildren&&shouldKeepChild&&0===childPropsCount)stringNode+=`<${child.type}/>`;else if(childChildren||shouldKeepChild&&0===childPropsCount)if(child.props.i18nIsDynamicList)stringNode+=`<${childIndex}></${childIndex}>`;else if(shouldKeepChild&&1===childPropsCount&&"string"==typeof childChildren)stringNode+=`<${child.type}>${childChildren}</${child.type}>`;else{const content=nodesToString(childChildren,i18nOptions);stringNode+=`<${childIndex}>${content}</${childIndex}>`}else stringNode+=`<${childIndex}></${childIndex}>`}else if(null===child)warn("Trans: the passed in value is invalid - seems you passed in a null child.");else if("object"==typeof child){const{format:format,...clone}=child,keys=Object.keys(clone);if(1===keys.length){const value=format?`${keys[0]}, ${format}`:keys[0];stringNode+=`{{${value}}}`}else warn("react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.",child)}else warn("Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.",child)})),stringNode}function renderNodes(children,targetString,i18n,i18nOptions,combinedTOpts,shouldUnescape){if(""===targetString)return[];const keepArray=i18nOptions.transKeepBasicHtmlNodesFor||[],emptyChildrenButNeedsHandling=targetString&&new RegExp(keepArray.map((keep=>`<${keep}`)).join("|")).test(targetString);if(!children&&!emptyChildrenButNeedsHandling&&!shouldUnescape)return[targetString];const data={};!function getData(childs){getAsArray(childs).forEach((child=>{"string"!=typeof child&&(hasChildren(child)?getData(getChildren(child)):"object"!=typeof child||isValidElement(child)||Object.assign(data,child))}))}(children);const ast=HTML.parse(`<0>${targetString}</0>`),opts={...data,...combinedTOpts};function renderInner(child,node,rootReactNode){const childs=getChildren(child),mappedChildren=mapAST(childs,node.children,rootReactNode);return hasValidReactChildren(childs)&&0===mappedChildren.length||child.props&&child.props.i18nIsDynamicList?childs:mappedChildren}function pushTranslatedJSX(child,inner,mem,i,isVoid){child.dummy?(child.children=inner,mem.push(cloneElement(child,{key:i},isVoid?void 0:inner))):mem.push(...Children.map([child],(c=>{const props={...c.props};return delete props.i18nIsDynamicList,createElement(c.type,{...props,key:i,ref:c.ref},isVoid?null:inner)})))}function mapAST(reactNode,astNode,rootReactNode){const reactNodes=getAsArray(reactNode);return getAsArray(astNode).reduce(((mem,node,i)=>{const translationContent=node.children&&node.children[0]&&node.children[0].content&&i18n.services.interpolator.interpolate(node.children[0].content,opts,i18n.language);if("tag"===node.type){let tmp=reactNodes[parseInt(node.name,10)];1!==rootReactNode.length||tmp||(tmp=rootReactNode[0][node.name]),tmp||(tmp={});const child=0!==Object.keys(node.attrs).length?mergeProps({props:node.attrs},tmp):tmp,isElement=isValidElement(child),isValidTranslationWithChildren=isElement&&hasChildren(node,!0)&&!node.voidElement,isEmptyTransWithHTML=emptyChildrenButNeedsHandling&&"object"==typeof child&&child.dummy&&!isElement,isKnownComponent="object"==typeof children&&null!==children&&Object.hasOwnProperty.call(children,node.name);if("string"==typeof child){const value=i18n.services.interpolator.interpolate(child,opts,i18n.language);mem.push(value)}else if(hasChildren(child)||isValidTranslationWithChildren){pushTranslatedJSX(child,renderInner(child,node,rootReactNode),mem,i)}else if(isEmptyTransWithHTML){pushTranslatedJSX(child,mapAST(reactNodes,node.children,rootReactNode),mem,i)}else if(Number.isNaN(parseFloat(node.name)))if(isKnownComponent){pushTranslatedJSX(child,renderInner(child,node,rootReactNode),mem,i,node.voidElement)}else if(i18nOptions.transSupportBasicHtmlNodes&&keepArray.indexOf(node.name)>-1)if(node.voidElement)mem.push(createElement(node.name,{key:`${node.name}-${i}`}));else{const inner=mapAST(reactNodes,node.children,rootReactNode);mem.push(createElement(node.name,{key:`${node.name}-${i}`},inner))}else if(node.voidElement)mem.push(`<${node.name} />`);else{const inner=mapAST(reactNodes,node.children,rootReactNode);mem.push(`<${node.name}>${inner}</${node.name}>`)}else if("object"!=typeof child||isElement)pushTranslatedJSX(child,translationContent,mem,i,1!==node.children.length||!translationContent);else{const content=node.children[0]?translationContent:null;content&&mem.push(content)}}else if("text"===node.type){const wrapTextNodes=i18nOptions.transWrapTextNodes,content=shouldUnescape?i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content,opts,i18n.language)):i18n.services.interpolator.interpolate(node.content,opts,i18n.language);wrapTextNodes?mem.push(createElement(wrapTextNodes,{key:`${node.name}-${i}`},content)):mem.push(content)}return mem}),[])}return getChildren(mapAST([{dummy:!0,children:children||[]}],ast,getAsArray(children||[]))[0])}export function Trans(_ref){let{children:children,count:count,parent:parent,i18nKey:i18nKey,context:context,tOptions:tOptions={},values:values,defaults:defaults,components:components,ns:ns,i18n:i18nFromProps,t:tFromProps,shouldUnescape:shouldUnescape,...additionalProps}=_ref;const i18n=i18nFromProps||getI18n();if(!i18n)return warnOnce("You will need to pass in an i18next instance by using i18nextReactModule"),children;const t=tFromProps||i18n.t.bind(i18n)||(k=>k);tOptions.context=context;const reactI18nextOptions={...getDefaults(),...i18n.options&&i18n.options.react};let namespaces=ns||t.ns||i18n.options&&i18n.options.defaultNS;namespaces="string"==typeof namespaces?[namespaces]:namespaces||["translation"];const nodeAsString=nodesToString(children,reactI18nextOptions),defaultValue=defaults||nodeAsString||reactI18nextOptions.transEmptyNodeValue||i18nKey,{hashTransKey:hashTransKey}=reactI18nextOptions,key=i18nKey||(hashTransKey?hashTransKey(nodeAsString||defaultValue):nodeAsString||defaultValue);i18n.options&&i18n.options.interpolation&&i18n.options.interpolation.defaultVariables&&(values=values&&Object.keys(values).length>0?{...values,...i18n.options.interpolation.defaultVariables}:{...i18n.options.interpolation.defaultVariables});const combinedTOpts={...tOptions,count:count,...values,defaultValue:defaultValue,ns:namespaces},translation=key?t(key,combinedTOpts):defaultValue;components&&Object.keys(components).forEach((c=>{const comp=components[c];"function"==typeof comp.type||!comp.props||!comp.props.children||translation.indexOf(`${c}/>`)<0&&translation.indexOf(`${c} />`)<0||(components[c]=createElement((function(){return createElement(Fragment,null,comp)})))}));const content=renderNodes(components||children,translation,i18n,reactI18nextOptions,combinedTOpts,shouldUnescape),useAsParent=void 0!==parent?parent:reactI18nextOptions.defaultTransParent;return useAsParent?createElement(useAsParent,additionalProps,content):content}
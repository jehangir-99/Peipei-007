"use strict";const decode=(string,alphabet,bitsPerChar)=>{const codes={};for(let i=0;i<alphabet.length;++i)codes[alphabet[i]]=i;let end=string.length;for(;"="===string[end-1];)--end;const out=new Uint8Array(end*bitsPerChar/8|0);let bits=0,buffer=0,written=0;for(let i=0;i<end;++i){const value=codes[string[i]];if(void 0===value)throw new SyntaxError("Invalid character "+string[i]);buffer=buffer<<bitsPerChar|value,bits+=bitsPerChar,bits>=8&&(bits-=8,out[written++]=255&buffer>>bits)}if(bits>=bitsPerChar||255&buffer<<8-bits)throw new SyntaxError("Unexpected end of data");return out},encode=(data,alphabet,bitsPerChar)=>{const pad="="===alphabet[alphabet.length-1],mask=(1<<bitsPerChar)-1;let out="",bits=0,buffer=0;for(let i=0;i<data.length;++i)for(buffer=buffer<<8|data[i],bits+=8;bits>bitsPerChar;)bits-=bitsPerChar,out+=alphabet[mask&buffer>>bits];if(bits&&(out+=alphabet[mask&buffer<<bitsPerChar-bits]),pad)for(;out.length*bitsPerChar&7;)out+="=";return out},rfc4648=bitsPerChar=>alphabet=>({encode:input=>encode(input,alphabet,bitsPerChar),decode:input=>decode(input,alphabet,bitsPerChar)});module.exports={rfc4648:rfc4648};
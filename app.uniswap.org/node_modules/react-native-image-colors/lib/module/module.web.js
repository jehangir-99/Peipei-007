import Vibrant from"node-vibrant";const getQuality=quality=>{switch(quality){case"lowest":return 10;case"low":return 5;case"high":return 1.333;case"highest":return 1;default:return getQuality("low")}},getDominantSwatch=palette=>{let dominant=palette[0];const keys=Object.keys(palette);for(let index=0;index<keys.length;index++){const swatch=palette[keys[index]];swatch&&(null==swatch?void 0:swatch.population)>-1&&(dominant=swatch)}return dominant};export const RNImageColors={getColors:async(src,config)=>{var _getDominantSwatch$he,_getDominantSwatch,_palette$Vibrant$hex,_palette$Vibrant,_palette$DarkVibrant$,_palette$DarkVibrant,_palette$LightVibrant,_palette$LightVibrant2,_palette$DarkMuted$he,_palette$DarkMuted,_palette$LightMuted$h,_palette$LightMuted,_palette$Muted$hex,_palette$Muted;const{fallback:fallback}=config;let img=new Image;img.src=src,img.crossOrigin="Anonymous";const vibrant=new Vibrant(img,{useWorker:!0,quality:getQuality(config.quality)}),palette=await vibrant.getPalette();return{dominant:null!==(_getDominantSwatch$he=null===(_getDominantSwatch=getDominantSwatch(palette))||void 0===_getDominantSwatch?void 0:_getDominantSwatch.hex)&&void 0!==_getDominantSwatch$he?_getDominantSwatch$he:fallback,vibrant:null!==(_palette$Vibrant$hex=null===(_palette$Vibrant=palette.Vibrant)||void 0===_palette$Vibrant?void 0:_palette$Vibrant.hex)&&void 0!==_palette$Vibrant$hex?_palette$Vibrant$hex:fallback,darkVibrant:null!==(_palette$DarkVibrant$=null===(_palette$DarkVibrant=palette.DarkVibrant)||void 0===_palette$DarkVibrant?void 0:_palette$DarkVibrant.hex)&&void 0!==_palette$DarkVibrant$?_palette$DarkVibrant$:fallback,lightVibrant:null!==(_palette$LightVibrant=null===(_palette$LightVibrant2=palette.LightVibrant)||void 0===_palette$LightVibrant2?void 0:_palette$LightVibrant2.hex)&&void 0!==_palette$LightVibrant?_palette$LightVibrant:fallback,darkMuted:null!==(_palette$DarkMuted$he=null===(_palette$DarkMuted=palette.DarkMuted)||void 0===_palette$DarkMuted?void 0:_palette$DarkMuted.hex)&&void 0!==_palette$DarkMuted$he?_palette$DarkMuted$he:fallback,lightMuted:null!==(_palette$LightMuted$h=null===(_palette$LightMuted=palette.LightMuted)||void 0===_palette$LightMuted?void 0:_palette$LightMuted.hex)&&void 0!==_palette$LightMuted$h?_palette$LightMuted$h:fallback,muted:null!==(_palette$Muted$hex=null===(_palette$Muted=palette.Muted)||void 0===_palette$Muted?void 0:_palette$Muted.hex)&&void 0!==_palette$Muted$hex?_palette$Muted$hex:fallback,platform:"web"}}};
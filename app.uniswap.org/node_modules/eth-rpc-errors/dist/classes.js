"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.EthereumProviderError=exports.EthereumRpcError=void 0;const fast_safe_stringify_1=require("fast-safe-stringify");class EthereumRpcError extends Error{constructor(code,message,data){if(!Number.isInteger(code))throw new Error('"code" must be an integer.');if(!message||"string"!=typeof message)throw new Error('"message" must be a nonempty string.');super(message),this.code=code,void 0!==data&&(this.data=data)}serialize(){const serialized={code:this.code,message:this.message};return void 0!==this.data&&(serialized.data=this.data),this.stack&&(serialized.stack=this.stack),serialized}toString(){return fast_safe_stringify_1.default(this.serialize(),stringifyReplacer,2)}}exports.EthereumRpcError=EthereumRpcError;class EthereumProviderError extends EthereumRpcError{constructor(code,message,data){if(!isValidEthProviderCode(code))throw new Error('"code" must be an integer such that: 1000 <= code <= 4999');super(code,message,data)}}function isValidEthProviderCode(code){return Number.isInteger(code)&&code>=1e3&&code<=4999}function stringifyReplacer(_,value){if("[Circular]"!==value)return value}exports.EthereumProviderError=EthereumProviderError;
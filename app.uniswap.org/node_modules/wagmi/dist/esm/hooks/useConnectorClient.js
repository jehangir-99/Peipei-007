import{useQueryClient}from"@tanstack/react-query";import{}from"@wagmi/core/internal";import{getConnectorClientQueryOptions}from"@wagmi/core/query";import{useEffect,useRef}from"react";import{useQuery}from"../utils/query.js";import{useAccount}from"./useAccount.js";import{useChainId}from"./useChainId.js";import{useConfig}from"./useConfig.js";export function useConnectorClient(parameters={}){const{query:query={},...rest}=parameters,config=useConfig(rest),queryClient=useQueryClient(),{address:address,connector:connector,status:status}=useAccount({config:config}),chainId=useChainId({config:config}),{queryKey:queryKey,...options}=getConnectorClientQueryOptions(config,{...parameters,chainId:parameters.chainId??chainId,connector:parameters.connector??connector}),enabled=Boolean("disconnected"!==status&&(query.enabled??!0)),addressRef=useRef(address);return useEffect((()=>{const previousAddress=addressRef.current;!address&&previousAddress?(queryClient.removeQueries({queryKey:queryKey}),addressRef.current=void 0):address!==previousAddress&&(queryClient.invalidateQueries({queryKey:queryKey}),addressRef.current=address)}),[address,queryClient]),useQuery({...query,...options,queryKey:queryKey,enabled:enabled,staleTime:1/0})}
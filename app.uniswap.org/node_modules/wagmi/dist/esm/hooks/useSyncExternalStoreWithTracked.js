import{deepEqual}from"@wagmi/core/internal";import{useRef}from"react";import{useSyncExternalStoreWithSelector}from"use-sync-external-store/shim/with-selector.js";const isPlainObject=obj=>"object"==typeof obj&&!Array.isArray(obj);export function useSyncExternalStoreWithTracked(subscribe,getSnapshot,getServerSnapshot=getSnapshot,isEqual=deepEqual){const trackedKeys=useRef([]),result=useSyncExternalStoreWithSelector(subscribe,getSnapshot,getServerSnapshot,(x=>x),((a,b)=>{if(isPlainObject(a)&&isPlainObject(b)&&trackedKeys.current.length){for(const key of trackedKeys.current){if(!isEqual(a[key],b[key]))return!1}return!0}return isEqual(a,b)}));if(isPlainObject(result)){const trackedResult={...result};return Object.defineProperties(trackedResult,Object.entries(trackedResult).reduce(((res,[key,value])=>({...res,[key]:{configurable:!1,enumerable:!0,get:()=>(trackedKeys.current.includes(key)||trackedKeys.current.push(key),value)}})),{})),trackedResult}return result}
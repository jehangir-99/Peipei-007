import{isString}from"./is.js";import{logger}from"./logger.js";const BAGGAGE_HEADER_NAME="baggage",SENTRY_BAGGAGE_KEY_PREFIX="sentry-",SENTRY_BAGGAGE_KEY_PREFIX_REGEX=/^sentry-/,MAX_BAGGAGE_STRING_LENGTH=8192;function baggageHeaderToDynamicSamplingContext(baggageHeader){if(!isString(baggageHeader)&&!Array.isArray(baggageHeader))return;let baggageObject={};if(Array.isArray(baggageHeader))baggageObject=baggageHeader.reduce(((acc,curr)=>({...acc,...baggageHeaderToObject(curr)})),{});else{if(!baggageHeader)return;baggageObject=baggageHeaderToObject(baggageHeader)}const dynamicSamplingContext=Object.entries(baggageObject).reduce(((acc,[key,value])=>{if(key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)){acc[key.slice(7)]=value}return acc}),{});return Object.keys(dynamicSamplingContext).length>0?dynamicSamplingContext:void 0}function dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext){if(!dynamicSamplingContext)return;return objectToBaggageHeader(Object.entries(dynamicSamplingContext).reduce(((acc,[dscKey,dscValue])=>(dscValue&&(acc[`sentry-${dscKey}`]=dscValue),acc)),{}))}function baggageHeaderToObject(baggageHeader){return baggageHeader.split(",").map((baggageEntry=>baggageEntry.split("=").map((keyOrValue=>decodeURIComponent(keyOrValue.trim()))))).reduce(((acc,[key,value])=>(acc[key]=value,acc)),{})}function objectToBaggageHeader(object){if(0!==Object.keys(object).length)return Object.entries(object).reduce(((baggageHeader,[objectKey,objectValue],currentIndex)=>{const baggageEntry=`${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`,newBaggageHeader=0===currentIndex?baggageEntry:`${baggageHeader},${baggageEntry}`;return newBaggageHeader.length>MAX_BAGGAGE_STRING_LENGTH?(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.warn(`Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`),baggageHeader):newBaggageHeader}),"")}export{BAGGAGE_HEADER_NAME,MAX_BAGGAGE_STRING_LENGTH,SENTRY_BAGGAGE_KEY_PREFIX,SENTRY_BAGGAGE_KEY_PREFIX_REGEX,baggageHeaderToDynamicSamplingContext,dynamicSamplingContextToSentryBaggageHeader};
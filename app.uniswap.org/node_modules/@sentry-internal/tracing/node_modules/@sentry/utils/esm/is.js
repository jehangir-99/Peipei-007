const objectToString=Object.prototype.toString;function isError(wat){switch(objectToString.call(wat)){case"[object Error]":case"[object Exception]":case"[object DOMException]":return!0;default:return isInstanceOf(wat,Error)}}function isBuiltin(wat,className){return objectToString.call(wat)===`[object ${className}]`}function isErrorEvent(wat){return isBuiltin(wat,"ErrorEvent")}function isDOMError(wat){return isBuiltin(wat,"DOMError")}function isDOMException(wat){return isBuiltin(wat,"DOMException")}function isString(wat){return isBuiltin(wat,"String")}function isPrimitive(wat){return null===wat||"object"!=typeof wat&&"function"!=typeof wat}function isPlainObject(wat){return isBuiltin(wat,"Object")}function isEvent(wat){return"undefined"!=typeof Event&&isInstanceOf(wat,Event)}function isElement(wat){return"undefined"!=typeof Element&&isInstanceOf(wat,Element)}function isRegExp(wat){return isBuiltin(wat,"RegExp")}function isThenable(wat){return Boolean(wat&&wat.then&&"function"==typeof wat.then)}function isSyntheticEvent(wat){return isPlainObject(wat)&&"nativeEvent"in wat&&"preventDefault"in wat&&"stopPropagation"in wat}function isNaN(wat){return"number"==typeof wat&&wat!=wat}function isInstanceOf(wat,base){try{return wat instanceof base}catch(_e){return!1}}function isVueViewModel(wat){return!("object"!=typeof wat||null===wat||!wat.__isVue&&!wat._isVue)}export{isDOMError,isDOMException,isElement,isError,isErrorEvent,isEvent,isInstanceOf,isNaN,isPlainObject,isPrimitive,isRegExp,isString,isSyntheticEvent,isThenable,isVueViewModel};
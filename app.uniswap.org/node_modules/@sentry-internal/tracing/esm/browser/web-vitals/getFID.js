import{bindReporter}from"./lib/bindReporter.js";import{getVisibilityWatcher}from"./lib/getVisibilityWatcher.js";import{initMetric}from"./lib/initMetric.js";import{observe}from"./lib/observe.js";import{onHidden}from"./lib/onHidden.js";const onFID=onReport=>{const visibilityWatcher=getVisibilityWatcher(),metric=initMetric("FID");let report;const handleEntry=entry=>{entry.startTime<visibilityWatcher.firstHiddenTime&&(metric.value=entry.processingStart-entry.startTime,metric.entries.push(entry),report(!0))},handleEntries=entries=>{entries.forEach(handleEntry)},po=observe("first-input",handleEntries);report=bindReporter(onReport,metric),po&&onHidden((()=>{handleEntries(po.takeRecords()),po.disconnect()}),!0)};export{onFID};
"use strict";var GetIntrinsic=require("get-intrinsic"),$ArrayPrototype=GetIntrinsic("%Array.prototype%"),$RangeError=require("es-errors/range"),$SyntaxError=require("es-errors/syntax"),$TypeError=require("es-errors/type"),isInteger=require("../helpers/isInteger"),MAX_ARRAY_LENGTH=Math.pow(2,32)-1,hasProto=require("has-proto")(),$setProto=GetIntrinsic("%Object.setPrototypeOf%",!0)||(hasProto?function(O,proto){return O.__proto__=proto,O}:null);module.exports=function(length){if(!isInteger(length)||length<0)throw new $TypeError("Assertion failed: `length` must be an integer Number >= 0");if(length>MAX_ARRAY_LENGTH)throw new $RangeError("length is greater than (2**32 - 1)");var proto=arguments.length>1?arguments[1]:$ArrayPrototype,A=[];if(proto!==$ArrayPrototype){if(!$setProto)throw new $SyntaxError("ArrayCreate: a `proto` argument that is not `Array.prototype` is not supported in an environment that does not support setting the [[Prototype]]");$setProto(A,proto)}return 0!==length&&(A.length=length),A};
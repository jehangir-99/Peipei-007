"use strict";var $TypeError=require("es-errors/type"),MAX_SAFE_INTEGER=require("../helpers/maxSafeInteger"),Call=require("./Call"),CreateDataPropertyOrThrow=require("./CreateDataPropertyOrThrow"),Get=require("./Get"),HasProperty=require("./HasProperty"),IsArray=require("./IsArray"),LengthOfArrayLike=require("./LengthOfArrayLike"),ToString=require("./ToString");module.exports=function FlattenIntoArray(target,source,sourceLen,start,depth){var mapperFunction;arguments.length>5&&(mapperFunction=arguments[5]);for(var targetIndex=start,sourceIndex=0;sourceIndex<sourceLen;){var P=ToString(sourceIndex);if(!0===HasProperty(source,P)){var element=Get(source,P);if(void 0!==mapperFunction){if(arguments.length<=6)throw new $TypeError("Assertion failed: thisArg is required when mapperFunction is provided");element=Call(mapperFunction,arguments[6],[element,sourceIndex,source])}var shouldFlatten=!1;if(depth>0&&(shouldFlatten=IsArray(element)),shouldFlatten){targetIndex=FlattenIntoArray(target,element,LengthOfArrayLike(element),targetIndex,depth-1)}else{if(targetIndex>=MAX_SAFE_INTEGER)throw new $TypeError("index too large");CreateDataPropertyOrThrow(target,ToString(targetIndex),element),targetIndex+=1}}sourceIndex+=1}return targetIndex};
"use strict";var $gOPD=require("gopd"),$SyntaxError=require("es-errors/syntax"),$TypeError=require("es-errors/type"),isPropertyDescriptor=require("../helpers/records/property-descriptor"),IsAccessorDescriptor=require("./IsAccessorDescriptor"),IsExtensible=require("./IsExtensible"),IsPropertyKey=require("./IsPropertyKey"),ToPropertyDescriptor=require("./ToPropertyDescriptor"),SameValue=require("./SameValue"),Type=require("./Type"),ValidateAndApplyPropertyDescriptor=require("./ValidateAndApplyPropertyDescriptor");module.exports=function(O,P,Desc){if("Object"!==Type(O))throw new $TypeError("Assertion failed: O must be an Object");if(!IsPropertyKey(P))throw new $TypeError("Assertion failed: P must be a Property Key");if(!isPropertyDescriptor(Desc))throw new $TypeError("Assertion failed: Desc must be a Property Descriptor");if(!$gOPD){if(IsAccessorDescriptor(Desc))throw new $SyntaxError("This environment does not support accessor property descriptors.");var creatingNormalDataProperty=!(P in O)&&Desc["[[Writable]]"]&&Desc["[[Enumerable]]"]&&Desc["[[Configurable]]"]&&"[[Value]]"in Desc,settingExistingDataProperty=P in O&&(!("[[Configurable]]"in Desc)||Desc["[[Configurable]]"])&&(!("[[Enumerable]]"in Desc)||Desc["[[Enumerable]]"])&&(!("[[Writable]]"in Desc)||Desc["[[Writable]]"])&&"[[Value]]"in Desc;if(creatingNormalDataProperty||settingExistingDataProperty)return O[P]=Desc["[[Value]]"],SameValue(O[P],Desc["[[Value]]"]);throw new $SyntaxError("This environment does not support defining non-writable, non-enumerable, or non-configurable properties")}var desc=$gOPD(O,P),current=desc&&ToPropertyDescriptor(desc),extensible=IsExtensible(O);return ValidateAndApplyPropertyDescriptor(O,P,extensible,Desc,current)};
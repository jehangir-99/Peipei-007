"use strict";var $TypeError=require("es-errors/type"),DefineOwnProperty=require("../helpers/DefineOwnProperty"),isFullyPopulatedPropertyDescriptor=require("../helpers/isFullyPopulatedPropertyDescriptor"),isPropertyDescriptor=require("../helpers/records/property-descriptor"),FromPropertyDescriptor=require("./FromPropertyDescriptor"),IsAccessorDescriptor=require("./IsAccessorDescriptor"),IsDataDescriptor=require("./IsDataDescriptor"),IsGenericDescriptor=require("./IsGenericDescriptor"),IsPropertyKey=require("./IsPropertyKey"),SameValue=require("./SameValue"),Type=require("./Type");module.exports=function(O,P,extensible,Desc,current){var configurable,enumerable,oType=Type(O);if("Undefined"!==oType&&"Object"!==oType)throw new $TypeError("Assertion failed: O must be undefined or an Object");if(!IsPropertyKey(P))throw new $TypeError("Assertion failed: P must be a Property Key");if("boolean"!=typeof extensible)throw new $TypeError("Assertion failed: extensible must be a Boolean");if(!isPropertyDescriptor(Desc))throw new $TypeError("Assertion failed: Desc must be a Property Descriptor");if(void 0!==current&&!isPropertyDescriptor(current))throw new $TypeError("Assertion failed: current must be a Property Descriptor, or undefined");if(void 0===current)return!!extensible&&("Undefined"===oType||(IsAccessorDescriptor(Desc)?DefineOwnProperty(IsDataDescriptor,SameValue,FromPropertyDescriptor,O,P,Desc):DefineOwnProperty(IsDataDescriptor,SameValue,FromPropertyDescriptor,O,P,{"[[Configurable]]":!!Desc["[[Configurable]]"],"[[Enumerable]]":!!Desc["[[Enumerable]]"],"[[Value]]":Desc["[[Value]]"],"[[Writable]]":!!Desc["[[Writable]]"]})));if(!isFullyPopulatedPropertyDescriptor({IsAccessorDescriptor:IsAccessorDescriptor,IsDataDescriptor:IsDataDescriptor},current))throw new $TypeError("`current`, when present, must be a fully populated and valid Property Descriptor");if(!current["[[Configurable]]"]){if("[[Configurable]]"in Desc&&Desc["[[Configurable]]"])return!1;if("[[Enumerable]]"in Desc&&!SameValue(Desc["[[Enumerable]]"],current["[[Enumerable]]"]))return!1;if(!IsGenericDescriptor(Desc)&&!SameValue(IsAccessorDescriptor(Desc),IsAccessorDescriptor(current)))return!1;if(IsAccessorDescriptor(current)){if("[[Get]]"in Desc&&!SameValue(Desc["[[Get]]"],current["[[Get]]"]))return!1;if("[[Set]]"in Desc&&!SameValue(Desc["[[Set]]"],current["[[Set]]"]))return!1}else if(!current["[[Writable]]"]){if("[[Writable]]"in Desc&&Desc["[[Writable]]"])return!1;if("[[Value]]"in Desc&&!SameValue(Desc["[[Value]]"],current["[[Value]]"]))return!1}}return"Undefined"===oType||(IsDataDescriptor(current)&&IsAccessorDescriptor(Desc)?(configurable=("[[Configurable]]"in Desc?Desc:current)["[[Configurable]]"],enumerable=("[[Enumerable]]"in Desc?Desc:current)["[[Enumerable]]"],DefineOwnProperty(IsDataDescriptor,SameValue,FromPropertyDescriptor,O,P,{"[[Configurable]]":!!configurable,"[[Enumerable]]":!!enumerable,"[[Get]]":("[[Get]]"in Desc?Desc:current)["[[Get]]"],"[[Set]]":("[[Set]]"in Desc?Desc:current)["[[Set]]"]})):IsAccessorDescriptor(current)&&IsDataDescriptor(Desc)?(configurable=("[[Configurable]]"in Desc?Desc:current)["[[Configurable]]"],enumerable=("[[Enumerable]]"in Desc?Desc:current)["[[Enumerable]]"],DefineOwnProperty(IsDataDescriptor,SameValue,FromPropertyDescriptor,O,P,{"[[Configurable]]":!!configurable,"[[Enumerable]]":!!enumerable,"[[Value]]":("[[Value]]"in Desc?Desc:current)["[[Value]]"],"[[Writable]]":!!("[[Writable]]"in Desc?Desc:current)["[[Writable]]"]})):DefineOwnProperty(IsDataDescriptor,SameValue,FromPropertyDescriptor,O,P,Desc))};
"use strict";var GetIntrinsic=require("get-intrinsic"),callBound=require("call-bind/callBound"),$TypeError=require("es-errors/type"),IsArray=require("./IsArray"),$apply=GetIntrinsic("%Reflect.apply%",!0)||callBound("Function.prototype.apply");module.exports=function(F,V){var argumentsList=arguments.length>2?arguments[2]:[];if(!IsArray(argumentsList))throw new $TypeError("Assertion failed: optional `argumentsList`, if provided, must be a List");return $apply(F,V,argumentsList)};
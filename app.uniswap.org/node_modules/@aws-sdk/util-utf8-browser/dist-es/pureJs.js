export const fromUtf8=input=>{const bytes=[];for(let i=0,len=input.length;i<len;i++){const value=input.charCodeAt(i);if(value<128)bytes.push(value);else if(value<2048)bytes.push(value>>6|192,63&value|128);else if(i+1<input.length&&55296==(64512&value)&&56320==(64512&input.charCodeAt(i+1))){const surrogatePair=65536+((1023&value)<<10)+(1023&input.charCodeAt(++i));bytes.push(surrogatePair>>18|240,surrogatePair>>12&63|128,surrogatePair>>6&63|128,63&surrogatePair|128)}else bytes.push(value>>12|224,value>>6&63|128,63&value|128)}return Uint8Array.from(bytes)};export const toUtf8=input=>{let decoded="";for(let i=0,len=input.length;i<len;i++){const byte=input[i];if(byte<128)decoded+=String.fromCharCode(byte);else if(192<=byte&&byte<224){const nextByte=input[++i];decoded+=String.fromCharCode((31&byte)<<6|63&nextByte)}else if(240<=byte&&byte<365){const encoded="%"+[byte,input[++i],input[++i],input[++i]].map((byteValue=>byteValue.toString(16))).join("%");decoded+=decodeURIComponent(encoded)}else decoded+=String.fromCharCode((15&byte)<<12|(63&input[++i])<<6|63&input[++i])}return decoded};
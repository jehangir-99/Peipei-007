function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(source,!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(source).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}export default function autoMergeLevel1(inboundState,originalState,reducedState,_ref){var debug=_ref.debug,newState=_objectSpread({},reducedState);return inboundState&&"object"===_typeof(inboundState)&&Object.keys(inboundState).forEach((function(key){"_persist"!==key&&(originalState[key]===reducedState[key]?newState[key]=inboundState[key]:"production"!==process.env.NODE_ENV&&debug&&console.log("redux-persist/stateReconciler: sub state for key `%s` modified, skipping.",key))})),"production"!==process.env.NODE_ENV&&debug&&inboundState&&"object"===_typeof(inboundState)&&console.log("redux-persist/stateReconciler: rehydrated keys '".concat(Object.keys(inboundState).join(", "),"'")),newState}
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.WalletLinkHTTP=void 0;class WalletLinkHTTP{constructor(linkAPIUrl,sessionId,sessionKey){this.linkAPIUrl=linkAPIUrl,this.sessionId=sessionId;const credentials=`${sessionId}:${sessionKey}`;this.auth=`Basic ${btoa(credentials)}`}async markUnseenEventsAsSeen(events){return Promise.all(events.map((e=>fetch(`${this.linkAPIUrl}/events/${e.eventId}/seen`,{method:"POST",headers:{Authorization:this.auth}})))).catch((error=>console.error("Unabled to mark event as failed:",error)))}async fetchUnseenEvents(){var _a;const response=await fetch(`${this.linkAPIUrl}/events?unseen=true`,{headers:{Authorization:this.auth}});if(response.ok){const{events:events,error:error}=await response.json();if(error)throw new Error(`Check unseen events failed: ${error}`);const responseEvents=null!==(_a=null==events?void 0:events.filter((e=>"Web3Response"===e.event)).map((e=>({type:"Event",sessionId:this.sessionId,eventId:e.id,event:e.event,data:e.data}))))&&void 0!==_a?_a:[];return this.markUnseenEventsAsSeen(responseEvents),responseEvents}throw new Error(`Check unseen events failed: ${response.status}`)}}exports.WalletLinkHTTP=WalletLinkHTTP;
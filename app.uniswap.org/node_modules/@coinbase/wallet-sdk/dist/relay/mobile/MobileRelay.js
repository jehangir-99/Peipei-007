"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MobileRelay=void 0;const util_1=require("../../core/util"),WalletLinkRelay_1=require("../walletlink/WalletLinkRelay"),MobileRelayUI_1=require("./MobileRelayUI");class MobileRelay extends WalletLinkRelay_1.WalletLinkRelay{constructor(options){var _a;super(options),this._enableMobileWalletLink=null!==(_a=options.enableMobileWalletLink)&&void 0!==_a&&_a}requestEthereumAccounts(){return this._enableMobileWalletLink?super.requestEthereumAccounts():{promise:new Promise((()=>{const location=(0,util_1.getLocation)();location.href=`https://go.cb-w.com/dapp?cb_url=${encodeURIComponent(location.href)}`})),cancel:()=>{}}}publishWeb3RequestEvent(id,request){if(super.publishWeb3RequestEvent(id,request),!(this._enableMobileWalletLink&&this.ui instanceof MobileRelayUI_1.MobileRelayUI))return;let navigatedToCBW=!1;switch(request.method){case"requestEthereumAccounts":case"connectAndSignIn":navigatedToCBW=!0,this.ui.openCoinbaseWalletDeeplink(this.getQRCodeUrl());break;case"switchEthereumChain":return;default:navigatedToCBW=!0,this.ui.openCoinbaseWalletDeeplink()}navigatedToCBW&&window.addEventListener("blur",(()=>{window.addEventListener("focus",(()=>{this.connection.checkUnseenEvents()}),{once:!0})}),{once:!0})}handleWeb3ResponseMessage(message){super.handleWeb3ResponseMessage(message),this._enableMobileWalletLink&&this.ui instanceof MobileRelayUI_1.MobileRelayUI&&this.ui.closeOpenedWindow()}connectAndSignIn(params){if(!this._enableMobileWalletLink)throw new Error("connectAndSignIn is supported only when enableMobileWalletLink is on");return this.sendRequest({method:"connectAndSignIn",params:{appName:this.appName,appLogoUrl:this.appLogoUrl,domain:window.location.hostname,aud:window.location.href,version:"1",type:"eip4361",nonce:params.nonce,iat:(new Date).toISOString(),chainId:`eip155:${this.dappDefaultChain}`,statement:params.statement,resources:params.resources}})}}exports.MobileRelay=MobileRelay;
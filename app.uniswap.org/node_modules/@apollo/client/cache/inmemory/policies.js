import{__assign,__rest}from"tslib";import{invariant,newInvariantError}from"../../utilities/globals/index.js";import{storeKeyNameFromField,argumentsObjectFromField,isReference,getStoreKeyName,isNonNullObject,stringifyForDisplay}from"../../utilities/index.js";import{hasOwn,fieldNameFromStoreName,storeValueIsStoreObject,selectionSetMatchesResult,TypeOrFieldNameRegExp,defaultDataIdFromObject,isArray}from"./helpers.js";import{cacheSlot}from"./reactiveVars.js";import{keyArgsFnFromSpecifier,keyFieldsFnFromSpecifier}from"./key-extractor.js";function argsFromFieldSpecifier(spec){return void 0!==spec.args?spec.args:spec.field?argumentsObjectFromField(spec.field,spec.variables):null}var nullKeyFieldsFn=function(){},simpleKeyArgsFn=function(_args,context){return context.fieldName},mergeTrueFn=function(existing,incoming,_a){return(0,_a.mergeObjects)(existing,incoming)},mergeFalseFn=function(_,incoming){return incoming},Policies=function(){function Policies(config){this.config=config,this.typePolicies=Object.create(null),this.toBeAdded=Object.create(null),this.supertypeMap=new Map,this.fuzzySubtypes=new Map,this.rootIdsByTypename=Object.create(null),this.rootTypenamesById=Object.create(null),this.usingPossibleTypes=!1,this.config=__assign({dataIdFromObject:defaultDataIdFromObject},config),this.cache=this.config.cache,this.setRootTypename("Query"),this.setRootTypename("Mutation"),this.setRootTypename("Subscription"),config.possibleTypes&&this.addPossibleTypes(config.possibleTypes),config.typePolicies&&this.addTypePolicies(config.typePolicies)}return Policies.prototype.identify=function(object,partialContext){var _a,policies=this,typename=partialContext&&(partialContext.typename||(null===(_a=partialContext.storeObject)||void 0===_a?void 0:_a.__typename))||object.__typename;if(typename===this.rootTypenamesById.ROOT_QUERY)return["ROOT_QUERY"];for(var id,storeObject=partialContext&&partialContext.storeObject||object,context=__assign(__assign({},partialContext),{typename:typename,storeObject:storeObject,readField:partialContext&&partialContext.readField||function(){var options=normalizeReadFieldOptions(arguments,storeObject);return policies.readField(options,{store:policies.cache.data,variables:options.variables})}}),policy=typename&&this.getTypePolicy(typename),keyFn=policy&&policy.keyFn||this.config.dataIdFromObject;keyFn;){var specifierOrId=keyFn(__assign(__assign({},object),storeObject),context);if(!isArray(specifierOrId)){id=specifierOrId;break}keyFn=keyFieldsFnFromSpecifier(specifierOrId)}return id=id?String(id):void 0,context.keyObject?[id,context.keyObject]:[id]},Policies.prototype.addTypePolicies=function(typePolicies){var _this=this;Object.keys(typePolicies).forEach((function(typename){var _a=typePolicies[typename],queryType=_a.queryType,mutationType=_a.mutationType,subscriptionType=_a.subscriptionType,incoming=__rest(_a,["queryType","mutationType","subscriptionType"]);queryType&&_this.setRootTypename("Query",typename),mutationType&&_this.setRootTypename("Mutation",typename),subscriptionType&&_this.setRootTypename("Subscription",typename),hasOwn.call(_this.toBeAdded,typename)?_this.toBeAdded[typename].push(incoming):_this.toBeAdded[typename]=[incoming]}))},Policies.prototype.updateTypePolicy=function(typename,incoming){var _this=this,existing=this.getTypePolicy(typename),keyFields=incoming.keyFields,fields=incoming.fields;function setMerge(existing,merge){existing.merge="function"==typeof merge?merge:!0===merge?mergeTrueFn:!1===merge?mergeFalseFn:existing.merge}setMerge(existing,incoming.merge),existing.keyFn=!1===keyFields?nullKeyFieldsFn:isArray(keyFields)?keyFieldsFnFromSpecifier(keyFields):"function"==typeof keyFields?keyFields:existing.keyFn,fields&&Object.keys(fields).forEach((function(fieldName){var existing=_this.getFieldPolicy(typename,fieldName,!0),incoming=fields[fieldName];if("function"==typeof incoming)existing.read=incoming;else{var keyArgs=incoming.keyArgs,read=incoming.read,merge=incoming.merge;existing.keyFn=!1===keyArgs?simpleKeyArgsFn:isArray(keyArgs)?keyArgsFnFromSpecifier(keyArgs):"function"==typeof keyArgs?keyArgs:existing.keyFn,"function"==typeof read&&(existing.read=read),setMerge(existing,merge)}existing.read&&existing.merge&&(existing.keyFn=existing.keyFn||simpleKeyArgsFn)}))},Policies.prototype.setRootTypename=function(which,typename){void 0===typename&&(typename=which);var rootId="ROOT_"+which.toUpperCase(),old=this.rootTypenamesById[rootId];typename!==old&&(invariant(!old||old===which,5,which),old&&delete this.rootIdsByTypename[old],this.rootIdsByTypename[typename]=rootId,this.rootTypenamesById[rootId]=typename)},Policies.prototype.addPossibleTypes=function(possibleTypes){var _this=this;this.usingPossibleTypes=!0,Object.keys(possibleTypes).forEach((function(supertype){_this.getSupertypeSet(supertype,!0),possibleTypes[supertype].forEach((function(subtype){_this.getSupertypeSet(subtype,!0).add(supertype);var match=subtype.match(TypeOrFieldNameRegExp);match&&match[0]===subtype||_this.fuzzySubtypes.set(subtype,new RegExp(subtype))}))}))},Policies.prototype.getTypePolicy=function(typename){var _this=this;if(!hasOwn.call(this.typePolicies,typename)){var policy_1=this.typePolicies[typename]=Object.create(null);policy_1.fields=Object.create(null);var supertypes_1=this.supertypeMap.get(typename);!supertypes_1&&this.fuzzySubtypes.size&&(supertypes_1=this.getSupertypeSet(typename,!0),this.fuzzySubtypes.forEach((function(regExp,fuzzy){if(regExp.test(typename)){var fuzzySupertypes=_this.supertypeMap.get(fuzzy);fuzzySupertypes&&fuzzySupertypes.forEach((function(supertype){return supertypes_1.add(supertype)}))}}))),supertypes_1&&supertypes_1.size&&supertypes_1.forEach((function(supertype){var _a=_this.getTypePolicy(supertype),fields=_a.fields,rest=__rest(_a,["fields"]);Object.assign(policy_1,rest),Object.assign(policy_1.fields,fields)}))}var inbox=this.toBeAdded[typename];return inbox&&inbox.length&&inbox.splice(0).forEach((function(policy){_this.updateTypePolicy(typename,policy)})),this.typePolicies[typename]},Policies.prototype.getFieldPolicy=function(typename,fieldName,createIfMissing){if(typename){var fieldPolicies=this.getTypePolicy(typename).fields;return fieldPolicies[fieldName]||createIfMissing&&(fieldPolicies[fieldName]=Object.create(null))}},Policies.prototype.getSupertypeSet=function(subtype,createIfMissing){var supertypeSet=this.supertypeMap.get(subtype);return!supertypeSet&&createIfMissing&&this.supertypeMap.set(subtype,supertypeSet=new Set),supertypeSet},Policies.prototype.fragmentMatches=function(fragment,typename,result,variables){var _this=this;if(!fragment.typeCondition)return!0;if(!typename)return!1;var supertype=fragment.typeCondition.name.value;if(typename===supertype)return!0;if(this.usingPossibleTypes&&this.supertypeMap.has(supertype))for(var typenameSupertypeSet=this.getSupertypeSet(typename,!0),workQueue_1=[typenameSupertypeSet],maybeEnqueue_1=function(subtype){var supertypeSet=_this.getSupertypeSet(subtype,!1);supertypeSet&&supertypeSet.size&&workQueue_1.indexOf(supertypeSet)<0&&workQueue_1.push(supertypeSet)},needToCheckFuzzySubtypes=!(!result||!this.fuzzySubtypes.size),checkingFuzzySubtypes=!1,i=0;i<workQueue_1.length;++i){var supertypeSet=workQueue_1[i];if(supertypeSet.has(supertype))return typenameSupertypeSet.has(supertype)||(checkingFuzzySubtypes&&!1!==globalThis.__DEV__&&invariant.warn(6,typename,supertype),typenameSupertypeSet.add(supertype)),!0;supertypeSet.forEach(maybeEnqueue_1),needToCheckFuzzySubtypes&&i===workQueue_1.length-1&&selectionSetMatchesResult(fragment.selectionSet,result,variables)&&(needToCheckFuzzySubtypes=!1,checkingFuzzySubtypes=!0,this.fuzzySubtypes.forEach((function(regExp,fuzzyString){var match=typename.match(regExp);match&&match[0]===typename&&maybeEnqueue_1(fuzzyString)})))}return!1},Policies.prototype.hasKeyArgs=function(typename,fieldName){var policy=this.getFieldPolicy(typename,fieldName,!1);return!(!policy||!policy.keyFn)},Policies.prototype.getStoreFieldName=function(fieldSpec){var storeFieldName,typename=fieldSpec.typename,fieldName=fieldSpec.fieldName,policy=this.getFieldPolicy(typename,fieldName,!1),keyFn=policy&&policy.keyFn;if(keyFn&&typename)for(var context={typename:typename,fieldName:fieldName,field:fieldSpec.field||null,variables:fieldSpec.variables},args=argsFromFieldSpecifier(fieldSpec);keyFn;){var specifierOrString=keyFn(args,context);if(!isArray(specifierOrString)){storeFieldName=specifierOrString||fieldName;break}keyFn=keyArgsFnFromSpecifier(specifierOrString)}return void 0===storeFieldName&&(storeFieldName=fieldSpec.field?storeKeyNameFromField(fieldSpec.field,fieldSpec.variables):getStoreKeyName(fieldName,argsFromFieldSpecifier(fieldSpec))),!1===storeFieldName?fieldName:fieldName===fieldNameFromStoreName(storeFieldName)?storeFieldName:fieldName+":"+storeFieldName},Policies.prototype.readField=function(options,context){var objectOrReference=options.from;if(objectOrReference&&(options.field||options.fieldName)){if(void 0===options.typename){var typename=context.store.getFieldValue(objectOrReference,"__typename");typename&&(options.typename=typename)}var storeFieldName=this.getStoreFieldName(options),fieldName=fieldNameFromStoreName(storeFieldName),existing=context.store.getFieldValue(objectOrReference,storeFieldName),policy=this.getFieldPolicy(options.typename,fieldName,!1),read=policy&&policy.read;if(read){var readOptions=makeFieldFunctionOptions(this,objectOrReference,options,context,context.store.getStorage(isReference(objectOrReference)?objectOrReference.__ref:objectOrReference,storeFieldName));return cacheSlot.withValue(this.cache,read,[existing,readOptions])}return existing}},Policies.prototype.getReadFunction=function(typename,fieldName){var policy=this.getFieldPolicy(typename,fieldName,!1);return policy&&policy.read},Policies.prototype.getMergeFunction=function(parentTypename,fieldName,childTypename){var policy=this.getFieldPolicy(parentTypename,fieldName,!1),merge=policy&&policy.merge;return!merge&&childTypename&&(merge=(policy=this.getTypePolicy(childTypename))&&policy.merge),merge},Policies.prototype.runMergeFunction=function(existing,incoming,_a,context,storage){var field=_a.field,typename=_a.typename,merge=_a.merge;return merge===mergeTrueFn?makeMergeObjectsFunction(context.store)(existing,incoming):merge===mergeFalseFn?incoming:(context.overwrite&&(existing=void 0),merge(existing,incoming,makeFieldFunctionOptions(this,void 0,{typename:typename,fieldName:field.name.value,field:field,variables:context.variables},context,storage||Object.create(null))))},Policies}();export{Policies};function makeFieldFunctionOptions(policies,objectOrReference,fieldSpec,context,storage){var storeFieldName=policies.getStoreFieldName(fieldSpec),fieldName=fieldNameFromStoreName(storeFieldName),variables=fieldSpec.variables||context.variables,_a=context.store,toReference=_a.toReference,canRead=_a.canRead;return{args:argsFromFieldSpecifier(fieldSpec),field:fieldSpec.field||null,fieldName:fieldName,storeFieldName:storeFieldName,variables:variables,isReference:isReference,toReference:toReference,storage:storage,cache:policies.cache,canRead:canRead,readField:function(){return policies.readField(normalizeReadFieldOptions(arguments,objectOrReference,variables),context)},mergeObjects:makeMergeObjectsFunction(context.store)}}export function normalizeReadFieldOptions(readFieldArgs,objectOrReference,variables){var options,fieldNameOrOptions=readFieldArgs[0],from=readFieldArgs[1],argc=readFieldArgs.length;return"string"==typeof fieldNameOrOptions?options={fieldName:fieldNameOrOptions,from:argc>1?from:objectOrReference}:(options=__assign({},fieldNameOrOptions),hasOwn.call(options,"from")||(options.from=objectOrReference)),!1!==globalThis.__DEV__&&void 0===options.from&&!1!==globalThis.__DEV__&&invariant.warn(7,stringifyForDisplay(Array.from(readFieldArgs))),void 0===options.variables&&(options.variables=variables),options}function makeMergeObjectsFunction(store){return function(existing,incoming){if(isArray(existing)||isArray(incoming))throw newInvariantError(8);if(isNonNullObject(existing)&&isNonNullObject(incoming)){var eType=store.getFieldValue(existing,"__typename"),iType=store.getFieldValue(incoming,"__typename");if(eType&&iType&&eType!==iType)return incoming;if(isReference(existing)&&storeValueIsStoreObject(incoming))return store.merge(existing.__ref,incoming),existing;if(storeValueIsStoreObject(existing)&&isReference(incoming))return store.merge(existing,incoming.__ref),incoming;if(storeValueIsStoreObject(existing)&&storeValueIsStoreObject(incoming))return __assign(__assign({},existing),incoming)}return incoming}}
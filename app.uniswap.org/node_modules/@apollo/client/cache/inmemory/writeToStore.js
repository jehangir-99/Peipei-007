import{__assign}from"tslib";import{invariant,newInvariantError}from"../../utilities/globals/index.js";import{equal}from"@wry/equality";import{Trie}from"@wry/trie";import{Kind}from"graphql";import{getFragmentFromSelection,getDefaultValues,getOperationDefinition,getTypenameFromResult,makeReference,isField,resultKeyNameFromField,isReference,shouldInclude,cloneDeep,addTypenameToDocument,isNonEmptyArray,argumentsObjectFromField,canonicalStringify}from"../../utilities/index.js";import{isArray,makeProcessedFieldsMerger,fieldNameFromStoreName,storeValueIsStoreObject,extractFragmentContext}from"./helpers.js";import{normalizeReadFieldOptions}from"./policies.js";function getContextFlavor(context,clientOnly,deferred){var key="".concat(clientOnly).concat(deferred),flavored=context.flavors.get(key);return flavored||context.flavors.set(key,flavored=context.clientOnly===clientOnly&&context.deferred===deferred?context:__assign(__assign({},context),{clientOnly:clientOnly,deferred:deferred})),flavored}var StoreWriter=function(){function StoreWriter(cache,reader,fragments){this.cache=cache,this.reader=reader,this.fragments=fragments}return StoreWriter.prototype.writeToStore=function(store,_a){var _this=this,query=_a.query,result=_a.result,dataId=_a.dataId,variables=_a.variables,overwrite=_a.overwrite,operationDefinition=getOperationDefinition(query),merger=makeProcessedFieldsMerger();variables=__assign(__assign({},getDefaultValues(operationDefinition)),variables);var context=__assign(__assign({store:store,written:Object.create(null),merge:function(existing,incoming){return merger.merge(existing,incoming)},variables:variables,varString:canonicalStringify(variables)},extractFragmentContext(query,this.fragments)),{overwrite:!!overwrite,incomingById:new Map,clientOnly:!1,deferred:!1,flavors:new Map}),ref=this.processSelectionSet({result:result||Object.create(null),dataId:dataId,selectionSet:operationDefinition.selectionSet,mergeTree:{map:new Map},context:context});if(!isReference(ref))throw newInvariantError(11,result);return context.incomingById.forEach((function(_a,dataId){var storeObject=_a.storeObject,mergeTree=_a.mergeTree,fieldNodeSet=_a.fieldNodeSet,entityRef=makeReference(dataId);if(mergeTree&&mergeTree.map.size){var applied=_this.applyMerges(mergeTree,entityRef,storeObject,context);if(isReference(applied))return;storeObject=applied}if(!1!==globalThis.__DEV__&&!context.overwrite){var fieldsWithSelectionSets_1=Object.create(null);fieldNodeSet.forEach((function(field){field.selectionSet&&(fieldsWithSelectionSets_1[field.name.value]=!0)}));Object.keys(storeObject).forEach((function(storeFieldName){(function(storeFieldName){return!0===fieldsWithSelectionSets_1[fieldNameFromStoreName(storeFieldName)]})(storeFieldName)&&!function(storeFieldName){var childTree=mergeTree&&mergeTree.map.get(storeFieldName);return Boolean(childTree&&childTree.info&&childTree.info.merge)}(storeFieldName)&&warnAboutDataLoss(entityRef,storeObject,storeFieldName,context.store)}))}store.merge(dataId,storeObject)})),store.retain(ref.__ref),ref},StoreWriter.prototype.processSelectionSet=function(_a){var _this=this,dataId=_a.dataId,result=_a.result,selectionSet=_a.selectionSet,context=_a.context,mergeTree=_a.mergeTree,policies=this.cache.policies,incoming=Object.create(null),typename=dataId&&policies.rootTypenamesById[dataId]||getTypenameFromResult(result,selectionSet,context.fragmentMap)||dataId&&context.store.get(dataId,"__typename");"string"==typeof typename&&(incoming.__typename=typename);var readField=function(){var options=normalizeReadFieldOptions(arguments,incoming,context.variables);if(isReference(options.from)){var info=context.incomingById.get(options.from.__ref);if(info){var result_1=policies.readField(__assign(__assign({},options),{from:info.storeObject}),context);if(void 0!==result_1)return result_1}}return policies.readField(options,context)},fieldNodeSet=new Set;this.flattenFields(selectionSet,result,context,typename).forEach((function(context,field){var _a,resultFieldKey=resultKeyNameFromField(field),value=result[resultFieldKey];if(fieldNodeSet.add(field),void 0!==value){var storeFieldName=policies.getStoreFieldName({typename:typename,fieldName:field.name.value,field:field,variables:context.variables}),childTree=getChildMergeTree(mergeTree,storeFieldName),incomingValue=_this.processFieldValue(value,field,field.selectionSet?getContextFlavor(context,!1,!1):context,childTree),childTypename=void 0;field.selectionSet&&(isReference(incomingValue)||storeValueIsStoreObject(incomingValue))&&(childTypename=readField("__typename",incomingValue));var merge=policies.getMergeFunction(typename,field.name.value,childTypename);merge?childTree.info={field:field,typename:typename,merge:merge}:maybeRecycleChildMergeTree(mergeTree,storeFieldName),incoming=context.merge(incoming,((_a={})[storeFieldName]=incomingValue,_a))}else!1===globalThis.__DEV__||context.clientOnly||context.deferred||addTypenameToDocument.added(field)||policies.getReadFunction(typename,field.name.value)||!1!==globalThis.__DEV__&&invariant.error(12,resultKeyNameFromField(field),result)}));try{var _b=policies.identify(result,{typename:typename,selectionSet:selectionSet,fragmentMap:context.fragmentMap,storeObject:incoming,readField:readField}),id=_b[0],keyObject=_b[1];dataId=dataId||id,keyObject&&(incoming=context.merge(incoming,keyObject))}catch(e){if(!dataId)throw e}if("string"==typeof dataId){var dataRef=makeReference(dataId),sets=context.written[dataId]||(context.written[dataId]=[]);if(sets.indexOf(selectionSet)>=0)return dataRef;if(sets.push(selectionSet),this.reader&&this.reader.isFresh(result,dataRef,selectionSet,context))return dataRef;var previous_1=context.incomingById.get(dataId);return previous_1?(previous_1.storeObject=context.merge(previous_1.storeObject,incoming),previous_1.mergeTree=mergeMergeTrees(previous_1.mergeTree,mergeTree),fieldNodeSet.forEach((function(field){return previous_1.fieldNodeSet.add(field)}))):context.incomingById.set(dataId,{storeObject:incoming,mergeTree:mergeTreeIsEmpty(mergeTree)?void 0:mergeTree,fieldNodeSet:fieldNodeSet}),dataRef}return incoming},StoreWriter.prototype.processFieldValue=function(value,field,context,mergeTree){var _this=this;return field.selectionSet&&null!==value?isArray(value)?value.map((function(item,i){var value=_this.processFieldValue(item,field,context,getChildMergeTree(mergeTree,i));return maybeRecycleChildMergeTree(mergeTree,i),value})):this.processSelectionSet({result:value,selectionSet:field.selectionSet,context:context,mergeTree:mergeTree}):!1!==globalThis.__DEV__?cloneDeep(value):value},StoreWriter.prototype.flattenFields=function(selectionSet,result,context,typename){void 0===typename&&(typename=getTypenameFromResult(result,selectionSet,context.fragmentMap));var fieldMap=new Map,policies=this.cache.policies,limitingTrie=new Trie(!1);return function flatten(selectionSet,inheritedContext){var visitedNode=limitingTrie.lookup(selectionSet,inheritedContext.clientOnly,inheritedContext.deferred);visitedNode.visited||(visitedNode.visited=!0,selectionSet.selections.forEach((function(selection){if(shouldInclude(selection,context.variables)){var clientOnly=inheritedContext.clientOnly,deferred=inheritedContext.deferred;if(clientOnly&&deferred||!isNonEmptyArray(selection.directives)||selection.directives.forEach((function(dir){var name=dir.name.value;if("client"===name&&(clientOnly=!0),"defer"===name){var args=argumentsObjectFromField(dir,context.variables);args&&!1===args.if||(deferred=!0)}})),isField(selection)){var existing=fieldMap.get(selection);existing&&(clientOnly=clientOnly&&existing.clientOnly,deferred=deferred&&existing.deferred),fieldMap.set(selection,getContextFlavor(context,clientOnly,deferred))}else{var fragment=getFragmentFromSelection(selection,context.lookupFragment);if(!fragment&&selection.kind===Kind.FRAGMENT_SPREAD)throw newInvariantError(13,selection.name.value);fragment&&policies.fragmentMatches(fragment,typename,result,context.variables)&&flatten(fragment.selectionSet,getContextFlavor(context,clientOnly,deferred))}}})))}(selectionSet,context),fieldMap},StoreWriter.prototype.applyMerges=function(mergeTree,existing,incoming,context,getStorageArgs){var _a,_this=this;if(mergeTree.map.size&&!isReference(incoming)){var changedFields_1,e_1=isArray(incoming)||!isReference(existing)&&!storeValueIsStoreObject(existing)?void 0:existing,i_1=incoming;e_1&&!getStorageArgs&&(getStorageArgs=[isReference(e_1)?e_1.__ref:e_1]);var getValue_1=function(from,name){return isArray(from)?"number"==typeof name?from[name]:void 0:context.store.getFieldValue(from,String(name))};mergeTree.map.forEach((function(childTree,storeFieldName){var eVal=getValue_1(e_1,storeFieldName),iVal=getValue_1(i_1,storeFieldName);if(void 0!==iVal){getStorageArgs&&getStorageArgs.push(storeFieldName);var aVal=_this.applyMerges(childTree,eVal,iVal,context,getStorageArgs);aVal!==iVal&&(changedFields_1=changedFields_1||new Map).set(storeFieldName,aVal),getStorageArgs&&invariant(getStorageArgs.pop()===storeFieldName)}})),changedFields_1&&(incoming=isArray(i_1)?i_1.slice(0):__assign({},i_1),changedFields_1.forEach((function(value,name){incoming[name]=value})))}return mergeTree.info?this.cache.policies.runMergeFunction(existing,incoming,mergeTree.info,context,getStorageArgs&&(_a=context.store).getStorage.apply(_a,getStorageArgs)):incoming},StoreWriter}();export{StoreWriter};var emptyMergeTreePool=[];function getChildMergeTree(_a,name){var map=_a.map;return map.has(name)||map.set(name,emptyMergeTreePool.pop()||{map:new Map}),map.get(name)}function mergeMergeTrees(left,right){if(left===right||!right||mergeTreeIsEmpty(right))return left;if(!left||mergeTreeIsEmpty(left))return right;var info=left.info&&right.info?__assign(__assign({},left.info),right.info):left.info||right.info,needToMergeMaps=left.map.size&&right.map.size,merged={info:info,map:needToMergeMaps?new Map:left.map.size?left.map:right.map};if(needToMergeMaps){var remainingRightKeys_1=new Set(right.map.keys());left.map.forEach((function(leftTree,key){merged.map.set(key,mergeMergeTrees(leftTree,right.map.get(key))),remainingRightKeys_1.delete(key)})),remainingRightKeys_1.forEach((function(key){merged.map.set(key,mergeMergeTrees(right.map.get(key),left.map.get(key)))}))}return merged}function mergeTreeIsEmpty(tree){return!tree||!(tree.info||tree.map.size)}function maybeRecycleChildMergeTree(_a,name){var map=_a.map,childTree=map.get(name);childTree&&mergeTreeIsEmpty(childTree)&&(emptyMergeTreePool.push(childTree),map.delete(name))}var warnings=new Set;function warnAboutDataLoss(existingRef,incomingObj,storeFieldName,store){var getChild=function(objOrRef){var child=store.getFieldValue(objOrRef,storeFieldName);return"object"==typeof child&&child},existing=getChild(existingRef);if(existing){var incoming=getChild(incomingObj);if(incoming&&!isReference(existing)&&!equal(existing,incoming)&&!Object.keys(existing).every((function(key){return void 0!==store.getFieldValue(incoming,key)}))){var parentType=store.getFieldValue(existingRef,"__typename")||store.getFieldValue(incomingObj,"__typename"),fieldName=fieldNameFromStoreName(storeFieldName),typeDotName="".concat(parentType,".").concat(fieldName);if(!warnings.has(typeDotName)){warnings.add(typeDotName);var childTypenames=[];isArray(existing)||isArray(incoming)||[existing,incoming].forEach((function(child){var typename=store.getFieldValue(child,"__typename");"string"!=typeof typename||childTypenames.includes(typename)||childTypenames.push(typename)})),!1!==globalThis.__DEV__&&invariant.warn(14,fieldName,parentType,childTypenames.length?"either ensure all objects of type "+childTypenames.join(" and ")+" have an ID or a custom merge function, or ":"",typeDotName,__assign({},existing),__assign({},incoming))}}}}
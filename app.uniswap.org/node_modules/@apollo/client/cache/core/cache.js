import{__assign,__rest}from"tslib";import{wrap}from"optimism";import{Observable,cacheSizes,getFragmentQueryDocument,mergeDeepArray}from"../../utilities/index.js";import{WeakCache}from"@wry/caches";import{getApolloCacheMemoryInternals}from"../../utilities/caching/getMemoryInternals.js";import{equalByQuery}from"../../core/equalByQuery.js";var ApolloCache=function(){function ApolloCache(){this.assumeImmutableResults=!1,this.getFragmentDoc=wrap(getFragmentQueryDocument,{max:cacheSizes["cache.fragmentQueryDocuments"]||1e3,cache:WeakCache})}return ApolloCache.prototype.batch=function(options){var updateResult,_this=this,optimisticId="string"==typeof options.optimistic?options.optimistic:!1===options.optimistic?null:void 0;return this.performTransaction((function(){return updateResult=options.update(_this)}),optimisticId),updateResult},ApolloCache.prototype.recordOptimisticTransaction=function(transaction,optimisticId){this.performTransaction(transaction,optimisticId)},ApolloCache.prototype.transformDocument=function(document){return document},ApolloCache.prototype.transformForLink=function(document){return document},ApolloCache.prototype.identify=function(object){},ApolloCache.prototype.gc=function(){return[]},ApolloCache.prototype.modify=function(options){return!1},ApolloCache.prototype.readQuery=function(options,optimistic){return void 0===optimistic&&(optimistic=!!options.optimistic),this.read(__assign(__assign({},options),{rootId:options.id||"ROOT_QUERY",optimistic:optimistic}))},ApolloCache.prototype.watchFragment=function(options){var latestDiff,_this=this,fragment=options.fragment,fragmentName=options.fragmentName,from=options.from,_a=options.optimistic,optimistic=void 0===_a||_a,query=this.getFragmentDoc(fragment,fragmentName),diffOptions={returnPartialData:!0,id:"string"==typeof from?from:this.identify(from),query:query,optimistic:optimistic};return new Observable((function(observer){return _this.watch(__assign(__assign({},diffOptions),{immediate:!0,callback:function(diff){if(!latestDiff||!equalByQuery(query,{data:null==latestDiff?void 0:latestDiff.result},{data:diff.result})){var result={data:diff.result,complete:!!diff.complete};diff.missing&&(result.missing=mergeDeepArray(diff.missing.map((function(error){return error.missing})))),latestDiff=diff,observer.next(result)}}}))}))},ApolloCache.prototype.readFragment=function(options,optimistic){return void 0===optimistic&&(optimistic=!!options.optimistic),this.read(__assign(__assign({},options),{query:this.getFragmentDoc(options.fragment,options.fragmentName),rootId:options.id,optimistic:optimistic}))},ApolloCache.prototype.writeQuery=function(_a){var id=_a.id,data=_a.data,options=__rest(_a,["id","data"]);return this.write(Object.assign(options,{dataId:id||"ROOT_QUERY",result:data}))},ApolloCache.prototype.writeFragment=function(_a){var id=_a.id,data=_a.data,fragment=_a.fragment,fragmentName=_a.fragmentName,options=__rest(_a,["id","data","fragment","fragmentName"]);return this.write(Object.assign(options,{query:this.getFragmentDoc(fragment,fragmentName),dataId:id,result:data}))},ApolloCache.prototype.updateQuery=function(options,update){return this.batch({update:function(cache){var value=cache.readQuery(options),data=update(value);return null==data?value:(cache.writeQuery(__assign(__assign({},options),{data:data})),data)}})},ApolloCache.prototype.updateFragment=function(options,update){return this.batch({update:function(cache){var value=cache.readFragment(options),data=update(value);return null==data?value:(cache.writeFragment(__assign(__assign({},options),{data:data})),data)}})},ApolloCache}();export{ApolloCache};!1!==globalThis.__DEV__&&(ApolloCache.prototype.getMemoryInternals=getApolloCacheMemoryInternals);
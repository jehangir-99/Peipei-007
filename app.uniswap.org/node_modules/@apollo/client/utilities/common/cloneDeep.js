var toString=Object.prototype.toString;export function cloneDeep(value){return cloneDeepHelper(value)}function cloneDeepHelper(val,seen){switch(toString.call(val)){case"[object Array]":if((seen=seen||new Map).has(val))return seen.get(val);var copy_1=val.slice(0);return seen.set(val,copy_1),copy_1.forEach((function(child,i){copy_1[i]=cloneDeepHelper(child,seen)})),copy_1;case"[object Object]":if((seen=seen||new Map).has(val))return seen.get(val);var copy_2=Object.create(Object.getPrototypeOf(val));return seen.set(val,copy_2),Object.keys(val).forEach((function(key){copy_2[key]=cloneDeepHelper(val[key],seen)})),copy_2;default:return val}}
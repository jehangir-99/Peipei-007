import{__assign,__spreadArray}from"tslib";import{invariant,newInvariantError}from"../globals/index.js";export function getFragmentQueryDocument(document,fragmentName){var actualFragmentName=fragmentName,fragments=[];return document.definitions.forEach((function(definition){if("OperationDefinition"===definition.kind)throw newInvariantError(72,definition.operation,definition.name?" named '".concat(definition.name.value,"'"):"");"FragmentDefinition"===definition.kind&&fragments.push(definition)})),void 0===actualFragmentName&&(invariant(1===fragments.length,73,fragments.length),actualFragmentName=fragments[0].name.value),__assign(__assign({},document),{definitions:__spreadArray([{kind:"OperationDefinition",operation:"query",selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:actualFragmentName}}]}}],document.definitions,!0)})}export function createFragmentMap(fragments){void 0===fragments&&(fragments=[]);var symTable={};return fragments.forEach((function(fragment){symTable[fragment.name.value]=fragment})),symTable}export function getFragmentFromSelection(selection,fragmentMap){switch(selection.kind){case"InlineFragment":return selection;case"FragmentSpread":var fragmentName=selection.name.value;if("function"==typeof fragmentMap)return fragmentMap(fragmentName);var fragment=fragmentMap&&fragmentMap[fragmentName];return invariant(fragment,74,fragmentName),fragment||null;default:return null}}
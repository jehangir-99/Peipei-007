import{__rest}from"tslib";import equal from"@wry/equality";import{createFragmentMap,getFragmentDefinitions,getFragmentFromSelection,getMainDefinition,isField,resultKeyNameFromField,shouldInclude}from"../utilities/index.js";export function equalByQuery(query,_a,_b,variables){var aData=_a.data,aRest=__rest(_a,["data"]),bData=_b.data,bRest=__rest(_b,["data"]);return equal(aRest,bRest)&&equalBySelectionSet(getMainDefinition(query).selectionSet,aData,bData,{fragmentMap:createFragmentMap(getFragmentDefinitions(query)),variables:variables})}function equalBySelectionSet(selectionSet,aResult,bResult,context){if(aResult===bResult)return!0;var seenSelections=new Set;return selectionSet.selections.every((function(selection){if(seenSelections.has(selection))return!0;if(seenSelections.add(selection),!shouldInclude(selection,context.variables))return!0;if(selectionHasNonreactiveDirective(selection))return!0;if(isField(selection)){var resultKey=resultKeyNameFromField(selection),aResultChild=aResult&&aResult[resultKey],bResultChild=bResult&&bResult[resultKey],childSelectionSet=selection.selectionSet;if(!childSelectionSet)return equal(aResultChild,bResultChild);var aChildIsArray=Array.isArray(aResultChild),bChildIsArray=Array.isArray(bResultChild);if(aChildIsArray!==bChildIsArray)return!1;if(aChildIsArray&&bChildIsArray){var length_1=aResultChild.length;if(bResultChild.length!==length_1)return!1;for(var i=0;i<length_1;++i)if(!equalBySelectionSet(childSelectionSet,aResultChild[i],bResultChild[i],context))return!1;return!0}return equalBySelectionSet(childSelectionSet,aResultChild,bResultChild,context)}var fragment=getFragmentFromSelection(selection,context.fragmentMap);return fragment?!!selectionHasNonreactiveDirective(fragment)||equalBySelectionSet(fragment.selectionSet,aResult,bResult,context):void 0}))}function selectionHasNonreactiveDirective(selection){return!!selection.directives&&selection.directives.some(directiveIsNonreactive)}function directiveIsNonreactive(dir){return"nonreactive"===dir.name.value}
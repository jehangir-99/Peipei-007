import{invariant}from"../../utilities/globals/index.js";import*as React from"rehackt";import{equal}from"@wry/equality";import{DocumentType,verifyDocumentType}from"../parser/index.js";import{useApolloClient}from"./useApolloClient.js";export function useSubscription(subscription,options){var hasIssuedDeprecationWarningRef=React.useRef(!1),client=useApolloClient(null==options?void 0:options.client);verifyDocumentType(subscription,DocumentType.Subscription);var _a=React.useState({loading:!(null==options?void 0:options.skip),error:void 0,data:void 0,variables:null==options?void 0:options.variables}),result=_a[0],setResult=_a[1];hasIssuedDeprecationWarningRef.current||(hasIssuedDeprecationWarningRef.current=!0,(null==options?void 0:options.onSubscriptionData)&&!1!==globalThis.__DEV__&&invariant.warn(options.onData?52:53),(null==options?void 0:options.onSubscriptionComplete)&&!1!==globalThis.__DEV__&&invariant.warn(options.onComplete?54:55));var _b=React.useState((function(){return(null==options?void 0:options.skip)?null:client.subscribe({query:subscription,variables:null==options?void 0:options.variables,fetchPolicy:null==options?void 0:options.fetchPolicy,context:null==options?void 0:options.context})})),observable=_b[0],setObservable=_b[1],canResetObservableRef=React.useRef(!1);React.useEffect((function(){return function(){canResetObservableRef.current=!0}}),[]);var ref=React.useRef({client:client,subscription:subscription,options:options});return React.useEffect((function(){var _a,_b,_c,_d,shouldResubscribe=null==options?void 0:options.shouldResubscribe;"function"==typeof shouldResubscribe&&(shouldResubscribe=!!shouldResubscribe(options)),(null==options?void 0:options.skip)?(!(null==options?void 0:options.skip)!=!(null===(_a=ref.current.options)||void 0===_a?void 0:_a.skip)||canResetObservableRef.current)&&(setResult({loading:!1,data:void 0,error:void 0,variables:null==options?void 0:options.variables}),setObservable(null),canResetObservableRef.current=!1):(!1===shouldResubscribe||client===ref.current.client&&subscription===ref.current.subscription&&(null==options?void 0:options.fetchPolicy)===(null===(_b=ref.current.options)||void 0===_b?void 0:_b.fetchPolicy)&&!(null==options?void 0:options.skip)==!(null===(_c=ref.current.options)||void 0===_c?void 0:_c.skip)&&equal(null==options?void 0:options.variables,null===(_d=ref.current.options)||void 0===_d?void 0:_d.variables))&&!canResetObservableRef.current||(setResult({loading:!0,data:void 0,error:void 0,variables:null==options?void 0:options.variables}),setObservable(client.subscribe({query:subscription,variables:null==options?void 0:options.variables,fetchPolicy:null==options?void 0:options.fetchPolicy,context:null==options?void 0:options.context})),canResetObservableRef.current=!1),Object.assign(ref.current,{client:client,subscription:subscription,options:options})}),[client,subscription,options,canResetObservableRef.current]),React.useEffect((function(){if(observable){var subscriptionStopped=!1,subscription=observable.subscribe({next:function(fetchResult){var _a,_b;if(!subscriptionStopped){var result={loading:!1,data:fetchResult.data,error:void 0,variables:null==options?void 0:options.variables};setResult(result),(null===(_a=ref.current.options)||void 0===_a?void 0:_a.onData)?ref.current.options.onData({client:client,data:result}):(null===(_b=ref.current.options)||void 0===_b?void 0:_b.onSubscriptionData)&&ref.current.options.onSubscriptionData({client:client,subscriptionData:result})}},error:function(error){var _a,_b;subscriptionStopped||(setResult({loading:!1,data:void 0,error:error,variables:null==options?void 0:options.variables}),null===(_b=null===(_a=ref.current.options)||void 0===_a?void 0:_a.onError)||void 0===_b||_b.call(_a,error))},complete:function(){var _a,_b;subscriptionStopped||((null===(_a=ref.current.options)||void 0===_a?void 0:_a.onComplete)?ref.current.options.onComplete():(null===(_b=ref.current.options)||void 0===_b?void 0:_b.onSubscriptionComplete)&&ref.current.options.onSubscriptionComplete())}});return function(){subscriptionStopped=!0,setTimeout((function(){subscription.unsubscribe()}))}}}),[observable]),result}
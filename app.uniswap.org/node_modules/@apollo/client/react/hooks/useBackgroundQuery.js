import{__spreadArray}from"tslib";import*as React from"rehackt";import{useApolloClient}from"./useApolloClient.js";import{getSuspenseCache,unwrapQueryRef,updateWrappedQueryRef,wrapQueryRef}from"../internal/index.js";import{wrapHook}from"./internal/index.js";import{useWatchQueryOptions}from"./useSuspenseQuery.js";import{canonicalStringify}from"../../cache/index.js";export function useBackgroundQuery(query,options){return void 0===options&&(options=Object.create(null)),wrapHook("useBackgroundQuery",_useBackgroundQuery,useApolloClient("object"==typeof options?options.client:void 0))(query,options)}function _useBackgroundQuery(query,options){var client=useApolloClient(options.client),suspenseCache=getSuspenseCache(client),watchQueryOptions=useWatchQueryOptions({client:client,query:query,options:options}),fetchPolicy=watchQueryOptions.fetchPolicy,variables=watchQueryOptions.variables,_a=options.queryKey,queryKey=void 0===_a?[]:_a,didFetchResult=React.useRef("standby"!==fetchPolicy);didFetchResult.current||(didFetchResult.current="standby"!==fetchPolicy);var cacheKey=__spreadArray([query,canonicalStringify(variables)],[].concat(queryKey),!0),queryRef=suspenseCache.getQueryRef(cacheKey,(function(){return client.watchQuery(watchQueryOptions)})),_b=React.useState(wrapQueryRef(queryRef)),wrappedQueryRef=_b[0],setWrappedQueryRef=_b[1];if(unwrapQueryRef(wrappedQueryRef)!==queryRef&&setWrappedQueryRef(wrapQueryRef(queryRef)),queryRef.didChangeOptions(watchQueryOptions)){var promise=queryRef.applyOptions(watchQueryOptions);updateWrappedQueryRef(wrappedQueryRef,promise)}React.useEffect((function(){var id=setTimeout((function(){queryRef.disposed&&suspenseCache.add(cacheKey,queryRef)}));return function(){return clearTimeout(id)}}));var fetchMore=React.useCallback((function(options){var promise=queryRef.fetchMore(options);return setWrappedQueryRef(wrapQueryRef(queryRef)),promise}),[queryRef]),refetch=React.useCallback((function(variables){var promise=queryRef.refetch(variables);return setWrappedQueryRef(wrapQueryRef(queryRef)),promise}),[queryRef]);return React.useEffect((function(){return queryRef.softRetain()}),[queryRef]),[didFetchResult.current?wrappedQueryRef:void 0,{fetchMore:fetchMore,refetch:refetch}]}
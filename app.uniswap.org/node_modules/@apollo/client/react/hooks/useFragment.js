import{__assign,__rest}from"tslib";import*as React from"rehackt";import{mergeDeepArray}from"../../utilities/index.js";import{useApolloClient}from"./useApolloClient.js";import{useSyncExternalStore}from"./useSyncExternalStore.js";import{useDeepMemo,useLazyRef,wrapHook}from"./internal/index.js";import equal from"@wry/equality";export function useFragment(options){return wrapHook("useFragment",_useFragment,useApolloClient(options.client))(options)}function _useFragment(options){var cache=useApolloClient(options.client).cache,diffOptions=useDeepMemo((function(){var fragment=options.fragment,fragmentName=options.fragmentName,from=options.from,_a=options.optimistic,optimistic=void 0===_a||_a,rest=__rest(options,["fragment","fragmentName","from","optimistic"]);return __assign(__assign({},rest),{returnPartialData:!0,id:"string"==typeof from?from:cache.identify(from),query:cache.getFragmentDoc(fragment,fragmentName),optimistic:optimistic})}),[options]),resultRef=useLazyRef((function(){return diffToResult(cache.diff(diffOptions))})),stableOptions=useDeepMemo((function(){return options}),[options]);React.useMemo((function(){resultRef.current=diffToResult(cache.diff(diffOptions))}),[diffOptions,cache]);var getSnapshot=React.useCallback((function(){return resultRef.current}),[]);return useSyncExternalStore(React.useCallback((function(forceUpdate){var lastTimeout=0,subscription=cache.watchFragment(stableOptions).subscribe({next:function(result){equal(result,resultRef.current)||(resultRef.current=result,clearTimeout(lastTimeout),lastTimeout=setTimeout(forceUpdate))}});return function(){subscription.unsubscribe(),clearTimeout(lastTimeout)}}),[cache,stableOptions]),getSnapshot,getSnapshot)}function diffToResult(diff){var result={data:diff.result,complete:!!diff.complete};return diff.missing&&(result.missing=mergeDeepArray(diff.missing.map((function(error){return error.missing})))),result}
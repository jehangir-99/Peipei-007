import{dispatch}from"d3-dispatch";import{dragDisable,dragEnable}from"d3-drag";import{interpolate}from"d3-interpolate";import{pointer,select}from"d3-selection";import{interrupt}from"d3-transition";import constant from"./constant.js";import BrushEvent from"./event.js";import noevent,{nopropagation}from"./noevent.js";var MODE_DRAG={name:"drag"},MODE_SPACE={name:"space"},MODE_HANDLE={name:"handle"},MODE_CENTER={name:"center"};const{abs:abs,max:max,min:min}=Math;function number1(e){return[+e[0],+e[1]]}function number2(e){return[number1(e[0]),number1(e[1])]}var X={name:"x",handles:["w","e"].map(type),input:function(x,e){return null==x?null:[[+x[0],e[0][1]],[+x[1],e[1][1]]]},output:function(xy){return xy&&[xy[0][0],xy[1][0]]}},Y={name:"y",handles:["n","s"].map(type),input:function(y,e){return null==y?null:[[e[0][0],+y[0]],[e[1][0],+y[1]]]},output:function(xy){return xy&&[xy[0][1],xy[1][1]]}},XY={name:"xy",handles:["n","w","e","s","nw","ne","sw","se"].map(type),input:function(xy){return null==xy?null:number2(xy)},output:function(xy){return xy}},cursors={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},flipX={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},flipY={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},signsX={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},signsY={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function type(t){return{type:t}}function defaultFilter(event){return!event.ctrlKey&&!event.button}function defaultExtent(){var svg=this.ownerSVGElement||this;return svg.hasAttribute("viewBox")?[[(svg=svg.viewBox.baseVal).x,svg.y],[svg.x+svg.width,svg.y+svg.height]]:[[0,0],[svg.width.baseVal.value,svg.height.baseVal.value]]}function defaultTouchable(){return navigator.maxTouchPoints||"ontouchstart"in this}function local(node){for(;!node.__brush;)if(!(node=node.parentNode))return;return node.__brush}function empty(extent){return extent[0][0]===extent[1][0]||extent[0][1]===extent[1][1]}export function brushSelection(node){var state=node.__brush;return state?state.dim.output(state.selection):null}export function brushX(){return brush(X)}export function brushY(){return brush(Y)}export default function(){return brush(XY)}function brush(dim){var touchending,extent=defaultExtent,filter=defaultFilter,touchable=defaultTouchable,keys=!0,listeners=dispatch("start","brush","end"),handleSize=6;function brush(group){var overlay=group.property("__brush",initialize).selectAll(".overlay").data([type("overlay")]);overlay.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",cursors.overlay).merge(overlay).each((function(){var extent=local(this).extent;select(this).attr("x",extent[0][0]).attr("y",extent[0][1]).attr("width",extent[1][0]-extent[0][0]).attr("height",extent[1][1]-extent[0][1])})),group.selectAll(".selection").data([type("selection")]).enter().append("rect").attr("class","selection").attr("cursor",cursors.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var handle=group.selectAll(".handle").data(dim.handles,(function(d){return d.type}));handle.exit().remove(),handle.enter().append("rect").attr("class",(function(d){return"handle handle--"+d.type})).attr("cursor",(function(d){return cursors[d.type]})),group.each(redraw).attr("fill","none").attr("pointer-events","all").on("mousedown.brush",started).filter(touchable).on("touchstart.brush",started).on("touchmove.brush",touchmoved).on("touchend.brush touchcancel.brush",touchended).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function redraw(){var group=select(this),selection=local(this).selection;selection?(group.selectAll(".selection").style("display",null).attr("x",selection[0][0]).attr("y",selection[0][1]).attr("width",selection[1][0]-selection[0][0]).attr("height",selection[1][1]-selection[0][1]),group.selectAll(".handle").style("display",null).attr("x",(function(d){return"e"===d.type[d.type.length-1]?selection[1][0]-handleSize/2:selection[0][0]-handleSize/2})).attr("y",(function(d){return"s"===d.type[0]?selection[1][1]-handleSize/2:selection[0][1]-handleSize/2})).attr("width",(function(d){return"n"===d.type||"s"===d.type?selection[1][0]-selection[0][0]+handleSize:handleSize})).attr("height",(function(d){return"e"===d.type||"w"===d.type?selection[1][1]-selection[0][1]+handleSize:handleSize}))):group.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function emitter(that,args,clean){var emit=that.__brush.emitter;return!emit||clean&&emit.clean?new Emitter(that,args,clean):emit}function Emitter(that,args,clean){this.that=that,this.args=args,this.state=that.__brush,this.active=0,this.clean=clean}function started(event){if((!touchending||event.touches)&&filter.apply(this,arguments)){var w0,w1,n0,n1,e0,e1,s0,s1,moving,lockX,lockY,that=this,type=event.target.__data__.type,mode="selection"===(keys&&event.metaKey?type="overlay":type)?MODE_DRAG:keys&&event.altKey?MODE_CENTER:MODE_HANDLE,signX=dim===Y?null:signsX[type],signY=dim===X?null:signsY[type],state=local(that),extent=state.extent,selection=state.selection,W=extent[0][0],N=extent[0][1],E=extent[1][0],S=extent[1][1],dx=0,dy=0,shifting=signX&&signY&&keys&&event.shiftKey,points=Array.from(event.touches||[event],(t=>{const i=t.identifier;return(t=pointer(t,that)).point0=t.slice(),t.identifier=i,t}));interrupt(that);var emit=emitter(that,arguments,!0).beforestart();if("overlay"===type){selection&&(moving=!0);const pts=[points[0],points[1]||points[0]];state.selection=selection=[[w0=dim===Y?W:min(pts[0][0],pts[1][0]),n0=dim===X?N:min(pts[0][1],pts[1][1])],[e0=dim===Y?E:max(pts[0][0],pts[1][0]),s0=dim===X?S:max(pts[0][1],pts[1][1])]],points.length>1&&move(event)}else w0=selection[0][0],n0=selection[0][1],e0=selection[1][0],s0=selection[1][1];w1=w0,n1=n0,e1=e0,s1=s0;var group=select(that).attr("pointer-events","none"),overlay=group.selectAll(".overlay").attr("cursor",cursors[type]);if(event.touches)emit.moved=moved,emit.ended=ended;else{var view=select(event.view).on("mousemove.brush",moved,!0).on("mouseup.brush",ended,!0);keys&&view.on("keydown.brush",(function(event){switch(event.keyCode){case 16:shifting=signX&&signY;break;case 18:mode===MODE_HANDLE&&(signX&&(e0=e1-dx*signX,w0=w1+dx*signX),signY&&(s0=s1-dy*signY,n0=n1+dy*signY),mode=MODE_CENTER,move(event));break;case 32:mode!==MODE_HANDLE&&mode!==MODE_CENTER||(signX<0?e0=e1-dx:signX>0&&(w0=w1-dx),signY<0?s0=s1-dy:signY>0&&(n0=n1-dy),mode=MODE_SPACE,overlay.attr("cursor",cursors.selection),move(event));break;default:return}noevent(event)}),!0).on("keyup.brush",(function(event){switch(event.keyCode){case 16:shifting&&(lockX=lockY=shifting=!1,move(event));break;case 18:mode===MODE_CENTER&&(signX<0?e0=e1:signX>0&&(w0=w1),signY<0?s0=s1:signY>0&&(n0=n1),mode=MODE_HANDLE,move(event));break;case 32:mode===MODE_SPACE&&(event.altKey?(signX&&(e0=e1-dx*signX,w0=w1+dx*signX),signY&&(s0=s1-dy*signY,n0=n1+dy*signY),mode=MODE_CENTER):(signX<0?e0=e1:signX>0&&(w0=w1),signY<0?s0=s1:signY>0&&(n0=n1),mode=MODE_HANDLE),overlay.attr("cursor",cursors[type]),move(event));break;default:return}noevent(event)}),!0),dragDisable(event.view)}redraw.call(that),emit.start(event,mode.name)}function moved(event){for(const p of event.changedTouches||[event])for(const d of points)d.identifier===p.identifier&&(d.cur=pointer(p,that));if(shifting&&!lockX&&!lockY&&1===points.length){const point=points[0];abs(point.cur[0]-point[0])>abs(point.cur[1]-point[1])?lockY=!0:lockX=!0}for(const point of points)point.cur&&(point[0]=point.cur[0],point[1]=point.cur[1]);moving=!0,noevent(event),move(event)}function move(event){const point=points[0],point0=point.point0;var t;switch(dx=point[0]-point0[0],dy=point[1]-point0[1],mode){case MODE_SPACE:case MODE_DRAG:signX&&(dx=max(W-w0,min(E-e0,dx)),w1=w0+dx,e1=e0+dx),signY&&(dy=max(N-n0,min(S-s0,dy)),n1=n0+dy,s1=s0+dy);break;case MODE_HANDLE:points[1]?(signX&&(w1=max(W,min(E,points[0][0])),e1=max(W,min(E,points[1][0])),signX=1),signY&&(n1=max(N,min(S,points[0][1])),s1=max(N,min(S,points[1][1])),signY=1)):(signX<0?(dx=max(W-w0,min(E-w0,dx)),w1=w0+dx,e1=e0):signX>0&&(dx=max(W-e0,min(E-e0,dx)),w1=w0,e1=e0+dx),signY<0?(dy=max(N-n0,min(S-n0,dy)),n1=n0+dy,s1=s0):signY>0&&(dy=max(N-s0,min(S-s0,dy)),n1=n0,s1=s0+dy));break;case MODE_CENTER:signX&&(w1=max(W,min(E,w0-dx*signX)),e1=max(W,min(E,e0+dx*signX))),signY&&(n1=max(N,min(S,n0-dy*signY)),s1=max(N,min(S,s0+dy*signY)))}e1<w1&&(signX*=-1,t=w0,w0=e0,e0=t,t=w1,w1=e1,e1=t,type in flipX&&overlay.attr("cursor",cursors[type=flipX[type]])),s1<n1&&(signY*=-1,t=n0,n0=s0,s0=t,t=n1,n1=s1,s1=t,type in flipY&&overlay.attr("cursor",cursors[type=flipY[type]])),state.selection&&(selection=state.selection),lockX&&(w1=selection[0][0],e1=selection[1][0]),lockY&&(n1=selection[0][1],s1=selection[1][1]),selection[0][0]===w1&&selection[0][1]===n1&&selection[1][0]===e1&&selection[1][1]===s1||(state.selection=[[w1,n1],[e1,s1]],redraw.call(that),emit.brush(event,mode.name))}function ended(event){if(nopropagation(event),event.touches){if(event.touches.length)return;touchending&&clearTimeout(touchending),touchending=setTimeout((function(){touchending=null}),500)}else dragEnable(event.view,moving),view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);group.attr("pointer-events","all"),overlay.attr("cursor",cursors.overlay),state.selection&&(selection=state.selection),empty(selection)&&(state.selection=null,redraw.call(that)),emit.end(event,mode.name)}}function touchmoved(event){emitter(this,arguments).moved(event)}function touchended(event){emitter(this,arguments).ended(event)}function initialize(){var state=this.__brush||{selection:null};return state.extent=number2(extent.apply(this,arguments)),state.dim=dim,state}return brush.move=function(group,selection,event){group.tween?group.on("start.brush",(function(event){emitter(this,arguments).beforestart().start(event)})).on("interrupt.brush end.brush",(function(event){emitter(this,arguments).end(event)})).tween("brush",(function(){var that=this,state=that.__brush,emit=emitter(that,arguments),selection0=state.selection,selection1=dim.input("function"==typeof selection?selection.apply(this,arguments):selection,state.extent),i=interpolate(selection0,selection1);function tween(t){state.selection=1===t&&null===selection1?null:i(t),redraw.call(that),emit.brush()}return null!==selection0&&null!==selection1?tween:tween(1)})):group.each((function(){var args=arguments,state=this.__brush,selection1=dim.input("function"==typeof selection?selection.apply(this,args):selection,state.extent),emit=emitter(this,args).beforestart();interrupt(this),state.selection=null===selection1?null:selection1,redraw.call(this),emit.start(event).brush(event).end(event)}))},brush.clear=function(group,event){brush.move(group,null,event)},Emitter.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(event,mode){return this.starting?(this.starting=!1,this.emit("start",event,mode)):this.emit("brush",event),this},brush:function(event,mode){return this.emit("brush",event,mode),this},end:function(event,mode){return 0==--this.active&&(delete this.state.emitter,this.emit("end",event,mode)),this},emit:function(type,event,mode){var d=select(this.that).datum();listeners.call(type,this.that,new BrushEvent(type,{sourceEvent:event,target:brush,selection:dim.output(this.state.selection),mode:mode,dispatch:listeners}),d)}},brush.extent=function(_){return arguments.length?(extent="function"==typeof _?_:constant(number2(_)),brush):extent},brush.filter=function(_){return arguments.length?(filter="function"==typeof _?_:constant(!!_),brush):filter},brush.touchable=function(_){return arguments.length?(touchable="function"==typeof _?_:constant(!!_),brush):touchable},brush.handleSize=function(_){return arguments.length?(handleSize=+_,brush):handleSize},brush.keyModifiers=function(_){return arguments.length?(keys=!!_,brush):keys},brush.on=function(){var value=listeners.on.apply(listeners,arguments);return value===listeners?brush:value},brush}
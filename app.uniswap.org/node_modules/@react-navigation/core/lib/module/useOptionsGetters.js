import*as React from"react";import NavigationBuilderContext from"./NavigationBuilderContext";import NavigationStateContext from"./NavigationStateContext";export default function useOptionsGetters(_ref){let{key:key,options:options,navigation:navigation}=_ref;const optionsRef=React.useRef(options),optionsGettersFromChildRef=React.useRef({}),{onOptionsChange:onOptionsChange}=React.useContext(NavigationBuilderContext),{addOptionsGetter:parentAddOptionsGetter}=React.useContext(NavigationStateContext),optionsChangeListener=React.useCallback((()=>{var _navigation$isFocused;const isFocused=null===(_navigation$isFocused=null==navigation?void 0:navigation.isFocused())||void 0===_navigation$isFocused||_navigation$isFocused,hasChildren=Object.keys(optionsGettersFromChildRef.current).length;var _optionsRef$current;isFocused&&!hasChildren&&onOptionsChange(null!==(_optionsRef$current=optionsRef.current)&&void 0!==_optionsRef$current?_optionsRef$current:{})}),[navigation,onOptionsChange]);React.useEffect((()=>(optionsRef.current=options,optionsChangeListener(),null==navigation?void 0:navigation.addListener("focus",optionsChangeListener))),[navigation,options,optionsChangeListener]);const getOptionsFromListener=React.useCallback((()=>{for(let key in optionsGettersFromChildRef.current)if(optionsGettersFromChildRef.current.hasOwnProperty(key)){var _optionsGettersFromCh,_optionsGettersFromCh2;const result=null===(_optionsGettersFromCh=(_optionsGettersFromCh2=optionsGettersFromChildRef.current)[key])||void 0===_optionsGettersFromCh?void 0:_optionsGettersFromCh.call(_optionsGettersFromCh2);if(null!==result)return result}return null}),[]),getCurrentOptions=React.useCallback((()=>{var _navigation$isFocused2;if(!(null===(_navigation$isFocused2=null==navigation?void 0:navigation.isFocused())||void 0===_navigation$isFocused2||_navigation$isFocused2))return null;const optionsFromListener=getOptionsFromListener();return null!==optionsFromListener?optionsFromListener:optionsRef.current}),[navigation,getOptionsFromListener]);React.useEffect((()=>null==parentAddOptionsGetter?void 0:parentAddOptionsGetter(key,getCurrentOptions)),[getCurrentOptions,parentAddOptionsGetter,key]);const addOptionsGetter=React.useCallback(((key,getter)=>(optionsGettersFromChildRef.current[key]=getter,optionsChangeListener(),()=>{delete optionsGettersFromChildRef.current[key],optionsChangeListener()})),[optionsChangeListener]);return{addOptionsGetter:addOptionsGetter,getCurrentOptions:getCurrentOptions}}
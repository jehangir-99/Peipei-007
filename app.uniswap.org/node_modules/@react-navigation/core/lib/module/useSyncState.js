import*as React from"react";const UNINTIALIZED_STATE={};export default function useSyncState(initialState){const stateRef=React.useRef(UNINTIALIZED_STATE),isSchedulingRef=React.useRef(!1),isMountedRef=React.useRef(!0);React.useEffect((()=>(isMountedRef.current=!0,()=>{isMountedRef.current=!1})),[]),stateRef.current===UNINTIALIZED_STATE&&(stateRef.current="function"==typeof initialState?initialState():initialState);const[trackingState,setTrackingState]=React.useState(stateRef.current),getState=React.useCallback((()=>stateRef.current),[]),setState=React.useCallback((state=>{state!==stateRef.current&&isMountedRef.current&&(stateRef.current=state,isSchedulingRef.current||setTrackingState(state))}),[]),scheduleUpdate=React.useCallback((callback=>{isSchedulingRef.current=!0;try{callback()}finally{isSchedulingRef.current=!1}}),[]),flushUpdates=React.useCallback((()=>{isMountedRef.current&&setTrackingState(stateRef.current)}),[]);trackingState!==stateRef.current&&setTrackingState(stateRef.current);const state=stateRef.current;return React.useDebugValue(state),[state,getState,setState,scheduleUpdate,flushUpdates]}
"use strict";const _workletStackDetails=new Map;export function registerWorkletStackDetails(hash,stackDetails){_workletStackDetails.set(hash,stackDetails)}function getBundleOffset(error){var _error$stack,_error$stack$split;const frame=null===(_error$stack=error.stack)||void 0===_error$stack||null===(_error$stack$split=_error$stack.split("\n"))||void 0===_error$stack$split?void 0:_error$stack$split[0];if(frame){const parsedFrame=/@([^@]+):(\d+):(\d+)/.exec(frame);if(parsedFrame){const[,file,line,col]=parsedFrame;return[file,Number(line),Number(col)]}}return["unknown",0,0]}function processStack(stack){const workletStackEntries=stack.match(/worklet_(\d+):(\d+):(\d+)/g);let result=stack;return null==workletStackEntries||workletStackEntries.forEach((match=>{const[,hash,origLine,origCol]=match.split(/:|_/).map(Number),errorDetails=_workletStackDetails.get(hash);if(!errorDetails)return;const[error,lineOffset,colOffset]=errorDetails,[bundleFile,bundleLine,bundleCol]=getBundleOffset(error),line=origLine+bundleLine+lineOffset,col=origCol+bundleCol+colOffset;result=result.replace(match,`${bundleFile}:${line}:${col}`)})),result}export function reportFatalErrorOnJS(_ref){let{message:message,stack:stack}=_ref;const error=new Error;error.message=message,error.stack=stack?processStack(stack):void 0,error.name="ReanimatedError",error.jsEngine="reanimated",global.ErrorUtils.reportFatalError(error)}
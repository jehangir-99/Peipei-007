"use strict";import{Bezier}from"./Bezier";function linear(t){return t}function ease(t){return Bezier(.42,0,1,1)(t)}function quad(t){return t*t}function cubic(t){return t*t*t}function poly(n){return t=>Math.pow(t,n)}function sin(t){return 1-Math.cos(t*Math.PI/2)}function circle(t){return 1-Math.sqrt(1-t*t)}function exp(t){return Math.pow(2,10*(t-1))}function elastic(){const p=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:1)*Math.PI;return t=>1-Math.pow(Math.cos(t*Math.PI/2),3)*Math.cos(t*p)}function back(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1.70158;return t=>t*t*((s+1)*t-s)}function bounce(t){if(t<1/2.75)return 7.5625*t*t;if(t<2/2.75){const t2=t-1.5/2.75;return 7.5625*t2*t2+.75}if(t<2.5/2.75){const t2=t-2.25/2.75;return 7.5625*t2*t2+.9375}const t2=t-2.625/2.75;return 7.5625*t2*t2+.984375}function bezier(x1,y1,x2,y2){return{factory:()=>Bezier(x1,y1,x2,y2)}}function bezierFn(x1,y1,x2,y2){return Bezier(x1,y1,x2,y2)}function in_(easing){return easing}function out(easing){return t=>1-easing(1-t)}function inOut(easing){return t=>t<.5?easing(2*t)/2:1-easing(2*(1-t))/2}function steps(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,roundToNextStep=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return t=>{const value=Math.min(Math.max(t,0),1)*n;return roundToNextStep?Math.ceil(value)/n:Math.floor(value)/n}}const EasingObject={linear:linear,ease:ease,quad:quad,cubic:cubic,poly:poly,sin:sin,circle:circle,exp:exp,elastic:elastic,back:back,bounce:bounce,bezier:bezier,bezierFn:bezierFn,steps:steps,in:in_,out:out,inOut:inOut};export const Easing=EasingObject;
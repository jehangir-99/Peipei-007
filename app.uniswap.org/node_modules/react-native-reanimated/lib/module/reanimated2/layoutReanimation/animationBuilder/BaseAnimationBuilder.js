"use strict";function _defineProperty(obj,key,value){return(key=_toPropertyKey(key))in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _toPropertyKey(arg){var key=_toPrimitive(arg,"string");return"symbol"==typeof key?key:String(key)}function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}import{withDelay}from"../../animation";import{ReduceMotion}from"../../commonTypes";import{getReduceMotionFromConfig}from"../../animation/util";export class BaseAnimationBuilder{constructor(){_defineProperty(this,"durationV",void 0),_defineProperty(this,"delayV",void 0),_defineProperty(this,"reduceMotionV",ReduceMotion.System),_defineProperty(this,"randomizeDelay",!1),_defineProperty(this,"callbackV",void 0),_defineProperty(this,"build",(()=>{throw new Error("[Reanimated] Unimplemented method in child class.")}))}static duration(durationMs){return this.createInstance().duration(durationMs)}duration(durationMs){return this.durationV=durationMs,this}static delay(delayMs){return this.createInstance().delay(delayMs)}delay(delayMs){return this.delayV=delayMs,this}static withCallback(callback){return this.createInstance().withCallback(callback)}withCallback(callback){return this.callbackV=callback,this}static reduceMotion(reduceMotion){return this.createInstance().reduceMotion(reduceMotion)}reduceMotion(reduceMotionV){return this.reduceMotionV=reduceMotionV,this}static getDuration(){return 300}getDuration(){return this.durationV??300}static randomDelay(){return this.createInstance().randomDelay()}randomDelay(){return this.randomizeDelay=!0,this}getDelay(){return this.randomizeDelay?Math.random()*(this.delayV??1e3):this.delayV??0}getReduceMotion(){return this.reduceMotionV}getDelayFunction(){const isDelayProvided=this.randomizeDelay||this.delayV,reduceMotion=this.getReduceMotion();return isDelayProvided?(delay,animation)=>withDelay(delay,animation,reduceMotion):(_,animation)=>(animation.reduceMotion=getReduceMotionFromConfig(reduceMotion),animation)}static build(){return this.createInstance().build()}}_defineProperty(BaseAnimationBuilder,"createInstance",void 0);
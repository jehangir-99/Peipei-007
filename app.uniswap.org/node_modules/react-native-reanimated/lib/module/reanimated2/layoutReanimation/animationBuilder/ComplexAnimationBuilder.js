"use strict";function _defineProperty(obj,key,value){return(key=_toPropertyKey(key))in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _toPropertyKey(arg){var key=_toPrimitive(arg,"string");return"symbol"==typeof key?key:String(key)}function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}import{withTiming,withSpring}from"../../animation";import{BaseAnimationBuilder}from"./BaseAnimationBuilder";export class ComplexAnimationBuilder extends BaseAnimationBuilder{constructor(){super(...arguments),_defineProperty(this,"easingV",void 0),_defineProperty(this,"rotateV",void 0),_defineProperty(this,"type",void 0),_defineProperty(this,"dampingV",void 0),_defineProperty(this,"dampingRatioV",void 0),_defineProperty(this,"massV",void 0),_defineProperty(this,"stiffnessV",void 0),_defineProperty(this,"overshootClampingV",void 0),_defineProperty(this,"restDisplacementThresholdV",void 0),_defineProperty(this,"restSpeedThresholdV",void 0),_defineProperty(this,"initialValues",void 0)}static easing(easingFunction){return this.createInstance().easing(easingFunction)}easing(easingFunction){return this.easingV=easingFunction,this}static rotate(degree){return this.createInstance().rotate(degree)}rotate(degree){return this.rotateV=degree,this}static springify(duration){return this.createInstance().springify(duration)}springify(duration){return this.durationV=duration,this.type=withSpring,this}static dampingRatio(dampingRatio){return this.createInstance().dampingRatio(dampingRatio)}dampingRatio(value){return this.dampingRatioV=value,this}static damping(damping){return this.createInstance().damping(damping)}damping(damping){return this.dampingV=damping,this}static mass(mass){return this.createInstance().mass(mass)}mass(mass){return this.massV=mass,this}static stiffness(stiffness){return this.createInstance().stiffness(stiffness)}stiffness(stiffness){return this.stiffnessV=stiffness,this}static overshootClamping(overshootClamping){return this.createInstance().overshootClamping(overshootClamping)}overshootClamping(overshootClamping){return this.overshootClampingV=overshootClamping,this}static restDisplacementThreshold(restDisplacementThreshold){return this.createInstance().restDisplacementThreshold(restDisplacementThreshold)}restDisplacementThreshold(restDisplacementThreshold){return this.restDisplacementThresholdV=restDisplacementThreshold,this}static restSpeedThreshold(restSpeedThreshold){return this.createInstance().restSpeedThreshold(restSpeedThreshold)}restSpeedThreshold(restSpeedThreshold){return this.restSpeedThresholdV=restSpeedThreshold,this}static withInitialValues(values){return this.createInstance().withInitialValues(values)}withInitialValues(values){return this.initialValues=values,this}getAnimationAndConfig(){const duration=this.durationV,easing=this.easingV,rotate=this.rotateV,type=this.type?this.type:withTiming,damping=this.dampingV,dampingRatio=this.dampingRatioV,mass=this.massV,stiffness=this.stiffnessV,overshootClamping=this.overshootClampingV,restDisplacementThreshold=this.restDisplacementThresholdV,restSpeedThreshold=this.restSpeedThresholdV,animation=type,config={};function maybeSetConfigValue(value,variableName){value&&(config[variableName]=value)}return type===withTiming&&maybeSetConfigValue(easing,"easing"),[{variableName:"damping",value:damping},{variableName:"dampingRatio",value:dampingRatio},{variableName:"mass",value:mass},{variableName:"stiffness",value:stiffness},{variableName:"overshootClamping",value:overshootClamping},{variableName:"restDisplacementThreshold",value:restDisplacementThreshold},{variableName:"restSpeedThreshold",value:restSpeedThreshold},{variableName:"duration",value:duration},{variableName:"rotate",value:rotate}].forEach((_ref=>{let{value:value,variableName:variableName}=_ref;return maybeSetConfigValue(value,variableName)})),[animation,config]}}_defineProperty(ComplexAnimationBuilder,"createInstance",void 0);
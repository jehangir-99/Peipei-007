"use strict";function _defineProperty(obj,key,value){return(key=_toPropertyKey(key))in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _toPropertyKey(arg){var key=_toPrimitive(arg,"string");return"symbol"==typeof key?key:String(key)}function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}import{withSequence,withTiming}from"../../animation";import{BaseAnimationBuilder}from"../animationBuilder";export class FadingTransition extends BaseAnimationBuilder{constructor(){super(...arguments),_defineProperty(this,"build",(()=>{const delayFunction=this.getDelayFunction(),callback=this.callbackV,delay=this.getDelay(),duration=this.durationV??500;return values=>({initialValues:{opacity:1,originX:values.currentOriginX,originY:values.currentOriginY,width:values.currentWidth,height:values.currentHeight},animations:{opacity:delayFunction(delay,withSequence(withTiming(0,{duration:duration}),withTiming(1,{duration:duration}))),originX:delayFunction(delay+duration,withTiming(values.targetOriginX,{duration:50})),originY:delayFunction(delay+duration,withTiming(values.targetOriginY,{duration:50})),width:delayFunction(delay+duration,withTiming(values.targetWidth,{duration:50})),height:delayFunction(delay+duration,withTiming(values.targetHeight,{duration:50}))},callback:callback})}))}static createInstance(){return new FadingTransition}}
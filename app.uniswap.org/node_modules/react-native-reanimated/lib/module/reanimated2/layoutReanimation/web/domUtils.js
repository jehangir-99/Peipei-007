"use strict";import{isWindowAvailable}from"../../PlatformChecker";import{setDummyPosition,snapshots}from"./componentStyle";import{Animations}from"./config";const PREDEFINED_WEB_ANIMATIONS_ID="ReanimatedPredefinedWebAnimationsStyle",CUSTOM_WEB_ANIMATIONS_ID="ReanimatedCustomWebAnimationsStyle",animationNameToIndex=new Map,animationNameList=[];let isObserverSet=!1;export function configureWebLayoutAnimations(){if(!isWindowAvailable()||null!==document.getElementById(PREDEFINED_WEB_ANIMATIONS_ID))return;const predefinedAnimationsStyleTag=document.createElement("style");predefinedAnimationsStyleTag.id=PREDEFINED_WEB_ANIMATIONS_ID,predefinedAnimationsStyleTag.onload=()=>{if(predefinedAnimationsStyleTag.sheet)for(const animationName in Animations)predefinedAnimationsStyleTag.sheet.insertRule(Animations[animationName].style);else console.error("[Reanimated] Failed to create layout animations stylesheet.")};const customAnimationsStyleTag=document.createElement("style");customAnimationsStyleTag.id=CUSTOM_WEB_ANIMATIONS_ID,document.head.appendChild(predefinedAnimationsStyleTag),document.head.appendChild(customAnimationsStyleTag)}export function insertWebAnimation(animationName,keyframe){if(!isWindowAvailable())return;const styleTag=document.getElementById(CUSTOM_WEB_ANIMATIONS_ID);if(styleTag.sheet){styleTag.sheet.insertRule(keyframe,0),animationNameList.unshift(animationName),animationNameToIndex.set(animationName,0);for(let i=1;i<animationNameList.length;++i){const nextAnimationName=animationNameList[i],nextAnimationIndex=animationNameToIndex.get(nextAnimationName);if(void 0===nextAnimationIndex)throw new Error("[Reanimated] Failed to obtain animation index.");animationNameToIndex.set(animationNameList[i],nextAnimationIndex+1)}}else console.error("[Reanimated] Failed to create layout animations stylesheet.")}function removeWebAnimation(animationName){var _styleTag$sheet;if(!isWindowAvailable())return;const styleTag=document.getElementById(CUSTOM_WEB_ANIMATIONS_ID),currentAnimationIndex=animationNameToIndex.get(animationName);if(void 0===currentAnimationIndex)throw new Error("[Reanimated] Failed to obtain animation index.");null===(_styleTag$sheet=styleTag.sheet)||void 0===_styleTag$sheet||_styleTag$sheet.deleteRule(currentAnimationIndex),animationNameList.splice(currentAnimationIndex,1),animationNameToIndex.delete(animationName);for(let i=currentAnimationIndex;i<animationNameList.length;++i){const nextAnimationName=animationNameList[i],nextAnimationIndex=animationNameToIndex.get(nextAnimationName);if(void 0===nextAnimationIndex)throw new Error("[Reanimated] Failed to obtain animation index.");animationNameToIndex.set(animationNameList[i],nextAnimationIndex-1)}}const timeoutScale=1.25,frameDurationMs=16,minimumFrames=10;export function scheduleAnimationCleanup(animationName,animationDuration){const timeoutValue=Math.max(1.25*animationDuration*1e3,animationDuration+160);setTimeout((()=>removeWebAnimation(animationName)),timeoutValue)}function reattachElementToAncestor(child,parent){const childSnapshot=snapshots.get(child);if(!childSnapshot)return void console.error("[Reanimated] Failed to obtain snapshot.");child.removedAfterAnimation=!0,parent.appendChild(child),setDummyPosition(child,childSnapshot);const originalOnAnimationEnd=child.onanimationend;child.onanimationend=function(event){parent.removeChild(child),null==originalOnAnimationEnd||originalOnAnimationEnd.call(this,event)}}function findDescendantWithExitingAnimation(node,root){if(!(node instanceof HTMLElement))return;node.reanimatedDummy&&void 0===node.removedAfterAnimation&&reattachElementToAncestor(node,root);const children=Array.from(node.children);for(let i=0;i<children.length;++i)findDescendantWithExitingAnimation(children[i],root)}function checkIfScreenWasChanged(mutationTarget){var _mutationTarget$react,_mutationTarget$react2,_mutationTarget$react3;let reactFiberKey="__reactFiber";for(const key of Object.keys(mutationTarget))if(key.startsWith("__reactFiber")){reactFiberKey=key;break}return void 0!==(null===(_mutationTarget$react=mutationTarget[reactFiberKey])||void 0===_mutationTarget$react||null===(_mutationTarget$react2=_mutationTarget$react.child)||void 0===_mutationTarget$react2||null===(_mutationTarget$react3=_mutationTarget$react2.memoizedProps)||void 0===_mutationTarget$react3?void 0:_mutationTarget$react3.navigation)}export function addHTMLMutationObserver(){if(isObserverSet||!isWindowAvailable())return;isObserverSet=!0;new MutationObserver((mutationsList=>{const rootMutation=mutationsList[mutationsList.length-1];if(!checkIfScreenWasChanged(rootMutation.target))for(let i=0;i<rootMutation.removedNodes.length;++i)findDescendantWithExitingAnimation(rootMutation.removedNodes[i],rootMutation.target)})).observe(document.body,{childList:!0,subtree:!0})}export function areDOMRectsEqual(r1,r2){return r1.x===r2.x&&r1.y===r2.y&&r1.width===r2.width&&r1.height===r2.height}
"use strict";import{Animations,AnimationsData,TransitionType}from"./config";import{convertAnimationObjectToKeyframes}from"./animationParser";import{LinearTransition}from"./transition/Linear.web";import{SequencedTransition}from"./transition/Sequenced.web";import{FadingTransition}from"./transition/Fading.web";import{insertWebAnimation}from"./domUtils";function addPxToTranslate(existingTransform){return existingTransform.map((transformProp=>{const newTransformProp={};for(const[key,value]of Object.entries(transformProp))key.includes("translate")?newTransformProp[key]=`${value}px`:newTransformProp[key]=value;return newTransformProp}))}function addExistingTransform(newAnimationData,newTransform){for(const keyframeStepProperties of Object.values(newAnimationData.style))keyframeStepProperties.transform?Array.prototype.unshift.apply(keyframeStepProperties.transform,newTransform):keyframeStepProperties.transform=newTransform}export function createAnimationWithExistingTransform(animationName,existingTransform,layoutTransition){let newAnimationData;if(layoutTransition)newAnimationData=layoutTransition;else{if(!(animationName in Animations))return"";newAnimationData=structuredClone(AnimationsData[animationName])}const keyframeName=generateNextCustomKeyframeName();newAnimationData.name=keyframeName;addExistingTransform(newAnimationData,addPxToTranslate(existingTransform));const keyframe=convertAnimationObjectToKeyframes(newAnimationData);return insertWebAnimation(keyframeName,keyframe),keyframeName}let customKeyframeCounter=0;function generateNextCustomKeyframeName(){return"REA"+customKeyframeCounter++}export function TransitionGenerator(transitionType,transitionData,existingTransform){const transitionKeyframeName=generateNextCustomKeyframeName();let transitionObject;switch(transitionType){case TransitionType.LINEAR:transitionObject=LinearTransition(transitionKeyframeName,transitionData);break;case TransitionType.SEQUENCED:transitionObject=SequencedTransition(transitionKeyframeName,transitionData);break;case TransitionType.FADING:transitionObject=FadingTransition(transitionKeyframeName,transitionData)}if(existingTransform)return createAnimationWithExistingTransform("",existingTransform,transitionObject);const transitionKeyframe=convertAnimationObjectToKeyframes(transitionObject);return insertWebAnimation(transitionKeyframeName,transitionKeyframe),transitionKeyframeName}
"use strict";import React,{Children,Component,createContext,useEffect,useRef}from"react";import{setShouldAnimateExitingForTag}from"../core";import{findNodeHandle}from"react-native";export const SkipEnteringContext=createContext(null);function SkipEntering(props){const skipValueRef=useRef(props.shouldSkip);return useEffect((()=>{skipValueRef.current=!1}),[skipValueRef]),React.createElement(SkipEnteringContext.Provider,{value:skipValueRef},props.children)}export class LayoutAnimationConfig extends Component{getMaybeWrappedChildren(){return Children.count(this.props.children)>1&&this.props.skipExiting?Children.map(this.props.children,(child=>React.createElement(LayoutAnimationConfig,{skipExiting:!0},child))):this.props.children}setShouldAnimateExiting(){if(1===Children.count(this.props.children)){const tag=findNodeHandle(this);tag&&setShouldAnimateExitingForTag(tag,!this.props.skipExiting)}}componentWillUnmount(){void 0!==this.props.skipExiting&&this.setShouldAnimateExiting()}render(){const children=this.getMaybeWrappedChildren();return void 0===this.props.skipEntering?children:React.createElement(SkipEntering,{shouldSkip:this.props.skipEntering},children)}}
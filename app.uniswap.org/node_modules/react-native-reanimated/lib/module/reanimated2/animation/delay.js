"use strict";import{defineAnimation,getReduceMotionForAnimation}from"./util";export const withDelay=function(delayMs,_nextAnimation,reduceMotion){return defineAnimation(_nextAnimation,(()=>{const nextAnimation="function"==typeof _nextAnimation?_nextAnimation():_nextAnimation;return{isHigherOrder:!0,onFrame:function(animation,now){const{startTime:startTime,started:started,previousAnimation:previousAnimation}=animation,current=animation.current;if(now-startTime>delayMs||animation.reduceMotion){started||(nextAnimation.onStart(nextAnimation,current,now,previousAnimation),animation.previousAnimation=null,animation.started=!0);const finished=nextAnimation.onFrame(nextAnimation,now);return animation.current=nextAnimation.current,finished}if(previousAnimation){const finished=previousAnimation.finished||previousAnimation.onFrame(previousAnimation,now);animation.current=previousAnimation.current,finished&&(animation.previousAnimation=null)}return!1},onStart:function(animation,value,now,previousAnimation){animation.startTime=now,animation.started=!1,animation.current=value,animation.previousAnimation=previousAnimation===animation?previousAnimation.previousAnimation:previousAnimation,void 0===nextAnimation.reduceMotion&&(nextAnimation.reduceMotion=animation.reduceMotion)},current:nextAnimation.current,callback:finished=>{nextAnimation.callback&&nextAnimation.callback(finished)},previousAnimation:null,startTime:0,started:!1,reduceMotion:getReduceMotionForAnimation(reduceMotion)}}))};
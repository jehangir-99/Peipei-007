"use strict";import{Easing}from"../Easing";import{defineAnimation,getReduceMotionForAnimation}from"./util";export const withTiming=function(toValue,userConfig,callback){return defineAnimation(toValue,(()=>{const config={duration:300,easing:Easing.inOut(Easing.quad)};return userConfig&&Object.keys(userConfig).forEach((key=>config[key]=userConfig[key])),{type:"timing",onFrame:function(animation,now){const{toValue:toValue,startTime:startTime,startValue:startValue}=animation,runtime=now-startTime;if(runtime>=config.duration)return animation.startTime=0,animation.current=toValue,!0;const progress=animation.easing(runtime/config.duration);return animation.current=startValue+(toValue-startValue)*progress,!1},onStart:function(animation,value,now,previousAnimation){previousAnimation&&"timing"===previousAnimation.type&&previousAnimation.toValue===toValue&&previousAnimation.startTime?(animation.startTime=previousAnimation.startTime,animation.startValue=previousAnimation.startValue):(animation.startTime=now,animation.startValue=value),animation.current=value,"object"==typeof config.easing?animation.easing=config.easing.factory():animation.easing=config.easing},progress:0,toValue:toValue,startValue:0,startTime:0,easing:()=>0,current:toValue,callback:callback,reduceMotion:getReduceMotionForAnimation(null==userConfig?void 0:userConfig.reduceMotion)}}))};
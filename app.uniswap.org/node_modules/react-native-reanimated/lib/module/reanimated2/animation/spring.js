"use strict";import{defineAnimation,getReduceMotionForAnimation}from"./util";import{initialCalculations,calculateNewMassToMatchDuration,underDampedSpringCalculations,criticallyDampedSpringCalculations,isAnimationTerminatingCalculation,scaleZetaToMatchClamps,checkIfConfigIsValid}from"./springUtils";export const withSpring=(toValue,userConfig,callback)=>defineAnimation(toValue,(()=>{const config={...{damping:10,mass:1,stiffness:100,overshootClamping:!1,restDisplacementThreshold:.01,restSpeedThreshold:2,velocity:0,duration:2e3,dampingRatio:.5,reduceMotion:void 0,clamp:void 0},...userConfig,useDuration:!!(null!=userConfig&&userConfig.duration||null!=userConfig&&userConfig.dampingRatio),skipAnimation:!1};return config.skipAnimation=!checkIfConfigIsValid(config),0===config.duration&&(config.skipAnimation=!0),{onFrame:function(animation,now){const{toValue:toValue,startTimestamp:startTimestamp,current:current}=animation,timeFromStart=now-startTimestamp;if(config.useDuration&&timeFromStart>=config.duration)return animation.current=toValue,animation.lastTimestamp=0,!0;if(config.skipAnimation)return animation.current=toValue,animation.lastTimestamp=0,!0;const{lastTimestamp:lastTimestamp,velocity:velocity}=animation,deltaTime=Math.min(now-lastTimestamp,64);animation.lastTimestamp=now;const t=deltaTime/1e3,v0=-velocity,x0=toValue-current,{zeta:zeta,omega0:omega0,omega1:omega1}=animation,{position:newPosition,velocity:newVelocity}=zeta<1?underDampedSpringCalculations(animation,{zeta:zeta,v0:v0,x0:x0,omega0:omega0,omega1:omega1,t:t}):criticallyDampedSpringCalculations(animation,{v0:v0,x0:x0,omega0:omega0,t:t});animation.current=newPosition,animation.velocity=newVelocity;const{isOvershooting:isOvershooting,isVelocity:isVelocity,isDisplacement:isDisplacement}=isAnimationTerminatingCalculation(animation,config),springIsNotInMove=isOvershooting||isVelocity&&isDisplacement;return!(config.useDuration||!springIsNotInMove)&&(animation.velocity=0,animation.current=toValue,animation.lastTimestamp=0,!0)},onStart:function(animation,value,now,previousAnimation){animation.current=value,animation.startValue=value;let mass=config.mass;const triggeredTwice=function(previousAnimation,animation){return(null==previousAnimation?void 0:previousAnimation.lastTimestamp)&&(null==previousAnimation?void 0:previousAnimation.startTimestamp)&&(null==previousAnimation?void 0:previousAnimation.toValue)===animation.toValue&&(null==previousAnimation?void 0:previousAnimation.duration)===animation.duration&&(null==previousAnimation?void 0:previousAnimation.dampingRatio)===animation.dampingRatio}(previousAnimation,animation),duration=config.duration,x0=triggeredTwice?null==previousAnimation?void 0:previousAnimation.startValue:Number(animation.toValue)-value;if(animation.velocity=previousAnimation?(triggeredTwice?null==previousAnimation?void 0:previousAnimation.velocity:(null==previousAnimation?void 0:previousAnimation.velocity)+config.velocity)||0:config.velocity||0,triggeredTwice)animation.zeta=(null==previousAnimation?void 0:previousAnimation.zeta)||0,animation.omega0=(null==previousAnimation?void 0:previousAnimation.omega0)||0,animation.omega1=(null==previousAnimation?void 0:previousAnimation.omega1)||0;else{if(config.useDuration){const actualDuration=triggeredTwice?duration-(((null==previousAnimation?void 0:previousAnimation.lastTimestamp)||0)-((null==previousAnimation?void 0:previousAnimation.startTimestamp)||0)):duration;config.duration=actualDuration,mass=calculateNewMassToMatchDuration(x0,config,animation.velocity)}const{zeta:zeta,omega0:omega0,omega1:omega1}=initialCalculations(mass,config);animation.zeta=zeta,animation.omega0=omega0,animation.omega1=omega1,void 0!==config.clamp&&(animation.zeta=scaleZetaToMatchClamps(animation,config.clamp))}animation.lastTimestamp=(null==previousAnimation?void 0:previousAnimation.lastTimestamp)||now,animation.startTimestamp=triggeredTwice&&(null==previousAnimation?void 0:previousAnimation.startTimestamp)||now},toValue:toValue,velocity:config.velocity||0,current:toValue,startValue:0,callback:callback,lastTimestamp:0,startTimestamp:0,zeta:0,omega0:0,omega1:0,reduceMotion:getReduceMotionForAnimation(config.reduceMotion)}}));
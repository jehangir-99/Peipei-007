"use strict";import{makeShareable}from"./core";import{isAndroid,isWeb}from"./PlatformChecker";const NUMBER="[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)",PERCENTAGE=NUMBER+"%";function call(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return"\\(\\s*("+args.join(")\\s*,\\s*(")+")\\s*\\)"}const MATCHERS={rgb:new RegExp("rgb"+call(NUMBER,NUMBER,NUMBER)),rgba:new RegExp("rgba"+call(NUMBER,NUMBER,NUMBER,NUMBER)),hsl:new RegExp("hsl"+call(NUMBER,PERCENTAGE,PERCENTAGE)),hsla:new RegExp("hsla"+call(NUMBER,PERCENTAGE,PERCENTAGE,NUMBER)),hex3:/^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex4:/^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#([0-9a-fA-F]{6})$/,hex8:/^#([0-9a-fA-F]{8})$/};function hue2rgb(p,q,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?p+6*(q-p)*t:t<.5?q:t<2/3?p+(q-p)*(2/3-t)*6:p}function hslToRgb(h,s,l){const q=l<.5?l*(1+s):l+s-l*s,p=2*l-q,r=hue2rgb(p,q,h+1/3),g=hue2rgb(p,q,h),b=hue2rgb(p,q,h-1/3);return Math.round(255*r)<<24|Math.round(255*g)<<16|Math.round(255*b)<<8}function parse255(str){const int=Number.parseInt(str,10);return int<0?0:int>255?255:int}function parse360(str){return(Number.parseFloat(str)%360+360)%360/360}function parse1(str){const num=Number.parseFloat(str);return num<0?0:num>1?255:Math.round(255*num)}function parsePercentage(str){const int=Number.parseFloat(str);return int<0?0:int>100?1:int/100}const names=makeShareable({transparent:0,aliceblue:4042850303,antiquewhite:4209760255,aqua:16777215,aquamarine:2147472639,azure:4043309055,beige:4126530815,bisque:4293182719,black:255,blanchedalmond:4293643775,blue:65535,blueviolet:2318131967,brown:2771004159,burlywood:3736635391,burntsienna:3934150143,cadetblue:1604231423,chartreuse:2147418367,chocolate:3530104575,coral:4286533887,cornflowerblue:1687547391,cornsilk:4294499583,crimson:3692313855,cyan:16777215,darkblue:35839,darkcyan:9145343,darkgoldenrod:3095792639,darkgray:2846468607,darkgreen:6553855,darkgrey:2846468607,darkkhaki:3182914559,darkmagenta:2332068863,darkolivegreen:1433087999,darkorange:4287365375,darkorchid:2570243327,darkred:2332033279,darksalmon:3918953215,darkseagreen:2411499519,darkslateblue:1211993087,darkslategray:793726975,darkslategrey:793726975,darkturquoise:13554175,darkviolet:2483082239,deeppink:4279538687,deepskyblue:12582911,dimgray:1768516095,dimgrey:1768516095,dodgerblue:512819199,firebrick:2988581631,floralwhite:4294635775,forestgreen:579543807,fuchsia:4278255615,gainsboro:3705462015,ghostwhite:4177068031,gold:4292280575,goldenrod:3668254975,gray:2155905279,green:8388863,greenyellow:2919182335,grey:2155905279,honeydew:4043305215,hotpink:4285117695,indianred:3445382399,indigo:1258324735,ivory:4294963455,khaki:4041641215,lavender:3873897215,lavenderblush:4293981695,lawngreen:2096890111,lemonchiffon:4294626815,lightblue:2916673279,lightcoral:4034953471,lightcyan:3774873599,lightgoldenrodyellow:4210742015,lightgray:3553874943,lightgreen:2431553791,lightgrey:3553874943,lightpink:4290167295,lightsalmon:4288707327,lightseagreen:548580095,lightskyblue:2278488831,lightslategray:2005441023,lightslategrey:2005441023,lightsteelblue:2965692159,lightyellow:4294959359,lime:16711935,limegreen:852308735,linen:4210091775,magenta:4278255615,maroon:2147483903,mediumaquamarine:1724754687,mediumblue:52735,mediumorchid:3126187007,mediumpurple:2473647103,mediumseagreen:1018393087,mediumslateblue:2070474495,mediumspringgreen:16423679,mediumturquoise:1221709055,mediumvioletred:3340076543,midnightblue:421097727,mintcream:4127193855,mistyrose:4293190143,moccasin:4293178879,navajowhite:4292783615,navy:33023,oldlace:4260751103,olive:2155872511,olivedrab:1804477439,orange:4289003775,orangered:4282712319,orchid:3664828159,palegoldenrod:4008225535,palegreen:2566625535,paleturquoise:2951671551,palevioletred:3681588223,papayawhip:4293907967,peachpuff:4292524543,peru:3448061951,pink:4290825215,plum:3718307327,powderblue:2967529215,purple:2147516671,rebeccapurple:1714657791,red:4278190335,rosybrown:3163525119,royalblue:1097458175,saddlebrown:2336560127,salmon:4202722047,sandybrown:4104413439,seagreen:780883967,seashell:4294307583,sienna:2689740287,silver:3233857791,skyblue:2278484991,slateblue:1784335871,slategray:1887473919,slategrey:1887473919,snow:4294638335,springgreen:16744447,steelblue:1182971135,tan:3535047935,teal:8421631,thistle:3636451583,tomato:4284696575,turquoise:1088475391,violet:4001558271,wheat:4125012991,white:4294967295,whitesmoke:4126537215,yellow:4294902015,yellowgreen:2597139199});export const ColorProperties=makeShareable(["backgroundColor","borderBottomColor","borderColor","borderLeftColor","borderRightColor","borderTopColor","borderStartColor","borderEndColor","borderBlockColor","borderBlockEndColor","borderBlockStartColor","color","shadowColor","textDecorationColor","tintColor","textShadowColor","overlayColor"]);function normalizeColor(color){if("number"==typeof color)return color>>>0===color&&color>=0&&color<=4294967295?color:null;if("string"!=typeof color)return null;let match;return(match=MATCHERS.hex6.exec(color))?Number.parseInt(match[1]+"ff",16)>>>0:void 0!==names[color]?names[color]:(match=MATCHERS.rgb.exec(color))?(parse255(match[1])<<24|parse255(match[2])<<16|parse255(match[3])<<8|255)>>>0:(match=MATCHERS.rgba.exec(color))?(parse255(match[1])<<24|parse255(match[2])<<16|parse255(match[3])<<8|parse1(match[4]))>>>0:(match=MATCHERS.hex3.exec(color))?Number.parseInt(match[1]+match[1]+match[2]+match[2]+match[3]+match[3]+"ff",16)>>>0:(match=MATCHERS.hex8.exec(color))?Number.parseInt(match[1],16)>>>0:(match=MATCHERS.hex4.exec(color))?Number.parseInt(match[1]+match[1]+match[2]+match[2]+match[3]+match[3]+match[4]+match[4],16)>>>0:(match=MATCHERS.hsl.exec(color))?(255|hslToRgb(parse360(match[1]),parsePercentage(match[2]),parsePercentage(match[3])))>>>0:(match=MATCHERS.hsla.exec(color))?(hslToRgb(parse360(match[1]),parsePercentage(match[2]),parsePercentage(match[3]))|parse1(match[4]))>>>0:null}export const opacity=c=>(c>>24&255)/255;export const red=c=>c>>16&255;export const green=c=>c>>8&255;export const blue=c=>255&c;const IS_WEB=isWeb(),IS_ANDROID=isAndroid();export const rgbaColor=function(r,g,b){let alpha=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;if(IS_WEB||!_WORKLET)return`rgba(${r}, ${g}, ${b}, ${alpha})`;const c=Math.round(255*alpha)*(1<<24)+65536*Math.round(r)+256*Math.round(g)+Math.round(b);return IS_ANDROID?c<1<<31>>>0?c:c-4294967296:c};export function RGBtoHSV(r,g,b){const max=Math.max(r,g,b),min=Math.min(r,g,b),d=max-min,s=0===max?0:d/max,v=max/255;let h=0;switch(max){case min:break;case r:h=g-b+d*(g<b?6:0),h/=6*d;break;case g:h=b-r+2*d,h/=6*d;break;case b:h=r-g+4*d,h/=6*d}return{h:h,s:s,v:v}}function HSVtoRGB(h,s,v){let r,g,b;const i=Math.floor(6*h),f=6*h-i,p=v*(1-s),q=v*(1-f*s),t=v*(1-(1-f)*s);switch(i%6){case 0:[r,g,b]=[v,t,p];break;case 1:[r,g,b]=[q,v,p];break;case 2:[r,g,b]=[p,v,t];break;case 3:[r,g,b]=[p,q,v];break;case 4:[r,g,b]=[t,p,v];break;case 5:[r,g,b]=[v,p,q]}return{r:Math.round(255*r),g:Math.round(255*g),b:Math.round(255*b)}}export const hsvToColor=(h,s,v,a)=>{const{r:r,g:g,b:b}=HSVtoRGB(h,s,v);return rgbaColor(r,g,b,a)};function processColorInitially(color){if(null==color||"number"==typeof color)return color;let normalizedColor=normalizeColor(color);return null!=normalizedColor?"number"!=typeof normalizedColor?null:(normalizedColor=(normalizedColor<<24|normalizedColor>>>8)>>>0,normalizedColor):void 0}export function isColor(value){return"string"==typeof value&&null!=processColorInitially(value)}export function processColor(color){let normalizedColor=processColorInitially(color);if(null!=normalizedColor)return"number"!=typeof normalizedColor?null:(IS_ANDROID&&(normalizedColor|=0),normalizedColor)}export function processColorsInProps(props){for(const key in props)ColorProperties.includes(key)&&(props[key]=processColor(props[key]))}export function convertToRGBA(color){const processedColor=processColorInitially(color);return[(processedColor<<8>>>24)/255,(processedColor<<16>>>24)/255,(processedColor<<24>>>24)/255,(processedColor>>>24)/255]}export function rgbaArrayToRGBAColor(RGBA){return`rgba(${Math.round(255*RGBA[0])}, ${Math.round(255*RGBA[1])}, ${Math.round(255*RGBA[2])}, ${RGBA[3]})`}export function toLinearSpace(RGBA){let gamma=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2.2;const res=[];for(let i=0;i<3;++i)res.push(Math.pow(RGBA[i],gamma));return res.push(RGBA[3]),res}export function toGammaSpace(RGBA){let gamma=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2.2;const res=[];for(let i=0;i<3;++i)res.push(Math.pow(RGBA[i],1/gamma));return res.push(RGBA[3]),res}
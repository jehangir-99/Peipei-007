"use strict";import{PropsAllowlists}from"./propsAllowlists";import{jsiConfigureProps}from"./reanimated2/core";function assertNoOverlapInLists(){for(const key in PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST)if(key in PropsAllowlists.UI_THREAD_PROPS_WHITELIST)throw new Error(`[Reanimated] Property \`${key}\` was whitelisted both as UI and native prop. Please remove it from one of the lists.`)}function configureProps(){assertNoOverlapInLists(),jsiConfigureProps(Object.keys(PropsAllowlists.UI_THREAD_PROPS_WHITELIST),Object.keys(PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST))}export function addWhitelistedNativeProps(props){const oldSize=Object.keys(PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST).length;PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST={...PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST,...props},oldSize!==Object.keys(PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST).length&&configureProps()}export function addWhitelistedUIProps(props){const oldSize=Object.keys(PropsAllowlists.UI_THREAD_PROPS_WHITELIST).length;PropsAllowlists.UI_THREAD_PROPS_WHITELIST={...PropsAllowlists.UI_THREAD_PROPS_WHITELIST,...props},oldSize!==Object.keys(PropsAllowlists.UI_THREAD_PROPS_WHITELIST).length&&configureProps()}const PROCESSED_VIEW_NAMES=new Set;export function adaptViewConfig(viewConfig){const viewName=viewConfig.uiViewClassName,props=viewConfig.validAttributes;if(!PROCESSED_VIEW_NAMES.has(viewName)){const propsToAdd={};Object.keys(props).forEach((key=>{key in PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST||key in PropsAllowlists.UI_THREAD_PROPS_WHITELIST||(propsToAdd[key]=!0)})),addWhitelistedUIProps(propsToAdd),PROCESSED_VIEW_NAMES.add(viewName)}}configureProps();
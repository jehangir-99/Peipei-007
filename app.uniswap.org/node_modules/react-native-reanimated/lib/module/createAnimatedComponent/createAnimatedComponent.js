"use strict";function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _defineProperty(obj,key,value){return(key=_toPropertyKey(key))in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _toPropertyKey(arg){var key=_toPrimitive(arg,"string");return"symbol"==typeof key?key:String(key)}function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}import React from"react";import{findNodeHandle,Platform}from"react-native";import WorkletEventHandler from"../reanimated2/WorkletEventHandler";import"../reanimated2/layoutReanimation/animationsManager";import invariant from"invariant";import{adaptViewConfig}from"../ConfigHelper";import{RNRenderer}from"../reanimated2/platform-specific/RNRenderer";import{enableLayoutAnimations}from"../reanimated2/core";import{SharedTransition,LayoutAnimationType}from"../reanimated2/layoutReanimation";import{getShadowNodeWrapperFromRef}from"../reanimated2/fabricUtils";import{removeFromPropsRegistry}from"../reanimated2/PropsRegistry";import{getReduceMotionFromConfig}from"../reanimated2/animation/util";import{maybeBuild}from"../animationBuilder";import{SkipEnteringContext}from"../reanimated2/component/LayoutAnimationConfig";import JSPropsUpdater from"./JSPropsUpdater";import{has,flattenArray}from"./utils";import setAndForwardRef from"./setAndForwardRef";import{isFabric,isJest,isWeb,shouldBeUseWeb}from"../reanimated2/PlatformChecker";import{InlinePropManager}from"./InlinePropManager";import{PropsFilter}from"./PropsFilter";import{startWebLayoutAnimation,tryActivateLayoutTransition,configureWebLayoutAnimations,getReducedMotionFromConfig,saveSnapshot}from"../reanimated2/layoutReanimation/web";import{updateLayoutAnimations}from"../reanimated2/UpdateLayoutAnimations";import{addHTMLMutationObserver}from"../reanimated2/layoutReanimation/web/domUtils";const IS_WEB=isWeb(),IS_FABRIC=isFabric();function onlyAnimatedStyles(styles){return styles.filter((style=>null==style?void 0:style.viewDescriptors))}IS_WEB&&configureWebLayoutAnimations();export function createAnimatedComponent(Component,options){invariant("function"!=typeof Component||Component.prototype&&Component.prototype.isReactComponent,`Looks like you're passing a function component \`${Component.name}\` to \`createAnimatedComponent\` function which supports only class components. Please wrap your function component with \`React.forwardRef()\` or use a class component instead.`);class AnimatedComponent extends React.Component{constructor(props){super(props),_defineProperty(this,"_styles",null),_defineProperty(this,"_animatedProps",void 0),_defineProperty(this,"_viewTag",-1),_defineProperty(this,"_isFirstRender",!0),_defineProperty(this,"jestAnimatedStyle",{value:{}}),_defineProperty(this,"_component",null),_defineProperty(this,"_sharedElementTransition",null),_defineProperty(this,"_jsPropsUpdater",new JSPropsUpdater),_defineProperty(this,"_InlinePropManager",new InlinePropManager),_defineProperty(this,"_PropsFilter",new PropsFilter),_defineProperty(this,"_viewInfo",void 0),_defineProperty(this,"context",void 0),_defineProperty(this,"_setComponentRef",setAndForwardRef({getForwardedRef:()=>this.props.forwardedRef,setLocalRef:ref=>{const tag=IS_WEB?ref:findNodeHandle(ref),{layout:layout,entering:entering,exiting:exiting,sharedTransitionTag:sharedTransitionTag}=this.props;if((layout||entering||exiting||sharedTransitionTag)&&null!=tag){var _this$context;shouldBeUseWeb()||enableLayoutAnimations(!0,!1);const skipEntering=null===(_this$context=this.context)||void 0===_this$context?void 0:_this$context.current;var _this$props;if(entering&&!skipEntering)updateLayoutAnimations(tag,LayoutAnimationType.ENTERING,maybeBuild(entering,null===(_this$props=this.props)||void 0===_this$props?void 0:_this$props.style,AnimatedComponent.displayName));if(sharedTransitionTag&&!IS_WEB){const sharedElementTransition=this.props.sharedTransitionStyle??new SharedTransition;getReduceMotionFromConfig(sharedElementTransition.getReduceMotion())||(sharedElementTransition.registerTransition(tag,sharedTransitionTag),this._sharedElementTransition=sharedElementTransition)}}ref!==this._component&&(this._component=ref)}})),isJest()&&(this.jestAnimatedStyle={value:{}})}componentDidMount(){this._attachNativeEvents(),this._jsPropsUpdater.addOnJSPropsChangeListener(this),this._attachAnimatedStyles(),this._InlinePropManager.attachInlineProps(this,this._getViewInfo());if(this.props.layout&&this._configureLayoutTransition(),IS_WEB){if(this.props.exiting&&saveSnapshot(this._component),!this.props.entering||getReducedMotionFromConfig(this.props.entering))return void(this._isFirstRender=!1);startWebLayoutAnimation(this.props,this._component,LayoutAnimationType.ENTERING)}this._isFirstRender=!1}componentWillUnmount(){var _this$_sharedElementT;this._detachNativeEvents(),this._jsPropsUpdater.removeOnJSPropsChangeListener(this),this._detachStyles(),this._InlinePropManager.detachInlineProps(),null===(_this$_sharedElementT=this._sharedElementTransition)||void 0===_this$_sharedElementT||_this$_sharedElementT.unregisterTransition(this._viewTag);const exiting=this.props.exiting;if(IS_WEB&&this.props.exiting&&!getReducedMotionFromConfig(this.props.exiting))addHTMLMutationObserver(),startWebLayoutAnimation(this.props,this._component,LayoutAnimationType.EXITING);else if(exiting){var _this$props2;if(!("getReduceMotion"in exiting&&"function"==typeof exiting.getReduceMotion?getReduceMotionFromConfig(exiting.getReduceMotion()):getReduceMotionFromConfig()))updateLayoutAnimations(this._viewTag,LayoutAnimationType.EXITING,maybeBuild(exiting,null===(_this$props2=this.props)||void 0===_this$props2?void 0:_this$props2.style,AnimatedComponent.displayName))}}_getEventViewRef(){var _this$_component,_getScrollableNode,_ref;return null!==(_this$_component=this._component)&&void 0!==_this$_component&&_this$_component.getScrollableNode?null===(_getScrollableNode=(_ref=this._component).getScrollableNode)||void 0===_getScrollableNode?void 0:_getScrollableNode.call(_ref):this._component}_attachNativeEvents(){const node=this._getEventViewRef();let viewTag=null;for(const key in this.props){const prop=this.props[key];has("workletEventHandler",prop)&&prop.workletEventHandler instanceof WorkletEventHandler&&(null===viewTag&&(viewTag=IS_WEB?this._component:findNodeHandle(null!=options&&options.setNativeProps?this:node)),prop.workletEventHandler.registerForEvents(viewTag,key))}}_detachNativeEvents(){for(const key in this.props){const prop=this.props[key];has("workletEventHandler",prop)&&prop.workletEventHandler instanceof WorkletEventHandler&&prop.workletEventHandler.unregisterFromEvents()}}_detachStyles(){if(IS_WEB&&null!==this._styles)for(const style of this._styles)style.viewsRef.remove(this);else if(-1!==this._viewTag&&null!==this._styles){var _this$props$animatedP;for(const style of this._styles)style.viewDescriptors.remove(this._viewTag);null!==(_this$props$animatedP=this.props.animatedProps)&&void 0!==_this$props$animatedP&&_this$props$animatedP.viewDescriptors&&this.props.animatedProps.viewDescriptors.remove(this._viewTag),IS_FABRIC&&removeFromPropsRegistry(this._viewTag)}}_reattachNativeEvents(prevProps){for(const key in prevProps){const prop=this.props[key];has("workletEventHandler",prop)&&prop.workletEventHandler instanceof WorkletEventHandler&&prop.workletEventHandler.reattachNeeded&&prop.workletEventHandler.unregisterFromEvents()}let viewTag=null;for(const key in this.props){const prop=this.props[key];if(has("workletEventHandler",prop)&&prop.workletEventHandler instanceof WorkletEventHandler&&prop.workletEventHandler.reattachNeeded){if(null===viewTag){const node=this._getEventViewRef();viewTag=IS_WEB?this._component:findNodeHandle(null!=options&&options.setNativeProps?this:node)}prop.workletEventHandler.registerForEvents(viewTag,key),prop.workletEventHandler.reattachNeeded=!1}}}_updateFromNative(props){var _this$_component2,_this$_component2$set;null!=options&&options.setNativeProps?options.setNativeProps(this._component,props):null===(_this$_component2=this._component)||void 0===_this$_component2||null===(_this$_component2$set=_this$_component2.setNativeProps)||void 0===_this$_component2$set||_this$_component2$set.call(_this$_component2,props)}_getViewInfo(){var _this$_component3,_getAnimatableRef,_ref2;if(void 0!==this._viewInfo)return this._viewInfo;let viewTag,viewName,viewConfig,shadowNodeWrapper=null;const component=null!==(_this$_component3=this._component)&&void 0!==_this$_component3&&_this$_component3.getAnimatableRef?null===(_getAnimatableRef=(_ref2=this._component).getAnimatableRef)||void 0===_getAnimatableRef?void 0:_getAnimatableRef.call(_ref2):this;if(IS_WEB)viewTag=this._component,viewName=null,shadowNodeWrapper=null,viewConfig=null;else{var _hostInstance$viewCon;const hostInstance=RNRenderer.findHostInstance_DEPRECATED(component);if(!hostInstance)throw new Error("[Reanimated] Cannot find host instance for this component. Maybe it renders nothing?");viewTag=null==hostInstance?void 0:hostInstance._nativeTag,viewName=null==hostInstance||null===(_hostInstance$viewCon=hostInstance.viewConfig)||void 0===_hostInstance$viewCon?void 0:_hostInstance$viewCon.uiViewClassName,viewConfig=null==hostInstance?void 0:hostInstance.viewConfig,IS_FABRIC&&(shadowNodeWrapper=getShadowNodeWrapperFromRef(this))}return this._viewInfo={viewTag:viewTag,viewName:viewName,shadowNodeWrapper:shadowNodeWrapper,viewConfig:viewConfig},this._viewInfo}_attachAnimatedStyles(){var _this$props$animatedP2,_this$props$animatedP3;const styles=this.props.style?onlyAnimatedStyles(flattenArray(this.props.style)):[],prevStyles=this._styles;this._styles=styles;const prevAnimatedProps=this._animatedProps;this._animatedProps=this.props.animatedProps;const{viewTag:viewTag,viewName:viewName,shadowNodeWrapper:shadowNodeWrapper,viewConfig:viewConfig}=this._getViewInfo();if(((null===(_this$props$animatedP2=this.props.animatedProps)||void 0===_this$props$animatedP2?void 0:_this$props$animatedP2.viewDescriptors)||styles.length)&&viewConfig&&adaptViewConfig(viewConfig),this._viewTag=viewTag,prevStyles){if(!(1===styles.length&&1===prevStyles.length&&styles[0]===prevStyles[0]))for(const prevStyle of prevStyles){styles.some((style=>style===prevStyle))||prevStyle.viewDescriptors.remove(viewTag)}}styles.forEach((style=>{style.viewDescriptors.add({tag:viewTag,name:viewName,shadowNodeWrapper:shadowNodeWrapper}),isJest()&&(this.jestAnimatedStyle.value={...this.jestAnimatedStyle.value,...style.initial.value},style.jestAnimatedStyle.current=this.jestAnimatedStyle)})),prevAnimatedProps&&prevAnimatedProps!==this.props.animatedProps&&prevAnimatedProps.viewDescriptors.remove(viewTag),null!==(_this$props$animatedP3=this.props.animatedProps)&&void 0!==_this$props$animatedP3&&_this$props$animatedP3.viewDescriptors&&this.props.animatedProps.viewDescriptors.add({tag:viewTag,name:viewName,shadowNodeWrapper:shadowNodeWrapper})}componentDidUpdate(prevProps,_prevState,snapshot){this.props.layout!==prevProps.layout&&this._configureLayoutTransition(),this._reattachNativeEvents(prevProps),this._attachAnimatedStyles(),this._InlinePropManager.attachInlineProps(this,this._getViewInfo()),IS_WEB&&this.props.exiting&&saveSnapshot(this._component),IS_WEB&&null!==snapshot&&this.props.layout&&!getReducedMotionFromConfig(this.props.layout)&&tryActivateLayoutTransition(this.props,this._component,snapshot)}_configureLayoutTransition(){const layout=this.props.layout?maybeBuild(this.props.layout,void 0,AnimatedComponent.displayName):void 0;updateLayoutAnimations(this._viewTag,LayoutAnimationType.LAYOUT,layout)}getSnapshotBeforeUpdate(){var _this$_component4;return IS_WEB&&void 0!==(null===(_this$_component4=this._component)||void 0===_this$_component4?void 0:_this$_component4.getBoundingClientRect)?this._component.getBoundingClientRect():null}render(){const filteredProps=this._PropsFilter.filterNonAnimatedProps(this);isJest()&&(filteredProps.jestAnimatedStyle=this.jestAnimatedStyle),this._isFirstRender&&IS_WEB&&filteredProps.entering&&!getReducedMotionFromConfig(filteredProps.entering)&&(filteredProps.style={...filteredProps.style??{},visibility:"hidden"});const platformProps=Platform.select({web:{},default:{collapsable:!1}});return React.createElement(Component,_extends({},filteredProps,{ref:this._setComponentRef},platformProps))}}return _defineProperty(AnimatedComponent,"displayName",void 0),_defineProperty(AnimatedComponent,"contextType",SkipEnteringContext),AnimatedComponent.displayName=`AnimatedComponent(${Component.displayName||Component.name||"Component"})`,React.forwardRef(((props,ref)=>React.createElement(AnimatedComponent,_extends({},props,null===ref?null:{forwardedRef:ref}))))}
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RelayOrderBuilder=void 0;const tslib_1=require("tslib"),tiny_invariant_1=tslib_1.__importDefault(require("tiny-invariant")),constants_1=require("../constants"),errors_1=require("../errors"),order_1=require("../order");class RelayOrderBuilder{static fromOrder(order){return new RelayOrderBuilder(order.chainId,order.info.reactor).deadline(order.info.deadline).swapper(order.info.swapper).nonce(order.info.nonce).universalRouterCalldata(order.info.universalRouterCalldata).input(order.info.input).fee(order.info.fee).feeStartTime(order.info.fee.startTime).feeEndTime(order.info.fee.endTime)}constructor(chainId,reactorAddress,permit2Address){this.chainId=chainId,this.permit2Address=permit2Address,this.info={};const mappedReactorAddress=constants_1.REACTOR_ADDRESS_MAPPING[chainId]?constants_1.REACTOR_ADDRESS_MAPPING[chainId][constants_1.OrderType.Relay]:void 0;if(reactorAddress)this.reactor(reactorAddress);else{if(!mappedReactorAddress)throw new errors_1.MissingConfiguration("reactor",chainId.toString());this.reactor(mappedReactorAddress)}}reactor(reactor){return this.info.reactor=reactor,this}deadline(deadline){return this.info.deadline=deadline,this}nonce(nonce){return this.info.nonce=nonce,this}swapper(swapper){return this.info.swapper=swapper,this}universalRouterCalldata(universalRouterCalldata){return this.info.universalRouterCalldata=universalRouterCalldata,this}feeStartTime(feeStartTime){return(0,tiny_invariant_1.default)(void 0!==this.info.fee,"fee not set"),this.info.fee=Object.assign(Object.assign({},this.info.fee),{startTime:feeStartTime}),this}feeEndTime(feeEndTime){return(0,tiny_invariant_1.default)(void 0!==this.info.fee,"fee not set"),void 0===this.info.deadline&&(this.info.deadline=feeEndTime),this.info.fee=Object.assign(Object.assign({},this.info.fee),{endTime:feeEndTime}),this}input(input){return this.info.input=input,this}fee(fee){return(0,tiny_invariant_1.default)(fee.startAmount.lte(fee.endAmount),`startAmount must be less than or equal than endAmount: ${fee.startAmount.toString()}`),this.info.fee=fee,this}build(){return(0,tiny_invariant_1.default)(void 0!==this.info.reactor,"reactor not set"),(0,tiny_invariant_1.default)(void 0!==this.info.nonce,"nonce not set"),(0,tiny_invariant_1.default)(void 0!==this.info.deadline,"deadline not set"),(0,tiny_invariant_1.default)(this.info.deadline>Date.now()/1e3,`Deadline must be in the future: ${this.info.deadline}`),(0,tiny_invariant_1.default)(void 0!==this.info.swapper,"swapper not set"),(0,tiny_invariant_1.default)(void 0!==this.info.universalRouterCalldata,"universalRouterCalldata not set"),(0,tiny_invariant_1.default)(void 0!==this.info.input,"input not set"),(0,tiny_invariant_1.default)(void 0!==this.info.fee,"fee not set"),(0,tiny_invariant_1.default)(!this.info.deadline||this.info.fee.startTime<=this.info.deadline,`feeStartTime must be before or same as deadline: ${this.info.fee.startTime}`),(0,tiny_invariant_1.default)(!this.info.deadline||this.info.fee.endTime<=this.info.deadline,`feeEndTime must be before or same as deadline: ${this.info.fee.endTime}`),new order_1.RelayOrder(Object.assign(this.info,{reactor:this.info.reactor,swapper:this.info.swapper,nonce:this.info.nonce,deadline:this.info.deadline,input:this.info.input,fee:this.info.fee,universalRouterCalldata:this.info.universalRouterCalldata}),this.chainId,this.permit2Address)}}exports.RelayOrderBuilder=RelayOrderBuilder;
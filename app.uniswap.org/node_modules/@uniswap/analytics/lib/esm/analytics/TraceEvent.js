import{jsx as _jsx}from"react/jsx-runtime";import{Children,cloneElement,isValidElement,memo}from"react";import{sendAnalyticsEvent}from".";import{Trace,TraceContext}from"./Trace";export const TraceEvent=memo((props=>{const{shouldLogImpression:shouldLogImpression,name:name,properties:properties,events:events,children:children,...traceProps}=props;return _jsx(Trace,{...traceProps,children:_jsx(TraceContext.Consumer,{children:traceContext=>Children.map(children,(child=>isValidElement(child)?cloneElement(child,getEventHandlers(child,traceContext,events,name,properties,shouldLogImpression)):child))})})}));function getEventHandlers(child,traceContext,events,name,properties,shouldLogImpression=!0){const eventHandlers={};for(const event of events)eventHandlers[event]=eventHandlerArgs=>{const args=Array.isArray(eventHandlerArgs)?eventHandlerArgs:[eventHandlerArgs];child.props[event]?.apply(child,args),shouldLogImpression&&sendAnalyticsEvent(name,{...traceContext,...properties,action:event})};return eventHandlers}TraceEvent.displayName="TraceEvent";
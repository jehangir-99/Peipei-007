import{startTelemetry,canUseEventBridge,getEventBridge,startBatchWithReplica,createIdentityEncoder,isTelemetryReplicationAllowed,addTelemetryConfiguration,drainPreStartTelemetry}from"@datadog/browser-core";import{getRUMInternalContext}from"./contexts/rumInternalContext";import{serializeLogsConfiguration}from"./configuration";export function startLogsTelemetry(initConfiguration,configuration,reportError,pageExitObservable,session){var telemetry=startTelemetry("browser-logs-sdk",configuration);telemetry.setContextProvider((function(){var _a,_b,_c,_d,_e,_f;return{application:{id:null===(_a=getRUMInternalContext())||void 0===_a?void 0:_a.application_id},session:{id:null===(_b=session.findTrackedSession())||void 0===_b?void 0:_b.id},view:{id:null===(_d=null===(_c=getRUMInternalContext())||void 0===_c?void 0:_c.view)||void 0===_d?void 0:_d.id},action:{id:null===(_f=null===(_e=getRUMInternalContext())||void 0===_e?void 0:_e.user_action)||void 0===_f?void 0:_f.id}}}));var cleanupTasks=[];if(canUseEventBridge()){var bridge_1=getEventBridge(),telemetrySubscription_1=telemetry.observable.subscribe((function(event){return bridge_1.send("internal_telemetry",event)}));cleanupTasks.push((function(){return telemetrySubscription_1.unsubscribe()}))}else{var telemetryBatch_1=startBatchWithReplica(configuration,{endpoint:configuration.rumEndpointBuilder,encoder:createIdentityEncoder()},configuration.replica&&{endpoint:configuration.replica.rumEndpointBuilder,encoder:createIdentityEncoder()},reportError,pageExitObservable,session.expireObservable);cleanupTasks.push((function(){return telemetryBatch_1.stop()}));var telemetrySubscription_2=telemetry.observable.subscribe((function(event){return telemetryBatch_1.add(event,isTelemetryReplicationAllowed(configuration))}));cleanupTasks.push((function(){return telemetrySubscription_2.unsubscribe()}))}return drainPreStartTelemetry(),addTelemetryConfiguration(serializeLogsConfiguration(initConfiguration)),{telemetry:telemetry,stop:function(){cleanupTasks.forEach((function(task){return task()}))}}}
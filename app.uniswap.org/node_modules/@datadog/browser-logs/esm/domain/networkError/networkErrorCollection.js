import{ErrorSource,initXhrObservable,initFetchObservable,computeStackTrace,toStackTraceString,monitor,noop,readBytesFromStream,tryToClone,isServerError}from"@datadog/browser-core";import{StatusType}from"../logger";export function startNetworkErrorCollection(configuration,lifeCycle){if(!configuration.forwardErrorsToLogs)return{stop:noop};var xhrSubscription=initXhrObservable(configuration).subscribe((function(context){"complete"===context.state&&handleResponse("xhr",context)})),fetchSubscription=initFetchObservable().subscribe((function(context){"resolve"===context.state&&handleResponse("fetch",context)}));function handleResponse(type,request){function onResponseDataAvailable(responseData){var domainContext={isAborted:request.isAborted};lifeCycle.notify(0,{rawLogsEvent:{message:"".concat(format(type)," error ").concat(request.method," ").concat(request.url),date:request.startClocks.timeStamp,error:{stack:responseData||"Failed to load"},http:{method:request.method,status_code:request.status,url:request.url},status:StatusType.error,origin:ErrorSource.NETWORK},domainContext:domainContext})}configuration.isIntakeUrl(request.url)||!isRejected(request)&&!isServerError(request.status)||("xhr"in request?computeXhrResponseData(request.xhr,configuration,onResponseDataAvailable):request.response?computeFetchResponseText(request.response,configuration,onResponseDataAvailable):request.error&&computeFetchErrorText(request.error,configuration,onResponseDataAvailable))}return{stop:function(){xhrSubscription.unsubscribe(),fetchSubscription.unsubscribe()}}}export function computeXhrResponseData(xhr,configuration,callback){"string"==typeof xhr.response?callback(truncateResponseText(xhr.response,configuration)):callback(xhr.response)}export function computeFetchErrorText(error,configuration,callback){callback(truncateResponseText(toStackTraceString(computeStackTrace(error)),configuration))}export function computeFetchResponseText(response,configuration,callback){var clonedResponse=tryToClone(response);clonedResponse&&clonedResponse.body?window.TextDecoder?truncateResponseStream(clonedResponse.body,configuration.requestErrorResponseLengthLimit,(function(error,responseText){callback(error?"Unable to retrieve response: ".concat(error):responseText)})):clonedResponse.text().then(monitor((function(text){return callback(truncateResponseText(text,configuration))})),monitor((function(error){return callback("Unable to retrieve response: ".concat(error))}))):callback()}function isRejected(request){return 0===request.status&&"opaque"!==request.responseType}function truncateResponseText(responseText,configuration){return responseText.length>configuration.requestErrorResponseLengthLimit?"".concat(responseText.substring(0,configuration.requestErrorResponseLengthLimit),"..."):responseText}function format(type){return"xhr"===type?"XHR":"Fetch"}function truncateResponseStream(stream,bytesLimit,callback){readBytesFromStream(stream,(function(error,bytes,limitExceeded){if(error)callback(error);else{var responseText=(new TextDecoder).decode(bytes);limitExceeded&&(responseText+="..."),callback(void 0,responseText)}}),{bytesLimit:bytesLimit,collectStreamBody:!0})}
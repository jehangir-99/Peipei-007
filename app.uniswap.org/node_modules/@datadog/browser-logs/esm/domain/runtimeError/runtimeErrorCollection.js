import{noop,ErrorSource,trackRuntimeError,Observable}from"@datadog/browser-core";import{StatusType}from"../logger";export function startRuntimeErrorCollection(configuration,lifeCycle){if(!configuration.forwardErrorsToLogs)return{stop:noop};var rawErrorObservable=new Observable,stopRuntimeErrorTracking=trackRuntimeError(rawErrorObservable).stop,rawErrorSubscription=rawErrorObservable.subscribe((function(rawError){lifeCycle.notify(0,{rawLogsEvent:{message:rawError.message,date:rawError.startClocks.timeStamp,error:{kind:rawError.type,stack:rawError.stack,causes:rawError.causes},origin:ErrorSource.SOURCE,status:StatusType.error}})}));return{stop:function(){stopRuntimeErrorTracking(),rawErrorSubscription.unsubscribe()}}}
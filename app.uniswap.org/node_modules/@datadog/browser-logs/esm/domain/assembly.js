import{ErrorSource,combine,createEventRateLimiter,getRelativeTime,isEmptyObject}from"@datadog/browser-core";import{STATUSES}from"./logger";import{getRUMInternalContext}from"./contexts/rumInternalContext";export function startLogsAssembly(sessionManager,configuration,lifeCycle,getCommonContext,reportError){var statusWithCustom=STATUSES.concat(["custom"]),logRateLimiters={};statusWithCustom.forEach((function(status){logRateLimiters[status]=createEventRateLimiter(status,configuration.eventRateLimiterThreshold,reportError)})),lifeCycle.subscribe(0,(function(_a){var _b,_c,rawLogsEvent=_a.rawLogsEvent,_d=_a.messageContext,messageContext=void 0===_d?void 0:_d,_e=_a.savedCommonContext,savedCommonContext=void 0===_e?void 0:_e,domainContext=_a.domainContext,startTime=getRelativeTime(rawLogsEvent.date),session=sessionManager.findTrackedSession(startTime);if(session||configuration.sendLogsAfterSessionExpiration&&sessionManager.findTrackedSession(startTime,{returnInactive:!0})){var commonContext=savedCommonContext||getCommonContext(),log=combine({service:configuration.service,session_id:null==session?void 0:session.id,usr:isEmptyObject(commonContext.user)?void 0:commonContext.user,view:commonContext.view},commonContext.context,getRUMInternalContext(startTime),rawLogsEvent,messageContext);!1===(null===(_b=configuration.beforeSend)||void 0===_b?void 0:_b.call(configuration,log,domainContext))||log.origin!==ErrorSource.AGENT&&(null!==(_c=logRateLimiters[log.status])&&void 0!==_c?_c:logRateLimiters.custom).isLimitReached()||lifeCycle.notify(1,log)}}))}
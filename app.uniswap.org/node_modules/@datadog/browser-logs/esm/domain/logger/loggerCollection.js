var _a;import{includes,combine,ErrorSource,timeStampNow,originalConsoleMethods,globalConsole}from"@datadog/browser-core";import{StatusType,HandlerType}from"../logger";export var STATUS_PRIORITIES=(_a={},_a[StatusType.debug]=0,_a[StatusType.info]=1,_a[StatusType.warn]=2,_a[StatusType.error]=3,_a);export function startLoggerCollection(lifeCycle){return{handleLog:function(logsMessage,logger,savedCommonContext,savedDate){var messageContext=combine(logger.getContext(),logsMessage.context);isAuthorized(logsMessage.status,HandlerType.console,logger)&&displayInConsole(logsMessage,messageContext),isAuthorized(logsMessage.status,HandlerType.http,logger)&&lifeCycle.notify(0,{rawLogsEvent:{date:savedDate||timeStampNow(),message:logsMessage.message,status:logsMessage.status,origin:ErrorSource.LOGGER},messageContext:messageContext,savedCommonContext:savedCommonContext})}}}export function isAuthorized(status,handlerType,logger){var loggerHandler=logger.getHandler(),sanitizedHandlerType=Array.isArray(loggerHandler)?loggerHandler:[loggerHandler];return STATUS_PRIORITIES[status]>=STATUS_PRIORITIES[logger.getLevel()]&&includes(sanitizedHandlerType,handlerType)}function displayInConsole(logsMessage,messageContext){originalConsoleMethods[logsMessage.status].call(globalConsole,logsMessage.message,messageContext)}
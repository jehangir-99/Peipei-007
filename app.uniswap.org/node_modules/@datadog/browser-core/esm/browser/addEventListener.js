import{monitor}from"../tools/monitor";import{getZoneJsOriginalValue}from"../tools/getZoneJsOriginalValue";export var DOM_EVENT;!function(DOM_EVENT){DOM_EVENT.BEFORE_UNLOAD="beforeunload",DOM_EVENT.CLICK="click",DOM_EVENT.DBL_CLICK="dblclick",DOM_EVENT.KEY_DOWN="keydown",DOM_EVENT.LOAD="load",DOM_EVENT.POP_STATE="popstate",DOM_EVENT.SCROLL="scroll",DOM_EVENT.TOUCH_START="touchstart",DOM_EVENT.TOUCH_END="touchend",DOM_EVENT.TOUCH_MOVE="touchmove",DOM_EVENT.VISIBILITY_CHANGE="visibilitychange",DOM_EVENT.PAGE_SHOW="pageshow",DOM_EVENT.FREEZE="freeze",DOM_EVENT.RESUME="resume",DOM_EVENT.DOM_CONTENT_LOADED="DOMContentLoaded",DOM_EVENT.POINTER_DOWN="pointerdown",DOM_EVENT.POINTER_UP="pointerup",DOM_EVENT.POINTER_CANCEL="pointercancel",DOM_EVENT.HASH_CHANGE="hashchange",DOM_EVENT.PAGE_HIDE="pagehide",DOM_EVENT.MOUSE_DOWN="mousedown",DOM_EVENT.MOUSE_UP="mouseup",DOM_EVENT.MOUSE_MOVE="mousemove",DOM_EVENT.FOCUS="focus",DOM_EVENT.BLUR="blur",DOM_EVENT.CONTEXT_MENU="contextmenu",DOM_EVENT.RESIZE="resize",DOM_EVENT.CHANGE="change",DOM_EVENT.INPUT="input",DOM_EVENT.PLAY="play",DOM_EVENT.PAUSE="pause",DOM_EVENT.SECURITY_POLICY_VIOLATION="securitypolicyviolation",DOM_EVENT.SELECTION_CHANGE="selectionchange",DOM_EVENT.STORAGE="storage"}(DOM_EVENT||(DOM_EVENT={}));export function addEventListener(configuration,eventTarget,eventName,listener,options){return addEventListeners(configuration,eventTarget,[eventName],listener,options)}export function addEventListeners(configuration,eventTarget,eventNames,listener,_a){var _b=void 0===_a?{}:_a,once=_b.once,capture=_b.capture,passive=_b.passive,listenerWithMonitor=monitor((function(event){(event.isTrusted||event.__ddIsTrusted||configuration.allowUntrustedEvents)&&(once&&stop(),listener(event))})),options=passive?{capture:capture,passive:passive}:capture,add=getZoneJsOriginalValue(eventTarget,"addEventListener");function stop(){var remove=getZoneJsOriginalValue(eventTarget,"removeEventListener");eventNames.forEach((function(eventName){return remove.call(eventTarget,eventName,listenerWithMonitor,options)}))}return eventNames.forEach((function(eventName){return add.call(eventTarget,eventName,listenerWithMonitor,options)})),{stop:stop}}
import{setTimeout}from"./timer";import{callMonitored}from"./monitor";import{noop}from"./utils/functionUtils";import{arrayFrom,startsWith}from"./utils/polyfills";import{createHandlingStack}from"./stackTrace/handlingStack";export function instrumentMethod(targetPrototype,method,onPreCall,_a){var computeHandlingStack=(void 0===_a?{}:_a).computeHandlingStack,original=targetPrototype[method];if("function"!=typeof original){if(!startsWith(method,"on"))return{stop:noop};original=noop}var stopped=!1,instrumentation=function(){if(stopped)return original.apply(this,arguments);var postCallCallback,parameters=arrayFrom(arguments);callMonitored(onPreCall,null,[{target:this,parameters:parameters,onPostCall:function(callback){postCallCallback=callback},handlingStack:computeHandlingStack?createHandlingStack():void 0}]);var result=original.apply(this,parameters);return postCallCallback&&callMonitored(postCallCallback,null,[result]),result};return targetPrototype[method]=instrumentation,{stop:function(){stopped=!0,targetPrototype[method]===instrumentation&&(targetPrototype[method]=original)}}}export function instrumentSetter(targetPrototype,property,after){var originalDescriptor=Object.getOwnPropertyDescriptor(targetPrototype,property);if(!originalDescriptor||!originalDescriptor.set||!originalDescriptor.configurable)return{stop:noop};var stoppedInstrumentation=noop,instrumentation=function(target,value){setTimeout((function(){instrumentation!==stoppedInstrumentation&&after(target,value)}),0)},instrumentationWrapper=function(value){originalDescriptor.set.call(this,value),instrumentation(this,value)};return Object.defineProperty(targetPrototype,property,{set:instrumentationWrapper}),{stop:function(){var _a;(null===(_a=Object.getOwnPropertyDescriptor(targetPrototype,property))||void 0===_a?void 0:_a.set)===instrumentationWrapper&&Object.defineProperty(targetPrototype,property,originalDescriptor),instrumentation=stoppedInstrumentation}}}
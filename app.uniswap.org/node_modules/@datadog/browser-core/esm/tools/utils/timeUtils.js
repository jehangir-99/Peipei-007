import{isNumber,round}from"./numberUtils";export var ONE_SECOND=1e3;export var ONE_MINUTE=60*ONE_SECOND;export var ONE_HOUR=60*ONE_MINUTE;export var ONE_DAY=24*ONE_HOUR;export var ONE_YEAR=365*ONE_DAY;export function relativeToClocks(relative){return{relative:relative,timeStamp:getCorrectedTimeStamp(relative)}}export function timeStampToClocks(timeStamp){return{relative:getRelativeTime(timeStamp),timeStamp:timeStamp}}function getCorrectedTimeStamp(relativeTime){var correctedOrigin=dateNow()-performance.now();return correctedOrigin>getNavigationStart()?Math.round(addDuration(correctedOrigin,relativeTime)):getTimeStamp(relativeTime)}export function currentDrift(){return Math.round(dateNow()-addDuration(getNavigationStart(),performance.now()))}export function toServerDuration(duration){return isNumber(duration)?round(1e6*duration,0):duration}export function dateNow(){return(new Date).getTime()}export function timeStampNow(){return dateNow()}export function relativeNow(){return performance.now()}export function clocksNow(){return{relative:relativeNow(),timeStamp:timeStampNow()}}export function clocksOrigin(){return{relative:0,timeStamp:getNavigationStart()}}export function elapsed(start,end){return end-start}export function addDuration(a,b){return a+b}export function getRelativeTime(timestamp){return timestamp-getNavigationStart()}export function getTimeStamp(relativeTime){return Math.round(addDuration(getNavigationStart(),relativeTime))}export function looksLikeRelativeTime(time){return time<ONE_YEAR}var navigationStart;function getNavigationStart(){return void 0===navigationStart&&(navigationStart=performance.timing.navigationStart),navigationStart}export function resetNavigationStart(){navigationStart=void 0}
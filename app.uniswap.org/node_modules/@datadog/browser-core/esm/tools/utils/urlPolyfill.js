import{jsonStringify}from"../serialisation/jsonStringify";export function normalizeUrl(url){return buildUrl(url,location.href).href}export function isValidUrl(url){try{return!!buildUrl(url)}catch(_a){return!1}}export function getPathName(url){var pathname=buildUrl(url).pathname;return"/"===pathname[0]?pathname:"/".concat(pathname)}export function buildUrl(url,base){var supportedURL=getSupportedUrl();if(supportedURL)try{return void 0!==base?new supportedURL(url,base):new supportedURL(url)}catch(error){throw new Error("Failed to construct URL: ".concat(String(error)," ").concat(jsonStringify({url:url,base:base})))}if(void 0===base&&!/:/.test(url))throw new Error("Invalid URL: '".concat(url,"'"));var doc=document,anchorElement=doc.createElement("a");if(void 0!==base){var baseElement=(doc=document.implementation.createHTMLDocument("")).createElement("base");baseElement.href=base,doc.head.appendChild(baseElement),doc.body.appendChild(anchorElement)}return anchorElement.href=url,anchorElement}var isURLSupported,originalURL=URL;function getSupportedUrl(){if(void 0===isURLSupported)try{var url=new originalURL("http://test/path");isURLSupported="http://test/path"===url.href}catch(_a){isURLSupported=!1}return isURLSupported?originalURL:void 0}
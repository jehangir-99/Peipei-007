import{setTimeout}from"../tools/timer";import{clocksNow,ONE_MINUTE,ONE_SECOND}from"../tools/utils/timeUtils";import{ONE_MEBI_BYTE,ONE_KIBI_BYTE}from"../tools/utils/byteUtils";import{isServerError}from"../tools/utils/responseUtils";import{ErrorSource}from"../domain/error/error.types";export var MAX_ONGOING_BYTES_COUNT=80*ONE_KIBI_BYTE;export var MAX_ONGOING_REQUESTS=32;export var MAX_QUEUE_BYTES_COUNT=3*ONE_MEBI_BYTE;export var MAX_BACKOFF_TIME=ONE_MINUTE;export var INITIAL_BACKOFF_TIME=ONE_SECOND;export function sendWithRetryStrategy(payload,state,sendStrategy,trackType,reportError){0===state.transportStatus&&0===state.queuedPayloads.size()&&state.bandwidthMonitor.canHandle(payload)?send(payload,state,sendStrategy,{onSuccess:function(){return retryQueuedPayloads(0,state,sendStrategy,trackType,reportError)},onFailure:function(){state.queuedPayloads.enqueue(payload),scheduleRetry(state,sendStrategy,trackType,reportError)}}):state.queuedPayloads.enqueue(payload)}function scheduleRetry(state,sendStrategy,trackType,reportError){2===state.transportStatus&&setTimeout((function(){send(state.queuedPayloads.first(),state,sendStrategy,{onSuccess:function(){state.queuedPayloads.dequeue(),state.currentBackoffTime=INITIAL_BACKOFF_TIME,retryQueuedPayloads(1,state,sendStrategy,trackType,reportError)},onFailure:function(){state.currentBackoffTime=Math.min(MAX_BACKOFF_TIME,2*state.currentBackoffTime),scheduleRetry(state,sendStrategy,trackType,reportError)}})}),state.currentBackoffTime)}function send(payload,state,sendStrategy,_a){var onSuccess=_a.onSuccess,onFailure=_a.onFailure;state.bandwidthMonitor.add(payload),sendStrategy(payload,(function(response){state.bandwidthMonitor.remove(payload),shouldRetryRequest(response)?(state.transportStatus=state.bandwidthMonitor.ongoingRequestCount>0?1:2,payload.retry={count:payload.retry?payload.retry.count+1:1,lastFailureStatus:response.status},onFailure()):(state.transportStatus=0,onSuccess())}))}function retryQueuedPayloads(reason,state,sendStrategy,trackType,reportError){0===reason&&state.queuedPayloads.isFull()&&!state.queueFullReported&&(reportError({message:"Reached max ".concat(trackType," events size queued for upload: ").concat(MAX_QUEUE_BYTES_COUNT/ONE_MEBI_BYTE,"MiB"),source:ErrorSource.AGENT,startClocks:clocksNow()}),state.queueFullReported=!0);var previousQueue=state.queuedPayloads;for(state.queuedPayloads=newPayloadQueue();previousQueue.size()>0;)sendWithRetryStrategy(previousQueue.dequeue(),state,sendStrategy,trackType,reportError)}function shouldRetryRequest(response){return"opaque"!==response.type&&(0===response.status&&!navigator.onLine||408===response.status||429===response.status||isServerError(response.status))}export function newRetryState(){return{transportStatus:0,currentBackoffTime:INITIAL_BACKOFF_TIME,bandwidthMonitor:newBandwidthMonitor(),queuedPayloads:newPayloadQueue(),queueFullReported:!1}}function newPayloadQueue(){var queue=[];return{bytesCount:0,enqueue:function(payload){this.isFull()||(queue.push(payload),this.bytesCount+=payload.bytesCount)},first:function(){return queue[0]},dequeue:function(){var payload=queue.shift();return payload&&(this.bytesCount-=payload.bytesCount),payload},size:function(){return queue.length},isFull:function(){return this.bytesCount>=MAX_QUEUE_BYTES_COUNT}}}function newBandwidthMonitor(){return{ongoingRequestCount:0,ongoingByteCount:0,canHandle:function(payload){return 0===this.ongoingRequestCount||this.ongoingByteCount+payload.bytesCount<=MAX_ONGOING_BYTES_COUNT&&this.ongoingRequestCount<MAX_ONGOING_REQUESTS},add:function(payload){this.ongoingRequestCount+=1,this.ongoingByteCount+=payload.bytesCount},remove:function(payload){this.ongoingRequestCount-=1,this.ongoingByteCount-=payload.bytesCount}}}
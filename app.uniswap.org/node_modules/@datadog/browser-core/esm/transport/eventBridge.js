import{endsWith,includes}from"../tools/utils/polyfills";import{getGlobalObject}from"../tools/getGlobalObject";export function getEventBridge(){var eventBridgeGlobal=getEventBridgeGlobal();if(eventBridgeGlobal)return{getCapabilities:function(){var _a;return JSON.parse((null===(_a=eventBridgeGlobal.getCapabilities)||void 0===_a?void 0:_a.call(eventBridgeGlobal))||"[]")},getPrivacyLevel:function(){var _a;return null===(_a=eventBridgeGlobal.getPrivacyLevel)||void 0===_a?void 0:_a.call(eventBridgeGlobal)},getAllowedWebViewHosts:function(){return JSON.parse(eventBridgeGlobal.getAllowedWebViewHosts())},send:function(eventType,event,viewId){var view=viewId?{id:viewId}:void 0;eventBridgeGlobal.send(JSON.stringify({eventType:eventType,event:event,view:view}))}}}export function bridgeSupports(capability){var bridge=getEventBridge();return!!bridge&&includes(bridge.getCapabilities(),capability)}export function canUseEventBridge(currentHost){var _a;void 0===currentHost&&(currentHost=null===(_a=getGlobalObject().location)||void 0===_a?void 0:_a.hostname);var bridge=getEventBridge();return!!bridge&&bridge.getAllowedWebViewHosts().some((function(allowedHost){return currentHost===allowedHost||endsWith(currentHost,".".concat(allowedHost))}))}function getEventBridgeGlobal(){return getGlobalObject().DatadogEventBridge}
import{objectValues,assign}from"../../tools/utils/polyfills";import{createEndpointBuilder}from"./endpointBuilder";import{buildTags}from"./tags";import{INTAKE_SITE_US1,PCI_INTAKE_HOST_US1}from"./intakeSites";export function computeTransportConfiguration(initConfiguration){var site=initConfiguration.site||INTAKE_SITE_US1,tags=buildTags(initConfiguration),endpointBuilders=computeEndpointBuilders(initConfiguration,tags),intakeUrlPrefixes=computeIntakeUrlPrefixes(endpointBuilders,site),replicaConfiguration=computeReplicaConfiguration(initConfiguration,intakeUrlPrefixes,tags);return assign({isIntakeUrl:function(url){return intakeUrlPrefixes.some((function(intakeEndpoint){return 0===url.indexOf(intakeEndpoint)}))},replica:replicaConfiguration,site:site},endpointBuilders)}function computeEndpointBuilders(initConfiguration,tags){return{logsEndpointBuilder:createEndpointBuilder(initConfiguration,"logs",tags),rumEndpointBuilder:createEndpointBuilder(initConfiguration,"rum",tags),sessionReplayEndpointBuilder:createEndpointBuilder(initConfiguration,"replay",tags)}}function computeReplicaConfiguration(initConfiguration,intakeUrlPrefixes,tags){if(initConfiguration.replica){var replicaConfiguration=assign({},initConfiguration,{site:INTAKE_SITE_US1,clientToken:initConfiguration.replica.clientToken}),replicaEndpointBuilders={logsEndpointBuilder:createEndpointBuilder(replicaConfiguration,"logs",tags),rumEndpointBuilder:createEndpointBuilder(replicaConfiguration,"rum",tags)};return intakeUrlPrefixes.push.apply(intakeUrlPrefixes,objectValues(replicaEndpointBuilders).map((function(builder){return builder.urlPrefix}))),assign({applicationId:initConfiguration.replica.applicationId},replicaEndpointBuilders)}}function computeIntakeUrlPrefixes(endpointBuilders,site){var intakeUrlPrefixes=objectValues(endpointBuilders).map((function(builder){return builder.urlPrefix}));return site===INTAKE_SITE_US1&&intakeUrlPrefixes.push("https://".concat(PCI_INTAKE_HOST_US1,"/")),intakeUrlPrefixes}
import{setTimeout}from"../../tools/timer";import{generateUUID}from"../../tools/utils/stringUtils";import{assign}from"../../tools/utils/polyfills";import{expandSessionState,isSessionInExpiredState}from"./sessionState";export var LOCK_RETRY_DELAY=10;export var LOCK_MAX_TRIES=100;var ongoingOperations,bufferedOperations=[];export function processSessionStoreOperations(operations,sessionStoreStrategy,numberOfRetries){var _a;void 0===numberOfRetries&&(numberOfRetries=0);var isLockEnabled=sessionStoreStrategy.isLockEnabled,persistSession=sessionStoreStrategy.persistSession,expireSession=sessionStoreStrategy.expireSession,persistWithLock=function(session){return persistSession(assign({},session,{lock:currentLock}))},retrieveStore=function(){var session=sessionStoreStrategy.retrieveSession(),lock=session.lock;return session.lock&&delete session.lock,{session:session,lock:lock}};if(ongoingOperations||(ongoingOperations=operations),operations===ongoingOperations)if(isLockEnabled&&numberOfRetries>=LOCK_MAX_TRIES)next(sessionStoreStrategy);else{var currentLock,currentStore=retrieveStore();if(isLockEnabled){if(currentStore.lock)return void retryLater(operations,sessionStoreStrategy,numberOfRetries);if(currentLock=generateUUID(),persistWithLock(currentStore.session),(currentStore=retrieveStore()).lock!==currentLock)return void retryLater(operations,sessionStoreStrategy,numberOfRetries)}var processedSession=operations.process(currentStore.session);if(isLockEnabled&&(currentStore=retrieveStore()).lock!==currentLock)retryLater(operations,sessionStoreStrategy,numberOfRetries);else{if(processedSession&&(isSessionInExpiredState(processedSession)?expireSession():(expandSessionState(processedSession),isLockEnabled?persistWithLock(processedSession):persistSession(processedSession))),isLockEnabled&&(!processedSession||!isSessionInExpiredState(processedSession))){if((currentStore=retrieveStore()).lock!==currentLock)return void retryLater(operations,sessionStoreStrategy,numberOfRetries);persistSession(currentStore.session),processedSession=currentStore.session}null===(_a=operations.after)||void 0===_a||_a.call(operations,processedSession||currentStore.session),next(sessionStoreStrategy)}}else bufferedOperations.push(operations)}function retryLater(operations,sessionStore,currentNumberOfRetries){setTimeout((function(){processSessionStoreOperations(operations,sessionStore,currentNumberOfRetries+1)}),LOCK_RETRY_DELAY)}function next(sessionStore){ongoingOperations=void 0;var nextOperations=bufferedOperations.shift();nextOperations&&processSessionStoreOperations(nextOperations,sessionStore)}
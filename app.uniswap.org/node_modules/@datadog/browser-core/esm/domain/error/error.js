import{sanitize}from"../../tools/serialisation/sanitize";import{jsonStringify}from"../../tools/serialisation/jsonStringify";import{computeStackTrace}from"../../tools/stackTrace/computeStackTrace";import{toStackTraceString}from"../../tools/stackTrace/handlingStack";export var NO_ERROR_STACK_PRESENT_MESSAGE="No stack, consider using an instance of Error";export function computeRawError(_a){var stackTrace=_a.stackTrace,originalError=_a.originalError,handlingStack=_a.handlingStack,startClocks=_a.startClocks,nonErrorPrefix=_a.nonErrorPrefix,source=_a.source,handling=_a.handling,isErrorInstance=originalError instanceof Error,message=computeMessage(stackTrace,isErrorInstance,nonErrorPrefix,originalError),stack=hasUsableStack(isErrorInstance,stackTrace)?toStackTraceString(stackTrace):NO_ERROR_STACK_PRESENT_MESSAGE,causes=isErrorInstance?flattenErrorCauses(originalError,source):void 0;return{startClocks:startClocks,source:source,handling:handling,handlingStack:handlingStack,originalError:originalError,type:null==stackTrace?void 0:stackTrace.name,message:message,stack:stack,causes:causes,fingerprint:tryToGetFingerprint(originalError)}}function computeMessage(stackTrace,isErrorInstance,nonErrorPrefix,originalError){return(null==stackTrace?void 0:stackTrace.message)&&(null==stackTrace?void 0:stackTrace.name)?stackTrace.message:isErrorInstance?"Empty message":"".concat(nonErrorPrefix," ").concat(jsonStringify(sanitize(originalError)))}function hasUsableStack(isErrorInstance,stackTrace){return void 0!==stackTrace&&(!!isErrorInstance||stackTrace.stack.length>0&&(stackTrace.stack.length>1||void 0!==stackTrace.stack[0].url))}export function tryToGetFingerprint(originalError){return originalError instanceof Error&&"dd_fingerprint"in originalError?String(originalError.dd_fingerprint):void 0}export function getFileFromStackTraceString(stack){var _a;return null===(_a=/@ (.+)/.exec(stack))||void 0===_a?void 0:_a[1]}export function flattenErrorCauses(error,parentSource){for(var currentError=error,causes=[];(null==currentError?void 0:currentError.cause)instanceof Error&&causes.length<10;){var stackTrace=computeStackTrace(currentError.cause);causes.push({message:currentError.cause.message,source:parentSource,type:null==stackTrace?void 0:stackTrace.name,stack:stackTrace&&toStackTraceString(stackTrace)}),currentError=currentError.cause}return causes.length?causes:void 0}
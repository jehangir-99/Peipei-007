import{instrumentMethod}from"../../tools/instrumentMethod";import{clocksNow}from"../../tools/utils/timeUtils";import{computeStackTrace,computeStackTraceFromOnErrorMessage}from"../../tools/stackTrace/computeStackTrace";import{computeRawError}from"./error";import{ErrorSource}from"./error.types";export function trackRuntimeError(errorObservable){var handleRuntimeError=function(stackTrace,originalError){var rawError=computeRawError({stackTrace:stackTrace,originalError:originalError,startClocks:clocksNow(),nonErrorPrefix:"Uncaught",source:ErrorSource.SOURCE,handling:"unhandled"});errorObservable.notify(rawError)},stopInstrumentingOnError=instrumentOnError(handleRuntimeError).stop,stopInstrumentingOnUnhandledRejection=instrumentUnhandledRejection(handleRuntimeError).stop;return{stop:function(){stopInstrumentingOnError(),stopInstrumentingOnUnhandledRejection()}}}export function instrumentOnError(callback){return instrumentMethod(window,"onerror",(function(_a){var stackTrace,_b=_a.parameters,messageObj=_b[0],url=_b[1],line=_b[2],column=_b[3],errorObj=_b[4];stackTrace=errorObj instanceof Error?computeStackTrace(errorObj):computeStackTraceFromOnErrorMessage(messageObj,url,line,column),callback(stackTrace,null!=errorObj?errorObj:messageObj)}))}export function instrumentUnhandledRejection(callback){return instrumentMethod(window,"onunhandledrejection",(function(_a){var reason=_a.parameters[0].reason||"Empty reason",stack=computeStackTrace(reason);callback(stack,reason)}))}
import{__assign,__awaiter,__generator,__read}from"tslib";import{CampaignParser}from"@amplitude/analytics-client-common";import{PluginType}from"@amplitude/analytics-types";import{createCampaignEvent,getStorageKey,isNewCampaign}from"./helpers";export var webAttributionPlugin=function(){for(var _a,amplitude,_this=this,args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];var options={},_b=__read(args,2),clientOrOptions=_b[0],configOrUndefined=_b[1];clientOrOptions&&"init"in clientOrOptions?(amplitude=clientOrOptions,configOrUndefined&&(options=configOrUndefined)):clientOrOptions&&(options=clientOrOptions);var excludeReferrers=null!==(_a=options.excludeReferrers)&&void 0!==_a?_a:[];"undefined"!=typeof location&&excludeReferrers.unshift(location.hostname),options=__assign(__assign({disabled:!1,initialEmptyValue:"EMPTY",resetSessionOnNewCampaign:!1},options),{excludeReferrers:excludeReferrers});var plugin={name:"web-attribution",type:PluginType.BEFORE,setup:function(config,client){var _a;return __awaiter(this,void 0,void 0,(function(){var receivedType,storage,storageKey,_b,currentCampaign,previousCampaign,pluginEnabledOverride,campaignEvent;return __generator(this,(function(_c){switch(_c.label){case 0:return(amplitude=null!=amplitude?amplitude:client)?options.disabled?(config.loggerProvider.log("@amplitude/plugin-web-attribution-browser is disabled. Attribution is not tracked."),[2]):(config.loggerProvider.log("Installing @amplitude/plugin-web-attribution-browser."),client||(null===(_a=config.attribution)||void 0===_a?void 0:_a.disabled)||(config.loggerProvider.warn("@amplitude/plugin-web-attribution-browser overrides web attribution behavior defined in @amplitude/analytics-browser. Resolve by disabling web attribution tracking in @amplitude/analytics-browser."),config.attribution={disabled:!0}),storage=config.cookieStorage,storageKey=getStorageKey(config.apiKey,"MKTG"),[4,Promise.all([(new CampaignParser).parse(),storage.get(storageKey)])]):(receivedType=clientOrOptions?"Options":"undefined",config.loggerProvider.error("Argument of type '".concat(receivedType,"' is not assignable to parameter of type 'BrowserClient'.")),[2]);case 1:return _b=__read.apply(void 0,[_c.sent(),2]),currentCampaign=_b[0],previousCampaign=_b[1],(null!=(pluginEnabledOverride=this.__pluginEnabledOverride)?pluginEnabledOverride:isNewCampaign(currentCampaign,previousCampaign,options))&&(options.resetSessionOnNewCampaign&&(amplitude.setSessionId(Date.now()),config.loggerProvider.log("Created a new session for new campaign.")),config.loggerProvider.log("Tracking attribution."),campaignEvent=createCampaignEvent(currentCampaign,options),amplitude.track(campaignEvent),storage.set(storageKey,currentCampaign)),[2]}}))}))},execute:function(event){return __awaiter(_this,void 0,void 0,(function(){return __generator(this,(function(_a){return[2,event]}))}))},__pluginEnabledOverride:void 0};return plugin};
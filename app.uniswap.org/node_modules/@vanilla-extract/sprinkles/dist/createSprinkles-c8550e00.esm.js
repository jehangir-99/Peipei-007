function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}function _toPropertyKey(arg){var key=_toPrimitive(arg,"string");return"symbol"==typeof key?key:String(key)}function _defineProperty(obj,key,value){return(key=_toPropertyKey(key))in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread2(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}var createSprinkles=composeStyles=>function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];var sprinklesStyles=Object.assign({},...args.map((a=>a.styles))),sprinklesKeys=Object.keys(sprinklesStyles),shorthandNames=sprinklesKeys.filter((property=>"mappings"in sprinklesStyles[property]));return Object.assign((props=>{var classNames=[],shorthands={},nonShorthands=_objectSpread2({},props),hasShorthands=!1;for(var shorthand of shorthandNames){var value=props[shorthand];if(null!=value){var sprinkle=sprinklesStyles[shorthand];for(var propMapping of(hasShorthands=!0,sprinkle.mappings))shorthands[propMapping]=value,null==nonShorthands[propMapping]&&delete nonShorthands[propMapping]}}var finalProps=hasShorthands?_objectSpread2(_objectSpread2({},shorthands),nonShorthands):props,_loop=function(){var propValue=finalProps[prop],sprinkle=sprinklesStyles[prop];try{if(sprinkle.mappings)return"continue";if("string"==typeof propValue||"number"==typeof propValue){if("production"!==process.env.NODE_ENV&&!sprinkle.values[propValue].defaultClass)throw new Error;classNames.push(sprinkle.values[propValue].defaultClass)}else if(Array.isArray(propValue))for(var responsiveIndex=0;responsiveIndex<propValue.length;responsiveIndex++){var responsiveValue=propValue[responsiveIndex];if(null!=responsiveValue){var conditionName=sprinkle.responsiveArray[responsiveIndex];if("production"!==process.env.NODE_ENV&&!sprinkle.values[responsiveValue].conditions[conditionName])throw new Error;classNames.push(sprinkle.values[responsiveValue].conditions[conditionName])}}else for(var _conditionName in propValue){var _value=propValue[_conditionName];if(null!=_value){if("production"!==process.env.NODE_ENV&&!sprinkle.values[_value].conditions[_conditionName])throw new Error;classNames.push(sprinkle.values[_value].conditions[_conditionName])}}}catch(e){if("production"!==process.env.NODE_ENV){class SprinklesError extends Error{constructor(message){super(message),this.name="SprinklesError"}}var format=v=>"string"==typeof v?'"'.concat(v,'"'):v,invalidPropValue=(prop,value,possibleValues)=>{throw new SprinklesError('"'.concat(prop,'" has no value ').concat(format(value),". Possible values are ").concat(Object.keys(possibleValues).map(format).join(", ")))};if(!sprinkle)throw new SprinklesError('"'.concat(prop,'" is not a valid sprinkle'));if(("string"==typeof propValue||"number"==typeof propValue)&&(propValue in sprinkle.values||invalidPropValue(prop,propValue,sprinkle.values),!sprinkle.values[propValue].defaultClass))throw new SprinklesError('"'.concat(prop,'" has no default condition. You must specify which conditions to target explicitly. Possible options are ').concat(Object.keys(sprinkle.values[propValue].conditions).map(format).join(", ")));if("object"==typeof propValue){if(!("conditions"in sprinkle.values[Object.keys(sprinkle.values)[0]]))throw new SprinklesError('"'.concat(prop,'" is not a conditional property'));if(Array.isArray(propValue)){if(!("responsiveArray"in sprinkle))throw new SprinklesError('"'.concat(prop,'" does not support responsive arrays'));var breakpointCount=sprinkle.responsiveArray.length;if(breakpointCount<propValue.length)throw new SprinklesError('"'.concat(prop,'" only supports up to ').concat(breakpointCount," breakpoints. You passed ").concat(propValue.length));for(var _responsiveValue of propValue)sprinkle.values[_responsiveValue]||invalidPropValue(prop,_responsiveValue,sprinkle.values)}else for(var _conditionName2 in propValue){var _value2=propValue[_conditionName2];if(null!=_value2&&(sprinkle.values[_value2]||invalidPropValue(prop,_value2,sprinkle.values),!sprinkle.values[_value2].conditions[_conditionName2]))throw new SprinklesError('"'.concat(prop,'" has no condition named ').concat(format(_conditionName2),". Possible values are ").concat(Object.keys(sprinkle.values[_value2].conditions).map(format).join(", ")))}}}throw e}};for(var prop in finalProps)_loop();return composeStyles(classNames.join(" "))}),{properties:new Set(sprinklesKeys)})};export{createSprinkles as c};
import{}from"../types/chain.js";import{hexToBigInt}from"../utils/encoding/fromHex.js";import{numberToHex}from"../utils/encoding/toHex.js";import{defineBlock}from"../utils/formatters/block.js";import{defineTransaction,formatTransaction}from"../utils/formatters/transaction.js";import{defineTransactionRequest}from"../utils/formatters/transactionRequest.js";import{isCIP42,isCIP64}from"./utils.js";export const formatters={block:defineBlock({exclude:["difficulty","gasLimit","mixHash","nonce","uncles"],format(args){const transactions=args.transactions?.map((transaction=>"string"==typeof transaction?transaction:{...formatTransaction(transaction),feeCurrency:transaction.feeCurrency,..."0x7b"!==transaction.type?{gatewayFee:transaction.gatewayFee?hexToBigInt(transaction.gatewayFee):null,gatewayFeeRecipient:transaction.gatewayFeeRecipient||null}:{}}));return{randomness:args.randomness,transactions:transactions}}}),transaction:defineTransaction({format(args){const transaction={feeCurrency:args.feeCurrency};return"0x7b"===args.type?transaction.type="cip64":("0x7c"===args.type&&(transaction.type="cip42"),transaction.gatewayFee=args.gatewayFee?hexToBigInt(args.gatewayFee):null,transaction.gatewayFeeRecipient=args.gatewayFeeRecipient),transaction}}),transactionRequest:defineTransactionRequest({format(args){const request={feeCurrency:args.feeCurrency};return isCIP64(args)?request.type="0x7b":(isCIP42(args)&&(request.type="0x7c"),request.gatewayFee=void 0!==args.gatewayFee?numberToHex(args.gatewayFee):void 0,request.gatewayFeeRecipient=args.gatewayFeeRecipient),request}})};
import{panicReasons}from"../../constants/solidity.js";import{BaseError}from"../../errors/base.js";import{ContractFunctionRevertedError}from"../../errors/contract.js";export function isNullUniversalResolverError(err,callType){if(!(err instanceof BaseError))return!1;const cause=err.walk((e=>e instanceof ContractFunctionRevertedError));return cause instanceof ContractFunctionRevertedError&&("ResolverNotFound"===cause.data?.errorName||("ResolverWildcardNotSupported"===cause.data?.errorName||("ResolverNotContract"===cause.data?.errorName||("ResolverError"===cause.data?.errorName||("HttpError"===cause.data?.errorName||(!!cause.reason?.includes("Wildcard on non-extended resolvers is not supported")||"reverse"===callType&&cause.reason===panicReasons[50]))))))}
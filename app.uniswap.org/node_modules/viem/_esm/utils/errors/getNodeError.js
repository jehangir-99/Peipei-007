import{BaseError}from"../../errors/base.js";import{ExecutionRevertedError,FeeCapTooHighError,FeeCapTooLowError,InsufficientFundsError,IntrinsicGasTooHighError,IntrinsicGasTooLowError,NonceMaxValueError,NonceTooHighError,NonceTooLowError,TipAboveFeeCapError,TransactionTypeNotSupportedError,UnknownNodeError}from"../../errors/node.js";import{RpcRequestError}from"../../errors/request.js";import{InvalidInputRpcError,TransactionRejectedRpcError}from"../../errors/rpc.js";export function containsNodeError(err){return err instanceof TransactionRejectedRpcError||err instanceof InvalidInputRpcError||err instanceof RpcRequestError&&err.code===ExecutionRevertedError.code}export function getNodeError(err,args){const message=(err.details||"").toLowerCase(),executionRevertedError=err instanceof BaseError?err.walk((e=>e.code===ExecutionRevertedError.code)):err;return executionRevertedError instanceof BaseError?new ExecutionRevertedError({cause:err,message:executionRevertedError.details}):ExecutionRevertedError.nodeMessage.test(message)?new ExecutionRevertedError({cause:err,message:err.details}):FeeCapTooHighError.nodeMessage.test(message)?new FeeCapTooHighError({cause:err,maxFeePerGas:args?.maxFeePerGas}):FeeCapTooLowError.nodeMessage.test(message)?new FeeCapTooLowError({cause:err,maxFeePerGas:args?.maxFeePerGas}):NonceTooHighError.nodeMessage.test(message)?new NonceTooHighError({cause:err,nonce:args?.nonce}):NonceTooLowError.nodeMessage.test(message)?new NonceTooLowError({cause:err,nonce:args?.nonce}):NonceMaxValueError.nodeMessage.test(message)?new NonceMaxValueError({cause:err,nonce:args?.nonce}):InsufficientFundsError.nodeMessage.test(message)?new InsufficientFundsError({cause:err}):IntrinsicGasTooHighError.nodeMessage.test(message)?new IntrinsicGasTooHighError({cause:err,gas:args?.gas}):IntrinsicGasTooLowError.nodeMessage.test(message)?new IntrinsicGasTooLowError({cause:err,gas:args?.gas}):TransactionTypeNotSupportedError.nodeMessage.test(message)?new TransactionTypeNotSupportedError({cause:err}):TipAboveFeeCapError.nodeMessage.test(message)?new TipAboveFeeCapError({cause:err,maxFeePerGas:args?.maxFeePerGas,maxPriorityFeePerGas:args?.maxPriorityFeePerGas}):new UnknownNodeError({cause:err})}
import{SliceOffsetOutOfBoundsError}from"../../errors/data.js";import{isHex}from"./isHex.js";import{size}from"./size.js";export function slice(value,start,end,{strict:strict}={}){return isHex(value,{strict:!1})?sliceHex(value,start,end,{strict:strict}):sliceBytes(value,start,end,{strict:strict})}function assertStartOffset(value,start){if("number"==typeof start&&start>0&&start>size(value)-1)throw new SliceOffsetOutOfBoundsError({offset:start,position:"start",size:size(value)})}function assertEndOffset(value,start,end){if("number"==typeof start&&"number"==typeof end&&size(value)!==end-start)throw new SliceOffsetOutOfBoundsError({offset:end,position:"end",size:size(value)})}export function sliceBytes(value_,start,end,{strict:strict}={}){assertStartOffset(value_,start);const value=value_.slice(start,end);return strict&&assertEndOffset(value,start,end),value}export function sliceHex(value_,start,end,{strict:strict}={}){assertStartOffset(value_,start);const value=`0x${value_.replace("0x","").slice(2*(start??0),2*(end??value_.length))}`;return strict&&assertEndOffset(value,start,end),value}
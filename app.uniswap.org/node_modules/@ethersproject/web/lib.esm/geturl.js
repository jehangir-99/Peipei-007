"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P((function(resolve){resolve(value)}))).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};import{arrayify}from"@ethersproject/bytes";export function getUrl(href,options){return __awaiter(this,void 0,void 0,(function*(){null==options&&(options={});const request={method:options.method||"GET",headers:options.headers||{},body:options.body||void 0};if(!0!==options.skipFetchSetup&&(request.mode="cors",request.cache="no-cache",request.credentials="same-origin",request.redirect="follow",request.referrer="client"),null!=options.fetchOptions){const opts=options.fetchOptions;opts.mode&&(request.mode=opts.mode),opts.cache&&(request.cache=opts.cache),opts.credentials&&(request.credentials=opts.credentials),opts.redirect&&(request.redirect=opts.redirect),opts.referrer&&(request.referrer=opts.referrer)}const response=yield fetch(href,request),body=yield response.arrayBuffer(),headers={};return response.headers.forEach?response.headers.forEach(((value,key)=>{headers[key.toLowerCase()]=value})):response.headers.keys().forEach((key=>{headers[key.toLowerCase()]=response.headers.get(key)})),{headers:headers,statusCode:response.status,statusMessage:response.statusText,body:arrayify(new Uint8Array(body))}}))}
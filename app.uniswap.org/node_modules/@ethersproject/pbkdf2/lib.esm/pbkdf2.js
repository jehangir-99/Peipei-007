"use strict";import{arrayify,hexlify}from"@ethersproject/bytes";import{computeHmac}from"@ethersproject/sha2";export function pbkdf2(password,salt,iterations,keylen,hashAlgorithm){let hLen;password=arrayify(password),salt=arrayify(salt);let l=1;const DK=new Uint8Array(keylen),block1=new Uint8Array(salt.length+4);let r,T;block1.set(salt);for(let i=1;i<=l;i++){block1[salt.length]=i>>24&255,block1[salt.length+1]=i>>16&255,block1[salt.length+2]=i>>8&255,block1[salt.length+3]=255&i;let U=arrayify(computeHmac(hashAlgorithm,password,block1));hLen||(hLen=U.length,T=new Uint8Array(hLen),l=Math.ceil(keylen/hLen),r=keylen-(l-1)*hLen),T.set(U);for(let j=1;j<iterations;j++){U=arrayify(computeHmac(hashAlgorithm,password,U));for(let k=0;k<hLen;k++)T[k]^=U[k]}const destPos=(i-1)*hLen,len=i===l?r:hLen;DK.set(arrayify(T).slice(0,len),destPos)}return hexlify(DK)}
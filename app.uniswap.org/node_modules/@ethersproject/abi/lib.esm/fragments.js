"use strict";import{BigNumber}from"@ethersproject/bignumber";import{defineReadOnly}from"@ethersproject/properties";import{Logger}from"@ethersproject/logger";import{version}from"./_version";const logger=new Logger(version),_constructorGuard={};let ModifiersBytes={calldata:!0,memory:!0,storage:!0},ModifiersNest={calldata:!0,memory:!0};function checkModifier(type,name){if("bytes"===type||"string"===type){if(ModifiersBytes[name])return!0}else if("address"===type){if("payable"===name)return!0}else if((type.indexOf("[")>=0||"tuple"===type)&&ModifiersNest[name])return!0;return(ModifiersBytes[name]||"payable"===name)&&logger.throwArgumentError("invalid modifier","name",name),!1}function parseParamType(param,allowIndexed){let originalParam=param;function throwError(i){logger.throwArgumentError(`unexpected character at position ${i}`,"param",param)}function newNode(parent){let node={type:"",name:"",parent:parent,state:{allowType:!0}};return allowIndexed&&(node.indexed=!1),node}param=param.replace(/\s/g," ");let parent={type:"",name:"",state:{allowType:!0}},node=parent;for(let i=0;i<param.length;i++){let c=param[i];switch(c){case"(":node.state.allowType&&""===node.type?node.type="tuple":node.state.allowParams||throwError(i),node.state.allowType=!1,node.type=verifyType(node.type),node.components=[newNode(node)],node=node.components[0];break;case")":delete node.state,"indexed"===node.name&&(allowIndexed||throwError(i),node.indexed=!0,node.name=""),checkModifier(node.type,node.name)&&(node.name=""),node.type=verifyType(node.type);let child=node;node=node.parent,node||throwError(i),delete child.parent,node.state.allowParams=!1,node.state.allowName=!0,node.state.allowArray=!0;break;case",":delete node.state,"indexed"===node.name&&(allowIndexed||throwError(i),node.indexed=!0,node.name=""),checkModifier(node.type,node.name)&&(node.name=""),node.type=verifyType(node.type);let sibling=newNode(node.parent);node.parent.components.push(sibling),delete node.parent,node=sibling;break;case" ":node.state.allowType&&""!==node.type&&(node.type=verifyType(node.type),delete node.state.allowType,node.state.allowName=!0,node.state.allowParams=!0),node.state.allowName&&""!==node.name&&("indexed"===node.name?(allowIndexed||throwError(i),node.indexed&&throwError(i),node.indexed=!0,node.name=""):checkModifier(node.type,node.name)?node.name="":node.state.allowName=!1);break;case"[":node.state.allowArray||throwError(i),node.type+=c,node.state.allowArray=!1,node.state.allowName=!1,node.state.readArray=!0;break;case"]":node.state.readArray||throwError(i),node.type+=c,node.state.readArray=!1,node.state.allowArray=!0,node.state.allowName=!0;break;default:node.state.allowType?(node.type+=c,node.state.allowParams=!0,node.state.allowArray=!0):node.state.allowName?(node.name+=c,delete node.state.allowArray):node.state.readArray?node.type+=c:throwError(i)}}return node.parent&&logger.throwArgumentError("unexpected eof","param",param),delete parent.state,"indexed"===node.name?(allowIndexed||throwError(originalParam.length-7),node.indexed&&throwError(originalParam.length-7),node.indexed=!0,node.name=""):checkModifier(node.type,node.name)&&(node.name=""),parent.type=verifyType(parent.type),parent}function populate(object,params){for(let key in params)defineReadOnly(object,key,params[key])}export const FormatTypes=Object.freeze({sighash:"sighash",minimal:"minimal",full:"full",json:"json"});const paramTypeArray=new RegExp(/^(.*)\[([0-9]*)\]$/);export class ParamType{constructor(constructorGuard,params){constructorGuard!==_constructorGuard&&logger.throwError("use fromString",Logger.errors.UNSUPPORTED_OPERATION,{operation:"new ParamType()"}),populate(this,params);let match=this.type.match(paramTypeArray);populate(this,match?{arrayLength:parseInt(match[2]||"-1"),arrayChildren:ParamType.fromObject({type:match[1],components:this.components}),baseType:"array"}:{arrayLength:null,arrayChildren:null,baseType:null!=this.components?"tuple":this.type}),this._isParamType=!0,Object.freeze(this)}format(format){if(format||(format=FormatTypes.sighash),FormatTypes[format]||logger.throwArgumentError("invalid format type","format",format),format===FormatTypes.json){let result={type:"tuple"===this.baseType?"tuple":this.type,name:this.name||void 0};return"boolean"==typeof this.indexed&&(result.indexed=this.indexed),this.components&&(result.components=this.components.map((comp=>JSON.parse(comp.format(format))))),JSON.stringify(result)}let result="";return"array"===this.baseType?(result+=this.arrayChildren.format(format),result+="["+(this.arrayLength<0?"":String(this.arrayLength))+"]"):"tuple"===this.baseType?(format!==FormatTypes.sighash&&(result+=this.type),result+="("+this.components.map((comp=>comp.format(format))).join(format===FormatTypes.full?", ":",")+")"):result+=this.type,format!==FormatTypes.sighash&&(!0===this.indexed&&(result+=" indexed"),format===FormatTypes.full&&this.name&&(result+=" "+this.name)),result}static from(value,allowIndexed){return"string"==typeof value?ParamType.fromString(value,allowIndexed):ParamType.fromObject(value)}static fromObject(value){return ParamType.isParamType(value)?value:new ParamType(_constructorGuard,{name:value.name||null,type:verifyType(value.type),indexed:null==value.indexed?null:!!value.indexed,components:value.components?value.components.map(ParamType.fromObject):null})}static fromString(value,allowIndexed){return node=parseParamType(value,!!allowIndexed),ParamType.fromObject({name:node.name,type:node.type,indexed:node.indexed,components:node.components});var node}static isParamType(value){return!(null==value||!value._isParamType)}}function parseParams(value,allowIndex){return splitNesting(value).map((param=>ParamType.fromString(param,allowIndex)))}export class Fragment{constructor(constructorGuard,params){constructorGuard!==_constructorGuard&&logger.throwError("use a static from method",Logger.errors.UNSUPPORTED_OPERATION,{operation:"new Fragment()"}),populate(this,params),this._isFragment=!0,Object.freeze(this)}static from(value){return Fragment.isFragment(value)?value:"string"==typeof value?Fragment.fromString(value):Fragment.fromObject(value)}static fromObject(value){if(Fragment.isFragment(value))return value;switch(value.type){case"function":return FunctionFragment.fromObject(value);case"event":return EventFragment.fromObject(value);case"constructor":return ConstructorFragment.fromObject(value);case"error":return ErrorFragment.fromObject(value);case"fallback":case"receive":return null}return logger.throwArgumentError("invalid fragment object","value",value)}static fromString(value){return"event"===(value=(value=(value=value.replace(/\s/g," ")).replace(/\(/g," (").replace(/\)/g,") ").replace(/\s+/g," ")).trim()).split(" ")[0]?EventFragment.fromString(value.substring(5).trim()):"function"===value.split(" ")[0]?FunctionFragment.fromString(value.substring(8).trim()):"constructor"===value.split("(")[0].trim()?ConstructorFragment.fromString(value.trim()):"error"===value.split(" ")[0]?ErrorFragment.fromString(value.substring(5).trim()):logger.throwArgumentError("unsupported fragment","value",value)}static isFragment(value){return!(!value||!value._isFragment)}}export class EventFragment extends Fragment{format(format){if(format||(format=FormatTypes.sighash),FormatTypes[format]||logger.throwArgumentError("invalid format type","format",format),format===FormatTypes.json)return JSON.stringify({type:"event",anonymous:this.anonymous,name:this.name,inputs:this.inputs.map((input=>JSON.parse(input.format(format))))});let result="";return format!==FormatTypes.sighash&&(result+="event "),result+=this.name+"("+this.inputs.map((input=>input.format(format))).join(format===FormatTypes.full?", ":",")+") ",format!==FormatTypes.sighash&&this.anonymous&&(result+="anonymous "),result.trim()}static from(value){return"string"==typeof value?EventFragment.fromString(value):EventFragment.fromObject(value)}static fromObject(value){if(EventFragment.isEventFragment(value))return value;"event"!==value.type&&logger.throwArgumentError("invalid event object","value",value);const params={name:verifyIdentifier(value.name),anonymous:value.anonymous,inputs:value.inputs?value.inputs.map(ParamType.fromObject):[],type:"event"};return new EventFragment(_constructorGuard,params)}static fromString(value){let match=value.match(regexParen);match||logger.throwArgumentError("invalid event string","value",value);let anonymous=!1;return match[3].split(" ").forEach((modifier=>{switch(modifier.trim()){case"anonymous":anonymous=!0;break;case"":break;default:logger.warn("unknown modifier: "+modifier)}})),EventFragment.fromObject({name:match[1].trim(),anonymous:anonymous,inputs:parseParams(match[2],!0),type:"event"})}static isEventFragment(value){return value&&value._isFragment&&"event"===value.type}}function parseGas(value,params){params.gas=null;let comps=value.split("@");return 1!==comps.length?(comps.length>2&&logger.throwArgumentError("invalid human-readable ABI signature","value",value),comps[1].match(/^[0-9]+$/)||logger.throwArgumentError("invalid human-readable ABI signature gas","value",value),params.gas=BigNumber.from(comps[1]),comps[0]):value}function parseModifiers(value,params){params.constant=!1,params.payable=!1,params.stateMutability="nonpayable",value.split(" ").forEach((modifier=>{switch(modifier.trim()){case"constant":params.constant=!0;break;case"payable":params.payable=!0,params.stateMutability="payable";break;case"nonpayable":params.payable=!1,params.stateMutability="nonpayable";break;case"pure":params.constant=!0,params.stateMutability="pure";break;case"view":params.constant=!0,params.stateMutability="view";break;case"external":case"public":case"":break;default:console.log("unknown modifier: "+modifier)}}))}function verifyState(value){let result={constant:!1,payable:!0,stateMutability:"payable"};return null!=value.stateMutability?(result.stateMutability=value.stateMutability,result.constant="view"===result.stateMutability||"pure"===result.stateMutability,null!=value.constant&&!!value.constant!==result.constant&&logger.throwArgumentError("cannot have constant function with mutability "+result.stateMutability,"value",value),result.payable="payable"===result.stateMutability,null!=value.payable&&!!value.payable!==result.payable&&logger.throwArgumentError("cannot have payable function with mutability "+result.stateMutability,"value",value)):null!=value.payable?(result.payable=!!value.payable,null!=value.constant||result.payable||"constructor"===value.type||logger.throwArgumentError("unable to determine stateMutability","value",value),result.constant=!!value.constant,result.constant?result.stateMutability="view":result.stateMutability=result.payable?"payable":"nonpayable",result.payable&&result.constant&&logger.throwArgumentError("cannot have constant payable function","value",value)):null!=value.constant?(result.constant=!!value.constant,result.payable=!result.constant,result.stateMutability=result.constant?"view":"payable"):"constructor"!==value.type&&logger.throwArgumentError("unable to determine stateMutability","value",value),result}export class ConstructorFragment extends Fragment{format(format){if(format||(format=FormatTypes.sighash),FormatTypes[format]||logger.throwArgumentError("invalid format type","format",format),format===FormatTypes.json)return JSON.stringify({type:"constructor",stateMutability:"nonpayable"!==this.stateMutability?this.stateMutability:void 0,payable:this.payable,gas:this.gas?this.gas.toNumber():void 0,inputs:this.inputs.map((input=>JSON.parse(input.format(format))))});format===FormatTypes.sighash&&logger.throwError("cannot format a constructor for sighash",Logger.errors.UNSUPPORTED_OPERATION,{operation:"format(sighash)"});let result="constructor("+this.inputs.map((input=>input.format(format))).join(format===FormatTypes.full?", ":",")+") ";return this.stateMutability&&"nonpayable"!==this.stateMutability&&(result+=this.stateMutability+" "),result.trim()}static from(value){return"string"==typeof value?ConstructorFragment.fromString(value):ConstructorFragment.fromObject(value)}static fromObject(value){if(ConstructorFragment.isConstructorFragment(value))return value;"constructor"!==value.type&&logger.throwArgumentError("invalid constructor object","value",value);let state=verifyState(value);state.constant&&logger.throwArgumentError("constructor cannot be constant","value",value);const params={name:null,type:value.type,inputs:value.inputs?value.inputs.map(ParamType.fromObject):[],payable:state.payable,stateMutability:state.stateMutability,gas:value.gas?BigNumber.from(value.gas):null};return new ConstructorFragment(_constructorGuard,params)}static fromString(value){let params={type:"constructor"},parens=(value=parseGas(value,params)).match(regexParen);return parens&&"constructor"===parens[1].trim()||logger.throwArgumentError("invalid constructor string","value",value),params.inputs=parseParams(parens[2].trim(),!1),parseModifiers(parens[3].trim(),params),ConstructorFragment.fromObject(params)}static isConstructorFragment(value){return value&&value._isFragment&&"constructor"===value.type}}export class FunctionFragment extends ConstructorFragment{format(format){if(format||(format=FormatTypes.sighash),FormatTypes[format]||logger.throwArgumentError("invalid format type","format",format),format===FormatTypes.json)return JSON.stringify({type:"function",name:this.name,constant:this.constant,stateMutability:"nonpayable"!==this.stateMutability?this.stateMutability:void 0,payable:this.payable,gas:this.gas?this.gas.toNumber():void 0,inputs:this.inputs.map((input=>JSON.parse(input.format(format)))),outputs:this.outputs.map((output=>JSON.parse(output.format(format))))});let result="";return format!==FormatTypes.sighash&&(result+="function "),result+=this.name+"("+this.inputs.map((input=>input.format(format))).join(format===FormatTypes.full?", ":",")+") ",format!==FormatTypes.sighash&&(this.stateMutability?"nonpayable"!==this.stateMutability&&(result+=this.stateMutability+" "):this.constant&&(result+="view "),this.outputs&&this.outputs.length&&(result+="returns ("+this.outputs.map((output=>output.format(format))).join(", ")+") "),null!=this.gas&&(result+="@"+this.gas.toString()+" ")),result.trim()}static from(value){return"string"==typeof value?FunctionFragment.fromString(value):FunctionFragment.fromObject(value)}static fromObject(value){if(FunctionFragment.isFunctionFragment(value))return value;"function"!==value.type&&logger.throwArgumentError("invalid function object","value",value);let state=verifyState(value);const params={type:value.type,name:verifyIdentifier(value.name),constant:state.constant,inputs:value.inputs?value.inputs.map(ParamType.fromObject):[],outputs:value.outputs?value.outputs.map(ParamType.fromObject):[],payable:state.payable,stateMutability:state.stateMutability,gas:value.gas?BigNumber.from(value.gas):null};return new FunctionFragment(_constructorGuard,params)}static fromString(value){let params={type:"function"},comps=(value=parseGas(value,params)).split(" returns ");comps.length>2&&logger.throwArgumentError("invalid function string","value",value);let parens=comps[0].match(regexParen);if(parens||logger.throwArgumentError("invalid function signature","value",value),params.name=parens[1].trim(),params.name&&verifyIdentifier(params.name),params.inputs=parseParams(parens[2],!1),parseModifiers(parens[3].trim(),params),comps.length>1){let returns=comps[1].match(regexParen);""==returns[1].trim()&&""==returns[3].trim()||logger.throwArgumentError("unexpected tokens","value",value),params.outputs=parseParams(returns[2],!1)}else params.outputs=[];return FunctionFragment.fromObject(params)}static isFunctionFragment(value){return value&&value._isFragment&&"function"===value.type}}function checkForbidden(fragment){const sig=fragment.format();return"Error(string)"!==sig&&"Panic(uint256)"!==sig||logger.throwArgumentError(`cannot specify user defined ${sig} error`,"fragment",fragment),fragment}export class ErrorFragment extends Fragment{format(format){if(format||(format=FormatTypes.sighash),FormatTypes[format]||logger.throwArgumentError("invalid format type","format",format),format===FormatTypes.json)return JSON.stringify({type:"error",name:this.name,inputs:this.inputs.map((input=>JSON.parse(input.format(format))))});let result="";return format!==FormatTypes.sighash&&(result+="error "),result+=this.name+"("+this.inputs.map((input=>input.format(format))).join(format===FormatTypes.full?", ":",")+") ",result.trim()}static from(value){return"string"==typeof value?ErrorFragment.fromString(value):ErrorFragment.fromObject(value)}static fromObject(value){if(ErrorFragment.isErrorFragment(value))return value;"error"!==value.type&&logger.throwArgumentError("invalid error object","value",value);const params={type:value.type,name:verifyIdentifier(value.name),inputs:value.inputs?value.inputs.map(ParamType.fromObject):[]};return checkForbidden(new ErrorFragment(_constructorGuard,params))}static fromString(value){let params={type:"error"},parens=value.match(regexParen);return parens||logger.throwArgumentError("invalid error signature","value",value),params.name=parens[1].trim(),params.name&&verifyIdentifier(params.name),params.inputs=parseParams(parens[2],!1),checkForbidden(ErrorFragment.fromObject(params))}static isErrorFragment(value){return value&&value._isFragment&&"error"===value.type}}function verifyType(type){return type.match(/^uint($|[^1-9])/)?type="uint256"+type.substring(4):type.match(/^int($|[^1-9])/)&&(type="int256"+type.substring(3)),type}const regexIdentifier=new RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");function verifyIdentifier(value){return value&&value.match(regexIdentifier)||logger.throwArgumentError(`invalid identifier "${value}"`,"value",value),value}const regexParen=new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$");function splitNesting(value){value=value.trim();let result=[],accum="",depth=0;for(let offset=0;offset<value.length;offset++){let c=value[offset];","===c&&0===depth?(result.push(accum),accum=""):(accum+=c,"("===c?depth++:")"===c&&(depth--,-1===depth&&logger.throwArgumentError("unbalanced parenthesis","value",value)))}return accum&&result.push(accum),result}
"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P((function(resolve){resolve(value)}))).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};import{ForkEvent,Provider}from"@ethersproject/abstract-provider";import{encode as base64Encode}from"@ethersproject/base64";import{Base58}from"@ethersproject/basex";import{BigNumber}from"@ethersproject/bignumber";import{arrayify,concat,hexConcat,hexDataLength,hexDataSlice,hexlify,hexValue,hexZeroPad,isHexString}from"@ethersproject/bytes";import{HashZero}from"@ethersproject/constants";import{dnsEncode,namehash}from"@ethersproject/hash";import{getNetwork}from"@ethersproject/networks";import{defineReadOnly,getStatic,resolveProperties}from"@ethersproject/properties";import{sha256}from"@ethersproject/sha2";import{toUtf8Bytes,toUtf8String}from"@ethersproject/strings";import{fetchJson,poll}from"@ethersproject/web";import bech32 from"bech32";import{Logger}from"@ethersproject/logger";import{version}from"./_version";const logger=new Logger(version);import{Formatter}from"./formatter";const MAX_CCIP_REDIRECTS=10;function checkTopic(topic){return null==topic?"null":(32!==hexDataLength(topic)&&logger.throwArgumentError("invalid topic","topic",topic),topic.toLowerCase())}function serializeTopics(topics){for(topics=topics.slice();topics.length>0&&null==topics[topics.length-1];)topics.pop();return topics.map((topic=>{if(Array.isArray(topic)){const unique={};topic.forEach((topic=>{unique[checkTopic(topic)]=!0}));const sorted=Object.keys(unique);return sorted.sort(),sorted.join("|")}return checkTopic(topic)})).join("&")}function deserializeTopics(data){return""===data?[]:data.split(/&/g).map((topic=>{if(""===topic)return[];const comps=topic.split("|").map((topic=>"null"===topic?null:topic));return 1===comps.length?comps[0]:comps}))}function getEventTag(eventName){if("string"==typeof eventName){if(eventName=eventName.toLowerCase(),32===hexDataLength(eventName))return"tx:"+eventName;if(-1===eventName.indexOf(":"))return eventName}else{if(Array.isArray(eventName))return"filter:*:"+serializeTopics(eventName);if(ForkEvent.isForkEvent(eventName))throw logger.warn("not implemented"),new Error("not implemented");if(eventName&&"object"==typeof eventName)return"filter:"+(eventName.address||"*")+":"+serializeTopics(eventName.topics||[])}throw new Error("invalid event - "+eventName)}function getTime(){return(new Date).getTime()}function stall(duration){return new Promise((resolve=>{setTimeout(resolve,duration)}))}const PollableEvents=["block","network","pending","poll"];export class Event{constructor(tag,listener,once){defineReadOnly(this,"tag",tag),defineReadOnly(this,"listener",listener),defineReadOnly(this,"once",once),this._lastBlockNumber=-2,this._inflight=!1}get event(){switch(this.type){case"tx":return this.hash;case"filter":return this.filter}return this.tag}get type(){return this.tag.split(":")[0]}get hash(){const comps=this.tag.split(":");return"tx"!==comps[0]?null:comps[1]}get filter(){const comps=this.tag.split(":");if("filter"!==comps[0])return null;const address=comps[1],topics=deserializeTopics(comps[2]),filter={};return topics.length>0&&(filter.topics=topics),address&&"*"!==address&&(filter.address=address),filter}pollable(){return this.tag.indexOf(":")>=0||PollableEvents.indexOf(this.tag)>=0}}const coinInfos={0:{symbol:"btc",p2pkh:0,p2sh:5,prefix:"bc"},2:{symbol:"ltc",p2pkh:48,p2sh:50,prefix:"ltc"},3:{symbol:"doge",p2pkh:30,p2sh:22},60:{symbol:"eth",ilk:"eth"},61:{symbol:"etc",ilk:"eth"},700:{symbol:"xdai",ilk:"eth"}};function bytes32ify(value){return hexZeroPad(BigNumber.from(value).toHexString(),32)}function base58Encode(data){return Base58.encode(concat([data,hexDataSlice(sha256(sha256(data)),0,4)]))}const matcherIpfs=new RegExp("^(ipfs)://(.*)$","i"),matchers=[new RegExp("^(https)://(.*)$","i"),new RegExp("^(data):(.*)$","i"),matcherIpfs,new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$","i")];function _parseString(result,start){try{return toUtf8String(_parseBytes(result,start))}catch(error){}return null}function _parseBytes(result,start){if("0x"===result)return null;const offset=BigNumber.from(hexDataSlice(result,start,start+32)).toNumber(),length=BigNumber.from(hexDataSlice(result,offset,offset+32)).toNumber();return hexDataSlice(result,offset+32,offset+32+length)}function getIpfsLink(link){return link.match(/^ipfs:\/\/ipfs\//i)?link=link.substring(12):link.match(/^ipfs:\/\//i)?link=link.substring(7):logger.throwArgumentError("unsupported IPFS format","link",link),`https://gateway.ipfs.io/ipfs/${link}`}function numPad(value){const result=arrayify(value);if(result.length>32)throw new Error("internal; should not happen");const padded=new Uint8Array(32);return padded.set(result,32-result.length),padded}function bytesPad(value){if(value.length%32==0)return value;const result=new Uint8Array(32*Math.ceil(value.length/32));return result.set(value),result}function encodeBytes(datas){const result=[];let byteCount=0;for(let i=0;i<datas.length;i++)result.push(null),byteCount+=32;for(let i=0;i<datas.length;i++){const data=arrayify(datas[i]);result[i]=numPad(byteCount),result.push(numPad(data.length)),result.push(bytesPad(data)),byteCount+=32+32*Math.ceil(data.length/32)}return hexConcat(result)}export class Resolver{constructor(provider,address,name,resolvedAddress){defineReadOnly(this,"provider",provider),defineReadOnly(this,"name",name),defineReadOnly(this,"address",provider.formatter.address(address)),defineReadOnly(this,"_resolvedAddress",resolvedAddress)}supportsWildcard(){return this._supportsEip2544||(this._supportsEip2544=this.provider.call({to:this.address,data:"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000"}).then((result=>BigNumber.from(result).eq(1))).catch((error=>{if(error.code===Logger.errors.CALL_EXCEPTION)return!1;throw this._supportsEip2544=null,error}))),this._supportsEip2544}_fetch(selector,parameters){return __awaiter(this,void 0,void 0,(function*(){const tx={to:this.address,ccipReadEnabled:!0,data:hexConcat([selector,namehash(this.name),parameters||"0x"])};let parseBytes=!1;(yield this.supportsWildcard())&&(parseBytes=!0,tx.data=hexConcat(["0x9061b923",encodeBytes([dnsEncode(this.name),tx.data])]));try{let result=yield this.provider.call(tx);return arrayify(result).length%32==4&&logger.throwError("resolver threw error",Logger.errors.CALL_EXCEPTION,{transaction:tx,data:result}),parseBytes&&(result=_parseBytes(result,0)),result}catch(error){if(error.code===Logger.errors.CALL_EXCEPTION)return null;throw error}}))}_fetchBytes(selector,parameters){return __awaiter(this,void 0,void 0,(function*(){const result=yield this._fetch(selector,parameters);return null!=result?_parseBytes(result,0):null}))}_getAddress(coinType,hexBytes){const coinInfo=coinInfos[String(coinType)];if(null==coinInfo&&logger.throwError(`unsupported coin type: ${coinType}`,Logger.errors.UNSUPPORTED_OPERATION,{operation:`getAddress(${coinType})`}),"eth"===coinInfo.ilk)return this.provider.formatter.address(hexBytes);const bytes=arrayify(hexBytes);if(null!=coinInfo.p2pkh){const p2pkh=hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);if(p2pkh){const length=parseInt(p2pkh[1],16);if(p2pkh[2].length===2*length&&length>=1&&length<=75)return base58Encode(concat([[coinInfo.p2pkh],"0x"+p2pkh[2]]))}}if(null!=coinInfo.p2sh){const p2sh=hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);if(p2sh){const length=parseInt(p2sh[1],16);if(p2sh[2].length===2*length&&length>=1&&length<=75)return base58Encode(concat([[coinInfo.p2sh],"0x"+p2sh[2]]))}}if(null!=coinInfo.prefix){const length=bytes[1];let version=bytes[0];if(0===version?20!==length&&32!==length&&(version=-1):version=-1,version>=0&&bytes.length===2+length&&length>=1&&length<=75){const words=bech32.toWords(bytes.slice(2));return words.unshift(version),bech32.encode(coinInfo.prefix,words)}}return null}getAddress(coinType){return __awaiter(this,void 0,void 0,(function*(){if(null==coinType&&(coinType=60),60===coinType)try{const result=yield this._fetch("0x3b3b57de");return"0x"===result||result===HashZero?null:this.provider.formatter.callAddress(result)}catch(error){if(error.code===Logger.errors.CALL_EXCEPTION)return null;throw error}const hexBytes=yield this._fetchBytes("0xf1cb7e06",bytes32ify(coinType));if(null==hexBytes||"0x"===hexBytes)return null;const address=this._getAddress(coinType,hexBytes);return null==address&&logger.throwError("invalid or unsupported coin data",Logger.errors.UNSUPPORTED_OPERATION,{operation:`getAddress(${coinType})`,coinType:coinType,data:hexBytes}),address}))}getAvatar(){return __awaiter(this,void 0,void 0,(function*(){const linkage=[{type:"name",content:this.name}];try{const avatar=yield this.getText("avatar");if(null==avatar)return null;for(let i=0;i<matchers.length;i++){const match=avatar.match(matchers[i]);if(null==match)continue;const scheme=match[1].toLowerCase();switch(scheme){case"https":return linkage.push({type:"url",content:avatar}),{linkage:linkage,url:avatar};case"data":return linkage.push({type:"data",content:avatar}),{linkage:linkage,url:avatar};case"ipfs":return linkage.push({type:"ipfs",content:avatar}),{linkage:linkage,url:getIpfsLink(avatar)};case"erc721":case"erc1155":{const selector="erc721"===scheme?"0xc87b56dd":"0x0e89341c";linkage.push({type:scheme,content:avatar});const owner=this._resolvedAddress||(yield this.getAddress()),comps=(match[2]||"").split("/");if(2!==comps.length)return null;const addr=yield this.provider.formatter.address(comps[0]),tokenId=hexZeroPad(BigNumber.from(comps[1]).toHexString(),32);if("erc721"===scheme){const tokenOwner=this.provider.formatter.callAddress(yield this.provider.call({to:addr,data:hexConcat(["0x6352211e",tokenId])}));if(owner!==tokenOwner)return null;linkage.push({type:"owner",content:tokenOwner})}else if("erc1155"===scheme){const balance=BigNumber.from(yield this.provider.call({to:addr,data:hexConcat(["0x00fdd58e",hexZeroPad(owner,32),tokenId])}));if(balance.isZero())return null;linkage.push({type:"balance",content:balance.toString()})}const tx={to:this.provider.formatter.address(comps[0]),data:hexConcat([selector,tokenId])};let metadataUrl=_parseString(yield this.provider.call(tx),0);if(null==metadataUrl)return null;linkage.push({type:"metadata-url-base",content:metadataUrl}),"erc1155"===scheme&&(metadataUrl=metadataUrl.replace("{id}",tokenId.substring(2)),linkage.push({type:"metadata-url-expanded",content:metadataUrl})),metadataUrl.match(/^ipfs:/i)&&(metadataUrl=getIpfsLink(metadataUrl)),linkage.push({type:"metadata-url",content:metadataUrl});const metadata=yield fetchJson(metadataUrl);if(!metadata)return null;linkage.push({type:"metadata",content:JSON.stringify(metadata)});let imageUrl=metadata.image;if("string"!=typeof imageUrl)return null;if(imageUrl.match(/^(https:\/\/|data:)/i));else{if(null==imageUrl.match(matcherIpfs))return null;linkage.push({type:"url-ipfs",content:imageUrl}),imageUrl=getIpfsLink(imageUrl)}return linkage.push({type:"url",content:imageUrl}),{linkage:linkage,url:imageUrl}}}}}catch(error){}return null}))}getContentHash(){return __awaiter(this,void 0,void 0,(function*(){const hexBytes=yield this._fetchBytes("0xbc1c58d1");if(null==hexBytes||"0x"===hexBytes)return null;const ipfs=hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);if(ipfs){const length=parseInt(ipfs[3],16);if(ipfs[4].length===2*length)return"ipfs://"+Base58.encode("0x"+ipfs[1])}const ipns=hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);if(ipns){const length=parseInt(ipns[3],16);if(ipns[4].length===2*length)return"ipns://"+Base58.encode("0x"+ipns[1])}const swarm=hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);if(swarm&&64===swarm[1].length)return"bzz://"+swarm[1];const skynet=hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);if(skynet&&68===skynet[1].length){const urlSafe={"=":"","+":"-","/":"_"};return"sia://"+base64Encode("0x"+skynet[1]).replace(/[=+\/]/g,(a=>urlSafe[a]))}return logger.throwError("invalid or unsupported content hash data",Logger.errors.UNSUPPORTED_OPERATION,{operation:"getContentHash()",data:hexBytes})}))}getText(key){return __awaiter(this,void 0,void 0,(function*(){let keyBytes=toUtf8Bytes(key);keyBytes=concat([bytes32ify(64),bytes32ify(keyBytes.length),keyBytes]),keyBytes.length%32!=0&&(keyBytes=concat([keyBytes,hexZeroPad("0x",32-key.length%32)]));const hexBytes=yield this._fetchBytes("0x59d1d43c",hexlify(keyBytes));return null==hexBytes||"0x"===hexBytes?null:toUtf8String(hexBytes)}))}}let defaultFormatter=null,nextPollId=1;export class BaseProvider extends Provider{constructor(network){if(super(),this._events=[],this._emitted={block:-2},this.disableCcipRead=!1,this.formatter=new.target.getFormatter(),defineReadOnly(this,"anyNetwork","any"===network),this.anyNetwork&&(network=this.detectNetwork()),network instanceof Promise)this._networkPromise=network,network.catch((error=>{})),this._ready().catch((error=>{}));else{const knownNetwork=getStatic(new.target,"getNetwork")(network);knownNetwork?(defineReadOnly(this,"_network",knownNetwork),this.emit("network",knownNetwork,null)):logger.throwArgumentError("invalid network","network",network)}this._maxInternalBlockNumber=-1024,this._lastBlockNumber=-2,this._maxFilterBlockRange=10,this._pollingInterval=4e3,this._fastQueryDate=0}_ready(){return __awaiter(this,void 0,void 0,(function*(){if(null==this._network){let network=null;if(this._networkPromise)try{network=yield this._networkPromise}catch(error){}null==network&&(network=yield this.detectNetwork()),network||logger.throwError("no network detected",Logger.errors.UNKNOWN_ERROR,{}),null==this._network&&(this.anyNetwork?this._network=network:defineReadOnly(this,"_network",network),this.emit("network",network,null))}return this._network}))}get ready(){return poll((()=>this._ready().then((network=>network),(error=>{if(error.code!==Logger.errors.NETWORK_ERROR||"noNetwork"!==error.event)throw error}))))}static getFormatter(){return null==defaultFormatter&&(defaultFormatter=new Formatter),defaultFormatter}static getNetwork(network){return getNetwork(null==network?"homestead":network)}ccipReadFetch(tx,calldata,urls){return __awaiter(this,void 0,void 0,(function*(){if(this.disableCcipRead||0===urls.length)return null;const sender=tx.to.toLowerCase(),data=calldata.toLowerCase(),errorMessages=[];for(let i=0;i<urls.length;i++){const url=urls[i],href=url.replace("{sender}",sender).replace("{data}",data),json=url.indexOf("{data}")>=0?null:JSON.stringify({data:data,sender:sender}),result=yield fetchJson({url:href,errorPassThrough:!0},json,((value,response)=>(value.status=response.statusCode,value)));if(result.data)return result.data;const errorMessage=result.message||"unknown error";if(result.status>=400&&result.status<500)return logger.throwError(`response not found during CCIP fetch: ${errorMessage}`,Logger.errors.SERVER_ERROR,{url:url,errorMessage:errorMessage});errorMessages.push(errorMessage)}return logger.throwError(`error encountered during CCIP fetch: ${errorMessages.map((m=>JSON.stringify(m))).join(", ")}`,Logger.errors.SERVER_ERROR,{urls:urls,errorMessages:errorMessages})}))}_getInternalBlockNumber(maxAge){return __awaiter(this,void 0,void 0,(function*(){if(yield this._ready(),maxAge>0)for(;this._internalBlockNumber;){const internalBlockNumber=this._internalBlockNumber;try{const result=yield internalBlockNumber;if(getTime()-result.respTime<=maxAge)return result.blockNumber;break}catch(error){if(this._internalBlockNumber===internalBlockNumber)break}}const reqTime=getTime(),checkInternalBlockNumber=resolveProperties({blockNumber:this.perform("getBlockNumber",{}),networkError:this.getNetwork().then((network=>null),(error=>error))}).then((({blockNumber:blockNumber,networkError:networkError})=>{if(networkError)throw this._internalBlockNumber===checkInternalBlockNumber&&(this._internalBlockNumber=null),networkError;const respTime=getTime();return(blockNumber=BigNumber.from(blockNumber).toNumber())<this._maxInternalBlockNumber&&(blockNumber=this._maxInternalBlockNumber),this._maxInternalBlockNumber=blockNumber,this._setFastBlockNumber(blockNumber),{blockNumber:blockNumber,reqTime:reqTime,respTime:respTime}}));return this._internalBlockNumber=checkInternalBlockNumber,checkInternalBlockNumber.catch((error=>{this._internalBlockNumber===checkInternalBlockNumber&&(this._internalBlockNumber=null)})),(yield checkInternalBlockNumber).blockNumber}))}poll(){return __awaiter(this,void 0,void 0,(function*(){const pollId=nextPollId++,runners=[];let blockNumber=null;try{blockNumber=yield this._getInternalBlockNumber(100+this.pollingInterval/2)}catch(error){return void this.emit("error",error)}if(this._setFastBlockNumber(blockNumber),this.emit("poll",pollId,blockNumber),blockNumber!==this._lastBlockNumber){if(-2===this._emitted.block&&(this._emitted.block=blockNumber-1),Math.abs(this._emitted.block-blockNumber)>1e3)logger.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`),this.emit("error",logger.makeError("network block skew detected",Logger.errors.NETWORK_ERROR,{blockNumber:blockNumber,event:"blockSkew",previousBlockNumber:this._emitted.block})),this.emit("block",blockNumber);else for(let i=this._emitted.block+1;i<=blockNumber;i++)this.emit("block",i);this._emitted.block!==blockNumber&&(this._emitted.block=blockNumber,Object.keys(this._emitted).forEach((key=>{if("block"===key)return;const eventBlockNumber=this._emitted[key];"pending"!==eventBlockNumber&&blockNumber-eventBlockNumber>12&&delete this._emitted[key]}))),-2===this._lastBlockNumber&&(this._lastBlockNumber=blockNumber-1),this._events.forEach((event=>{switch(event.type){case"tx":{const hash=event.hash;let runner=this.getTransactionReceipt(hash).then((receipt=>receipt&&null!=receipt.blockNumber?(this._emitted["t:"+hash]=receipt.blockNumber,this.emit(hash,receipt),null):null)).catch((error=>{this.emit("error",error)}));runners.push(runner);break}case"filter":if(!event._inflight){event._inflight=!0,-2===event._lastBlockNumber&&(event._lastBlockNumber=blockNumber-1);const filter=event.filter;filter.fromBlock=event._lastBlockNumber+1,filter.toBlock=blockNumber;const minFromBlock=filter.toBlock-this._maxFilterBlockRange;minFromBlock>filter.fromBlock&&(filter.fromBlock=minFromBlock),filter.fromBlock<0&&(filter.fromBlock=0);const runner=this.getLogs(filter).then((logs=>{event._inflight=!1,0!==logs.length&&logs.forEach((log=>{log.blockNumber>event._lastBlockNumber&&(event._lastBlockNumber=log.blockNumber),this._emitted["b:"+log.blockHash]=log.blockNumber,this._emitted["t:"+log.transactionHash]=log.blockNumber,this.emit(filter,log)}))})).catch((error=>{this.emit("error",error),event._inflight=!1}));runners.push(runner)}}})),this._lastBlockNumber=blockNumber,Promise.all(runners).then((()=>{this.emit("didPoll",pollId)})).catch((error=>{this.emit("error",error)}))}else this.emit("didPoll",pollId)}))}resetEventsBlock(blockNumber){this._lastBlockNumber=blockNumber-1,this.polling&&this.poll()}get network(){return this._network}detectNetwork(){return __awaiter(this,void 0,void 0,(function*(){return logger.throwError("provider does not support network detection",Logger.errors.UNSUPPORTED_OPERATION,{operation:"provider.detectNetwork"})}))}getNetwork(){return __awaiter(this,void 0,void 0,(function*(){const network=yield this._ready(),currentNetwork=yield this.detectNetwork();if(network.chainId!==currentNetwork.chainId){if(this.anyNetwork)return this._network=currentNetwork,this._lastBlockNumber=-2,this._fastBlockNumber=null,this._fastBlockNumberPromise=null,this._fastQueryDate=0,this._emitted.block=-2,this._maxInternalBlockNumber=-1024,this._internalBlockNumber=null,this.emit("network",currentNetwork,network),yield stall(0),this._network;const error=logger.makeError("underlying network changed",Logger.errors.NETWORK_ERROR,{event:"changed",network:network,detectedNetwork:currentNetwork});throw this.emit("error",error),error}return network}))}get blockNumber(){return this._getInternalBlockNumber(100+this.pollingInterval/2).then((blockNumber=>{this._setFastBlockNumber(blockNumber)}),(error=>{})),null!=this._fastBlockNumber?this._fastBlockNumber:-1}get polling(){return null!=this._poller}set polling(value){value&&!this._poller?(this._poller=setInterval((()=>{this.poll()}),this.pollingInterval),this._bootstrapPoll||(this._bootstrapPoll=setTimeout((()=>{this.poll(),this._bootstrapPoll=setTimeout((()=>{this._poller||this.poll(),this._bootstrapPoll=null}),this.pollingInterval)}),0))):!value&&this._poller&&(clearInterval(this._poller),this._poller=null)}get pollingInterval(){return this._pollingInterval}set pollingInterval(value){if("number"!=typeof value||value<=0||parseInt(String(value))!=value)throw new Error("invalid polling interval");this._pollingInterval=value,this._poller&&(clearInterval(this._poller),this._poller=setInterval((()=>{this.poll()}),this._pollingInterval))}_getFastBlockNumber(){const now=getTime();return now-this._fastQueryDate>2*this._pollingInterval&&(this._fastQueryDate=now,this._fastBlockNumberPromise=this.getBlockNumber().then((blockNumber=>((null==this._fastBlockNumber||blockNumber>this._fastBlockNumber)&&(this._fastBlockNumber=blockNumber),this._fastBlockNumber)))),this._fastBlockNumberPromise}_setFastBlockNumber(blockNumber){null!=this._fastBlockNumber&&blockNumber<this._fastBlockNumber||(this._fastQueryDate=getTime(),(null==this._fastBlockNumber||blockNumber>this._fastBlockNumber)&&(this._fastBlockNumber=blockNumber,this._fastBlockNumberPromise=Promise.resolve(blockNumber)))}waitForTransaction(transactionHash,confirmations,timeout){return __awaiter(this,void 0,void 0,(function*(){return this._waitForTransaction(transactionHash,null==confirmations?1:confirmations,timeout||0,null)}))}_waitForTransaction(transactionHash,confirmations,timeout,replaceable){return __awaiter(this,void 0,void 0,(function*(){const receipt=yield this.getTransactionReceipt(transactionHash);return(receipt?receipt.confirmations:0)>=confirmations?receipt:new Promise(((resolve,reject)=>{const cancelFuncs=[];let done=!1;const alreadyDone=function(){return!!done||(done=!0,cancelFuncs.forEach((func=>{func()})),!1)},minedHandler=receipt=>{receipt.confirmations<confirmations||alreadyDone()||resolve(receipt)};if(this.on(transactionHash,minedHandler),cancelFuncs.push((()=>{this.removeListener(transactionHash,minedHandler)})),replaceable){let lastBlockNumber=replaceable.startBlock,scannedBlock=null;const replaceHandler=blockNumber=>__awaiter(this,void 0,void 0,(function*(){done||(yield stall(1e3),this.getTransactionCount(replaceable.from).then((nonce=>__awaiter(this,void 0,void 0,(function*(){if(!done){if(nonce<=replaceable.nonce)lastBlockNumber=blockNumber;else{{const mined=yield this.getTransaction(transactionHash);if(mined&&null!=mined.blockNumber)return}for(null==scannedBlock&&(scannedBlock=lastBlockNumber-3,scannedBlock<replaceable.startBlock&&(scannedBlock=replaceable.startBlock));scannedBlock<=blockNumber;){if(done)return;const block=yield this.getBlockWithTransactions(scannedBlock);for(let ti=0;ti<block.transactions.length;ti++){const tx=block.transactions[ti];if(tx.hash===transactionHash)return;if(tx.from===replaceable.from&&tx.nonce===replaceable.nonce){if(done)return;const receipt=yield this.waitForTransaction(tx.hash,confirmations);if(alreadyDone())return;let reason="replaced";return tx.data===replaceable.data&&tx.to===replaceable.to&&tx.value.eq(replaceable.value)?reason="repriced":"0x"===tx.data&&tx.from===tx.to&&tx.value.isZero()&&(reason="cancelled"),void reject(logger.makeError("transaction was replaced",Logger.errors.TRANSACTION_REPLACED,{cancelled:"replaced"===reason||"cancelled"===reason,reason:reason,replacement:this._wrapTransaction(tx),hash:transactionHash,receipt:receipt}))}}scannedBlock++}}done||this.once("block",replaceHandler)}}))),(error=>{done||this.once("block",replaceHandler)})))}));if(done)return;this.once("block",replaceHandler),cancelFuncs.push((()=>{this.removeListener("block",replaceHandler)}))}if("number"==typeof timeout&&timeout>0){const timer=setTimeout((()=>{alreadyDone()||reject(logger.makeError("timeout exceeded",Logger.errors.TIMEOUT,{timeout:timeout}))}),timeout);timer.unref&&timer.unref(),cancelFuncs.push((()=>{clearTimeout(timer)}))}}))}))}getBlockNumber(){return __awaiter(this,void 0,void 0,(function*(){return this._getInternalBlockNumber(0)}))}getGasPrice(){return __awaiter(this,void 0,void 0,(function*(){yield this.getNetwork();const result=yield this.perform("getGasPrice",{});try{return BigNumber.from(result)}catch(error){return logger.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"getGasPrice",result:result,error:error})}}))}getBalance(addressOrName,blockTag){return __awaiter(this,void 0,void 0,(function*(){yield this.getNetwork();const params=yield resolveProperties({address:this._getAddress(addressOrName),blockTag:this._getBlockTag(blockTag)}),result=yield this.perform("getBalance",params);try{return BigNumber.from(result)}catch(error){return logger.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"getBalance",params:params,result:result,error:error})}}))}getTransactionCount(addressOrName,blockTag){return __awaiter(this,void 0,void 0,(function*(){yield this.getNetwork();const params=yield resolveProperties({address:this._getAddress(addressOrName),blockTag:this._getBlockTag(blockTag)}),result=yield this.perform("getTransactionCount",params);try{return BigNumber.from(result).toNumber()}catch(error){return logger.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"getTransactionCount",params:params,result:result,error:error})}}))}getCode(addressOrName,blockTag){return __awaiter(this,void 0,void 0,(function*(){yield this.getNetwork();const params=yield resolveProperties({address:this._getAddress(addressOrName),blockTag:this._getBlockTag(blockTag)}),result=yield this.perform("getCode",params);try{return hexlify(result)}catch(error){return logger.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"getCode",params:params,result:result,error:error})}}))}getStorageAt(addressOrName,position,blockTag){return __awaiter(this,void 0,void 0,(function*(){yield this.getNetwork();const params=yield resolveProperties({address:this._getAddress(addressOrName),blockTag:this._getBlockTag(blockTag),position:Promise.resolve(position).then((p=>hexValue(p)))}),result=yield this.perform("getStorageAt",params);try{return hexlify(result)}catch(error){return logger.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"getStorageAt",params:params,result:result,error:error})}}))}_wrapTransaction(tx,hash,startBlock){if(null!=hash&&32!==hexDataLength(hash))throw new Error("invalid response - sendTransaction");const result=tx;return null!=hash&&tx.hash!==hash&&logger.throwError("Transaction hash mismatch from Provider.sendTransaction.",Logger.errors.UNKNOWN_ERROR,{expectedHash:tx.hash,returnedHash:hash}),result.wait=(confirms,timeout)=>__awaiter(this,void 0,void 0,(function*(){let replacement;null==confirms&&(confirms=1),null==timeout&&(timeout=0),0!==confirms&&null!=startBlock&&(replacement={data:tx.data,from:tx.from,nonce:tx.nonce,to:tx.to,value:tx.value,startBlock:startBlock});const receipt=yield this._waitForTransaction(tx.hash,confirms,timeout,replacement);return null==receipt&&0===confirms?null:(this._emitted["t:"+tx.hash]=receipt.blockNumber,0===receipt.status&&logger.throwError("transaction failed",Logger.errors.CALL_EXCEPTION,{transactionHash:tx.hash,transaction:tx,receipt:receipt}),receipt)})),result}sendTransaction(signedTransaction){return __awaiter(this,void 0,void 0,(function*(){yield this.getNetwork();const hexTx=yield Promise.resolve(signedTransaction).then((t=>hexlify(t))),tx=this.formatter.transaction(signedTransaction);null==tx.confirmations&&(tx.confirmations=0);const blockNumber=yield this._getInternalBlockNumber(100+2*this.pollingInterval);try{const hash=yield this.perform("sendTransaction",{signedTransaction:hexTx});return this._wrapTransaction(tx,hash,blockNumber)}catch(error){throw error.transaction=tx,error.transactionHash=tx.hash,error}}))}_getTransactionRequest(transaction){return __awaiter(this,void 0,void 0,(function*(){const values=yield transaction,tx={};return["from","to"].forEach((key=>{null!=values[key]&&(tx[key]=Promise.resolve(values[key]).then((v=>v?this._getAddress(v):null)))})),["gasLimit","gasPrice","maxFeePerGas","maxPriorityFeePerGas","value"].forEach((key=>{null!=values[key]&&(tx[key]=Promise.resolve(values[key]).then((v=>v?BigNumber.from(v):null)))})),["type"].forEach((key=>{null!=values[key]&&(tx[key]=Promise.resolve(values[key]).then((v=>null!=v?v:null)))})),values.accessList&&(tx.accessList=this.formatter.accessList(values.accessList)),["data"].forEach((key=>{null!=values[key]&&(tx[key]=Promise.resolve(values[key]).then((v=>v?hexlify(v):null)))})),this.formatter.transactionRequest(yield resolveProperties(tx))}))}_getFilter(filter){return __awaiter(this,void 0,void 0,(function*(){filter=yield filter;const result={};return null!=filter.address&&(result.address=this._getAddress(filter.address)),["blockHash","topics"].forEach((key=>{null!=filter[key]&&(result[key]=filter[key])})),["fromBlock","toBlock"].forEach((key=>{null!=filter[key]&&(result[key]=this._getBlockTag(filter[key]))})),this.formatter.filter(yield resolveProperties(result))}))}_call(transaction,blockTag,attempt){return __awaiter(this,void 0,void 0,(function*(){attempt>=10&&logger.throwError("CCIP read exceeded maximum redirections",Logger.errors.SERVER_ERROR,{redirects:attempt,transaction:transaction});const txSender=transaction.to,result=yield this.perform("call",{transaction:transaction,blockTag:blockTag});if(attempt>=0&&"latest"===blockTag&&null!=txSender&&"0x556f1830"===result.substring(0,10)&&hexDataLength(result)%32==4)try{const data=hexDataSlice(result,4),sender=hexDataSlice(data,0,32);BigNumber.from(sender).eq(txSender)||logger.throwError("CCIP Read sender did not match",Logger.errors.CALL_EXCEPTION,{name:"OffchainLookup",signature:"OffchainLookup(address,string[],bytes,bytes4,bytes)",transaction:transaction,data:result});const urls=[],urlsOffset=BigNumber.from(hexDataSlice(data,32,64)).toNumber(),urlsLength=BigNumber.from(hexDataSlice(data,urlsOffset,urlsOffset+32)).toNumber(),urlsData=hexDataSlice(data,urlsOffset+32);for(let u=0;u<urlsLength;u++){const url=_parseString(urlsData,32*u);null==url&&logger.throwError("CCIP Read contained corrupt URL string",Logger.errors.CALL_EXCEPTION,{name:"OffchainLookup",signature:"OffchainLookup(address,string[],bytes,bytes4,bytes)",transaction:transaction,data:result}),urls.push(url)}const calldata=_parseBytes(data,64);BigNumber.from(hexDataSlice(data,100,128)).isZero()||logger.throwError("CCIP Read callback selector included junk",Logger.errors.CALL_EXCEPTION,{name:"OffchainLookup",signature:"OffchainLookup(address,string[],bytes,bytes4,bytes)",transaction:transaction,data:result});const callbackSelector=hexDataSlice(data,96,100),extraData=_parseBytes(data,128),ccipResult=yield this.ccipReadFetch(transaction,calldata,urls);null==ccipResult&&logger.throwError("CCIP Read disabled or provided no URLs",Logger.errors.CALL_EXCEPTION,{name:"OffchainLookup",signature:"OffchainLookup(address,string[],bytes,bytes4,bytes)",transaction:transaction,data:result});const tx={to:txSender,data:hexConcat([callbackSelector,encodeBytes([ccipResult,extraData])])};return this._call(tx,blockTag,attempt+1)}catch(error){if(error.code===Logger.errors.SERVER_ERROR)throw error}try{return hexlify(result)}catch(error){return logger.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"call",params:{transaction:transaction,blockTag:blockTag},result:result,error:error})}}))}call(transaction,blockTag){return __awaiter(this,void 0,void 0,(function*(){yield this.getNetwork();const resolved=yield resolveProperties({transaction:this._getTransactionRequest(transaction),blockTag:this._getBlockTag(blockTag),ccipReadEnabled:Promise.resolve(transaction.ccipReadEnabled)});return this._call(resolved.transaction,resolved.blockTag,resolved.ccipReadEnabled?0:-1)}))}estimateGas(transaction){return __awaiter(this,void 0,void 0,(function*(){yield this.getNetwork();const params=yield resolveProperties({transaction:this._getTransactionRequest(transaction)}),result=yield this.perform("estimateGas",params);try{return BigNumber.from(result)}catch(error){return logger.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"estimateGas",params:params,result:result,error:error})}}))}_getAddress(addressOrName){return __awaiter(this,void 0,void 0,(function*(){"string"!=typeof(addressOrName=yield addressOrName)&&logger.throwArgumentError("invalid address or ENS name","name",addressOrName);const address=yield this.resolveName(addressOrName);return null==address&&logger.throwError("ENS name not configured",Logger.errors.UNSUPPORTED_OPERATION,{operation:`resolveName(${JSON.stringify(addressOrName)})`}),address}))}_getBlock(blockHashOrBlockTag,includeTransactions){return __awaiter(this,void 0,void 0,(function*(){yield this.getNetwork(),blockHashOrBlockTag=yield blockHashOrBlockTag;let blockNumber=-128;const params={includeTransactions:!!includeTransactions};if(isHexString(blockHashOrBlockTag,32))params.blockHash=blockHashOrBlockTag;else try{params.blockTag=yield this._getBlockTag(blockHashOrBlockTag),isHexString(params.blockTag)&&(blockNumber=parseInt(params.blockTag.substring(2),16))}catch(error){logger.throwArgumentError("invalid block hash or block tag","blockHashOrBlockTag",blockHashOrBlockTag)}return poll((()=>__awaiter(this,void 0,void 0,(function*(){const block=yield this.perform("getBlock",params);if(null==block)return null!=params.blockHash&&null==this._emitted["b:"+params.blockHash]||null!=params.blockTag&&blockNumber>this._emitted.block?null:void 0;if(includeTransactions){let blockNumber=null;for(let i=0;i<block.transactions.length;i++){const tx=block.transactions[i];if(null==tx.blockNumber)tx.confirmations=0;else if(null==tx.confirmations){null==blockNumber&&(blockNumber=yield this._getInternalBlockNumber(100+2*this.pollingInterval));let confirmations=blockNumber-tx.blockNumber+1;confirmations<=0&&(confirmations=1),tx.confirmations=confirmations}}const blockWithTxs=this.formatter.blockWithTransactions(block);return blockWithTxs.transactions=blockWithTxs.transactions.map((tx=>this._wrapTransaction(tx))),blockWithTxs}return this.formatter.block(block)}))),{oncePoll:this})}))}getBlock(blockHashOrBlockTag){return this._getBlock(blockHashOrBlockTag,!1)}getBlockWithTransactions(blockHashOrBlockTag){return this._getBlock(blockHashOrBlockTag,!0)}getTransaction(transactionHash){return __awaiter(this,void 0,void 0,(function*(){yield this.getNetwork(),transactionHash=yield transactionHash;const params={transactionHash:this.formatter.hash(transactionHash,!0)};return poll((()=>__awaiter(this,void 0,void 0,(function*(){const result=yield this.perform("getTransaction",params);if(null==result)return null==this._emitted["t:"+transactionHash]?null:void 0;const tx=this.formatter.transactionResponse(result);if(null==tx.blockNumber)tx.confirmations=0;else if(null==tx.confirmations){let confirmations=(yield this._getInternalBlockNumber(100+2*this.pollingInterval))-tx.blockNumber+1;confirmations<=0&&(confirmations=1),tx.confirmations=confirmations}return this._wrapTransaction(tx)}))),{oncePoll:this})}))}getTransactionReceipt(transactionHash){return __awaiter(this,void 0,void 0,(function*(){yield this.getNetwork(),transactionHash=yield transactionHash;const params={transactionHash:this.formatter.hash(transactionHash,!0)};return poll((()=>__awaiter(this,void 0,void 0,(function*(){const result=yield this.perform("getTransactionReceipt",params);if(null==result)return null==this._emitted["t:"+transactionHash]?null:void 0;if(null==result.blockHash)return;const receipt=this.formatter.receipt(result);if(null==receipt.blockNumber)receipt.confirmations=0;else if(null==receipt.confirmations){let confirmations=(yield this._getInternalBlockNumber(100+2*this.pollingInterval))-receipt.blockNumber+1;confirmations<=0&&(confirmations=1),receipt.confirmations=confirmations}return receipt}))),{oncePoll:this})}))}getLogs(filter){return __awaiter(this,void 0,void 0,(function*(){yield this.getNetwork();const params=yield resolveProperties({filter:this._getFilter(filter)}),logs=yield this.perform("getLogs",params);return logs.forEach((log=>{null==log.removed&&(log.removed=!1)})),Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs)}))}getEtherPrice(){return __awaiter(this,void 0,void 0,(function*(){return yield this.getNetwork(),this.perform("getEtherPrice",{})}))}_getBlockTag(blockTag){return __awaiter(this,void 0,void 0,(function*(){if("number"==typeof(blockTag=yield blockTag)&&blockTag<0){blockTag%1&&logger.throwArgumentError("invalid BlockTag","blockTag",blockTag);let blockNumber=yield this._getInternalBlockNumber(100+2*this.pollingInterval);return blockNumber+=blockTag,blockNumber<0&&(blockNumber=0),this.formatter.blockTag(blockNumber)}return this.formatter.blockTag(blockTag)}))}getResolver(name){return __awaiter(this,void 0,void 0,(function*(){let currentName=name;for(;;){if(""===currentName||"."===currentName)return null;if("eth"!==name&&"eth"===currentName)return null;const addr=yield this._getResolver(currentName,"getResolver");if(null!=addr){const resolver=new Resolver(this,addr,name);return currentName===name||(yield resolver.supportsWildcard())?resolver:null}currentName=currentName.split(".").slice(1).join(".")}}))}_getResolver(name,operation){return __awaiter(this,void 0,void 0,(function*(){null==operation&&(operation="ENS");const network=yield this.getNetwork();network.ensAddress||logger.throwError("network does not support ENS",Logger.errors.UNSUPPORTED_OPERATION,{operation:operation,network:network.name});try{const addrData=yield this.call({to:network.ensAddress,data:"0x0178b8bf"+namehash(name).substring(2)});return this.formatter.callAddress(addrData)}catch(error){}return null}))}resolveName(name){return __awaiter(this,void 0,void 0,(function*(){name=yield name;try{return Promise.resolve(this.formatter.address(name))}catch(error){if(isHexString(name))throw error}"string"!=typeof name&&logger.throwArgumentError("invalid ENS name","name",name);const resolver=yield this.getResolver(name);return resolver?yield resolver.getAddress():null}))}lookupAddress(address){return __awaiter(this,void 0,void 0,(function*(){address=yield address;const node=(address=this.formatter.address(address)).substring(2).toLowerCase()+".addr.reverse",resolverAddr=yield this._getResolver(node,"lookupAddress");if(null==resolverAddr)return null;const name=_parseString(yield this.call({to:resolverAddr,data:"0x691f3431"+namehash(node).substring(2)}),0);return(yield this.resolveName(name))!=address?null:name}))}getAvatar(nameOrAddress){return __awaiter(this,void 0,void 0,(function*(){let resolver=null;if(isHexString(nameOrAddress)){const node=this.formatter.address(nameOrAddress).substring(2).toLowerCase()+".addr.reverse",resolverAddress=yield this._getResolver(node,"getAvatar");if(!resolverAddress)return null;resolver=new Resolver(this,resolverAddress,node);try{const avatar=yield resolver.getAvatar();if(avatar)return avatar.url}catch(error){if(error.code!==Logger.errors.CALL_EXCEPTION)throw error}try{const name=_parseString(yield this.call({to:resolverAddress,data:"0x691f3431"+namehash(node).substring(2)}),0);resolver=yield this.getResolver(name)}catch(error){if(error.code!==Logger.errors.CALL_EXCEPTION)throw error;return null}}else if(resolver=yield this.getResolver(nameOrAddress),!resolver)return null;const avatar=yield resolver.getAvatar();return null==avatar?null:avatar.url}))}perform(method,params){return logger.throwError(method+" not implemented",Logger.errors.NOT_IMPLEMENTED,{operation:method})}_startEvent(event){this.polling=this._events.filter((e=>e.pollable())).length>0}_stopEvent(event){this.polling=this._events.filter((e=>e.pollable())).length>0}_addEventListener(eventName,listener,once){const event=new Event(getEventTag(eventName),listener,once);return this._events.push(event),this._startEvent(event),this}on(eventName,listener){return this._addEventListener(eventName,listener,!1)}once(eventName,listener){return this._addEventListener(eventName,listener,!0)}emit(eventName,...args){let result=!1,stopped=[],eventTag=getEventTag(eventName);return this._events=this._events.filter((event=>event.tag!==eventTag||(setTimeout((()=>{event.listener.apply(this,args)}),0),result=!0,!event.once||(stopped.push(event),!1)))),stopped.forEach((event=>{this._stopEvent(event)})),result}listenerCount(eventName){if(!eventName)return this._events.length;let eventTag=getEventTag(eventName);return this._events.filter((event=>event.tag===eventTag)).length}listeners(eventName){if(null==eventName)return this._events.map((event=>event.listener));let eventTag=getEventTag(eventName);return this._events.filter((event=>event.tag===eventTag)).map((event=>event.listener))}off(eventName,listener){if(null==listener)return this.removeAllListeners(eventName);const stopped=[];let found=!1,eventTag=getEventTag(eventName);return this._events=this._events.filter((event=>event.tag!==eventTag||event.listener!=listener||(!!found||(found=!0,stopped.push(event),!1)))),stopped.forEach((event=>{this._stopEvent(event)})),this}removeAllListeners(eventName){let stopped=[];if(null==eventName)stopped=this._events,this._events=[];else{const eventTag=getEventTag(eventName);this._events=this._events.filter((event=>event.tag!==eventTag||(stopped.push(event),!1)))}return stopped.forEach((event=>{this._stopEvent(event)})),this}}
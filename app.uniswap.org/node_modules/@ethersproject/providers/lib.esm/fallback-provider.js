"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P((function(resolve){resolve(value)}))).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};import{Provider}from"@ethersproject/abstract-provider";import{BigNumber}from"@ethersproject/bignumber";import{isHexString}from"@ethersproject/bytes";import{deepCopy,defineReadOnly,shallowCopy}from"@ethersproject/properties";import{shuffled}from"@ethersproject/random";import{poll}from"@ethersproject/web";import{BaseProvider}from"./base-provider";import{isCommunityResource}from"./formatter";import{Logger}from"@ethersproject/logger";import{version}from"./_version";const logger=new Logger(version);function now(){return(new Date).getTime()}function checkNetworks(networks){let result=null;for(let i=0;i<networks.length;i++){const network=networks[i];if(null==network)return null;result?result.name===network.name&&result.chainId===network.chainId&&(result.ensAddress===network.ensAddress||null==result.ensAddress&&null==network.ensAddress)||logger.throwArgumentError("provider mismatch","networks",networks):result=network}return result}function median(values,maxDelta){values=values.slice().sort();const middle=Math.floor(values.length/2);if(values.length%2)return values[middle];const a=values[middle-1],b=values[middle];return null!=maxDelta&&Math.abs(a-b)>maxDelta?null:(a+b)/2}function serialize(value){if(null===value)return"null";if("number"==typeof value||"boolean"==typeof value)return JSON.stringify(value);if("string"==typeof value)return value;if(BigNumber.isBigNumber(value))return value.toString();if(Array.isArray(value))return JSON.stringify(value.map((i=>serialize(i))));if("object"==typeof value){const keys=Object.keys(value);return keys.sort(),"{"+keys.map((key=>{let v=value[key];return v="function"==typeof v?"[function]":serialize(v),JSON.stringify(key)+":"+v})).join(",")+"}"}throw new Error("unknown value type: "+typeof value)}let nextRid=1;function stall(duration){let cancel=null,timer=null,promise=new Promise((resolve=>{cancel=function(){timer&&(clearTimeout(timer),timer=null),resolve()},timer=setTimeout(cancel,duration)}));return{cancel:cancel,getPromise:function(){return promise},wait:func=>(promise=promise.then(func),promise)}}const ForwardErrors=[Logger.errors.CALL_EXCEPTION,Logger.errors.INSUFFICIENT_FUNDS,Logger.errors.NONCE_EXPIRED,Logger.errors.REPLACEMENT_UNDERPRICED,Logger.errors.UNPREDICTABLE_GAS_LIMIT],ForwardProperties=["address","args","errorArgs","errorSignature","method","transaction"];function exposeDebugConfig(config,now){const result={weight:config.weight};return Object.defineProperty(result,"provider",{get:()=>config.provider}),config.start&&(result.start=config.start),now&&(result.duration=now-config.start),config.done&&(config.error?result.error=config.error:result.result=config.result||null),result}function normalizedTally(normalize,quorum){return function(configs){const tally={};configs.forEach((c=>{const value=normalize(c.result);tally[value]||(tally[value]={count:0,result:c.result}),tally[value].count++}));const keys=Object.keys(tally);for(let i=0;i<keys.length;i++){const check=tally[keys[i]];if(check.count>=quorum)return check.result}}}function getProcessFunc(provider,method,params){let normalize=serialize;switch(method){case"getBlockNumber":return function(configs){const values=configs.map((c=>c.result));let blockNumber=median(configs.map((c=>c.result)),2);if(null!=blockNumber)return blockNumber=Math.ceil(blockNumber),values.indexOf(blockNumber+1)>=0&&blockNumber++,blockNumber>=provider._highestBlockNumber&&(provider._highestBlockNumber=blockNumber),provider._highestBlockNumber};case"getGasPrice":return function(configs){const values=configs.map((c=>c.result));return values.sort(),values[Math.floor(values.length/2)]};case"getEtherPrice":return function(configs){return median(configs.map((c=>c.result)))};case"getBalance":case"getTransactionCount":case"getCode":case"getStorageAt":case"call":case"estimateGas":case"getLogs":break;case"getTransaction":case"getTransactionReceipt":normalize=function(tx){return null==tx?null:((tx=shallowCopy(tx)).confirmations=-1,serialize(tx))};break;case"getBlock":normalize=params.includeTransactions?function(block){return null==block?null:((block=shallowCopy(block)).transactions=block.transactions.map((tx=>((tx=shallowCopy(tx)).confirmations=-1,tx))),serialize(block))}:function(block){return null==block?null:serialize(block)};break;default:throw new Error("unknown method: "+method)}return normalizedTally(normalize,provider.quorum)}function waitForSync(config,blockNumber){return __awaiter(this,void 0,void 0,(function*(){const provider=config.provider;return null!=provider.blockNumber&&provider.blockNumber>=blockNumber||-1===blockNumber?provider:poll((()=>new Promise(((resolve,reject)=>{setTimeout((function(){return provider.blockNumber>=blockNumber?resolve(provider):config.cancelled?resolve(null):resolve(void 0)}),0)}))),{oncePoll:provider})}))}function getRunner(config,currentBlockNumber,method,params){return __awaiter(this,void 0,void 0,(function*(){let provider=config.provider;switch(method){case"getBlockNumber":case"getGasPrice":return provider[method]();case"getEtherPrice":if(provider.getEtherPrice)return provider.getEtherPrice();break;case"getBalance":case"getTransactionCount":case"getCode":return params.blockTag&&isHexString(params.blockTag)&&(provider=yield waitForSync(config,currentBlockNumber)),provider[method](params.address,params.blockTag||"latest");case"getStorageAt":return params.blockTag&&isHexString(params.blockTag)&&(provider=yield waitForSync(config,currentBlockNumber)),provider.getStorageAt(params.address,params.position,params.blockTag||"latest");case"getBlock":return params.blockTag&&isHexString(params.blockTag)&&(provider=yield waitForSync(config,currentBlockNumber)),provider[params.includeTransactions?"getBlockWithTransactions":"getBlock"](params.blockTag||params.blockHash);case"call":case"estimateGas":return params.blockTag&&isHexString(params.blockTag)&&(provider=yield waitForSync(config,currentBlockNumber)),"call"===method&&params.blockTag?provider[method](params.transaction,params.blockTag):provider[method](params.transaction);case"getTransaction":case"getTransactionReceipt":return provider[method](params.transactionHash);case"getLogs":{let filter=params.filter;return(filter.fromBlock&&isHexString(filter.fromBlock)||filter.toBlock&&isHexString(filter.toBlock))&&(provider=yield waitForSync(config,currentBlockNumber)),provider.getLogs(filter)}}return logger.throwError("unknown method error",Logger.errors.UNKNOWN_ERROR,{method:method,params:params})}))}export class FallbackProvider extends BaseProvider{constructor(providers,quorum){0===providers.length&&logger.throwArgumentError("missing providers","providers",providers);const providerConfigs=providers.map(((configOrProvider,index)=>{if(Provider.isProvider(configOrProvider)){const stallTimeout=isCommunityResource(configOrProvider)?2e3:750,priority=1;return Object.freeze({provider:configOrProvider,weight:1,stallTimeout:stallTimeout,priority:priority})}const config=shallowCopy(configOrProvider);null==config.priority&&(config.priority=1),null==config.stallTimeout&&(config.stallTimeout=isCommunityResource(configOrProvider)?2e3:750),null==config.weight&&(config.weight=1);const weight=config.weight;return(weight%1||weight>512||weight<1)&&logger.throwArgumentError("invalid weight; must be integer in [1, 512]",`providers[${index}].weight`,weight),Object.freeze(config)})),total=providerConfigs.reduce(((accum,c)=>accum+c.weight),0);null==quorum?quorum=total/2:quorum>total&&logger.throwArgumentError("quorum will always fail; larger than total weight","quorum",quorum);let networkOrReady=checkNetworks(providerConfigs.map((c=>c.provider.network)));null==networkOrReady&&(networkOrReady=new Promise(((resolve,reject)=>{setTimeout((()=>{this.detectNetwork().then(resolve,reject)}),0)}))),super(networkOrReady),defineReadOnly(this,"providerConfigs",Object.freeze(providerConfigs)),defineReadOnly(this,"quorum",quorum),this._highestBlockNumber=-1}detectNetwork(){return __awaiter(this,void 0,void 0,(function*(){return checkNetworks(yield Promise.all(this.providerConfigs.map((c=>c.provider.getNetwork()))))}))}perform(method,params){return __awaiter(this,void 0,void 0,(function*(){if("sendTransaction"===method){const results=yield Promise.all(this.providerConfigs.map((c=>c.provider.sendTransaction(params.signedTransaction).then((result=>result.hash),(error=>error)))));for(let i=0;i<results.length;i++){const result=results[i];if("string"==typeof result)return result}throw results[0]}-1===this._highestBlockNumber&&"getBlockNumber"!==method&&(yield this.getBlockNumber());const processFunc=getProcessFunc(this,method,params),configs=shuffled(this.providerConfigs.map(shallowCopy));configs.sort(((a,b)=>a.priority-b.priority));const currentBlockNumber=this._highestBlockNumber;let i=0,first=!0;for(;;){const t0=now();let inflightWeight=configs.filter((c=>c.runner&&t0-c.start<c.stallTimeout)).reduce(((accum,c)=>accum+c.weight),0);for(;inflightWeight<this.quorum&&i<configs.length;){const config=configs[i++],rid=nextRid++;config.start=now(),config.staller=stall(config.stallTimeout),config.staller.wait((()=>{config.staller=null})),config.runner=getRunner(config,currentBlockNumber,method,params).then((result=>{config.done=!0,config.result=result,this.listenerCount("debug")&&this.emit("debug",{action:"request",rid:rid,backend:exposeDebugConfig(config,now()),request:{method:method,params:deepCopy(params)},provider:this})}),(error=>{config.done=!0,config.error=error,this.listenerCount("debug")&&this.emit("debug",{action:"request",rid:rid,backend:exposeDebugConfig(config,now()),request:{method:method,params:deepCopy(params)},provider:this})})),this.listenerCount("debug")&&this.emit("debug",{action:"request",rid:rid,backend:exposeDebugConfig(config,null),request:{method:method,params:deepCopy(params)},provider:this}),inflightWeight+=config.weight}const waiting=[];configs.forEach((c=>{!c.done&&c.runner&&(waiting.push(c.runner),c.staller&&waiting.push(c.staller.getPromise()))})),waiting.length&&(yield Promise.race(waiting));const results=configs.filter((c=>c.done&&null==c.error));if(results.length>=this.quorum){const result=processFunc(results);if(void 0!==result)return configs.forEach((c=>{c.staller&&c.staller.cancel(),c.cancelled=!0})),result;first||(yield stall(100).getPromise()),first=!1}const errors=configs.reduce(((accum,c)=>{if(!c.done||null==c.error)return accum;const code=c.error.code;return ForwardErrors.indexOf(code)>=0&&(accum[code]||(accum[code]={error:c.error,weight:0}),accum[code].weight+=c.weight),accum}),{});if(Object.keys(errors).forEach((errorCode=>{const tally=errors[errorCode];if(tally.weight<this.quorum)return;configs.forEach((c=>{c.staller&&c.staller.cancel(),c.cancelled=!0}));const e=tally.error,props={};ForwardProperties.forEach((name=>{null!=e[name]&&(props[name]=e[name])})),logger.throwError(e.reason||e.message,errorCode,props)})),0===configs.filter((c=>!c.done)).length)break}return configs.forEach((c=>{c.staller&&c.staller.cancel(),c.cancelled=!0})),logger.throwError("failed to meet quorum",Logger.errors.SERVER_ERROR,{method:method,params:params,results:configs.map((c=>exposeDebugConfig(c))),provider:this})}))}}
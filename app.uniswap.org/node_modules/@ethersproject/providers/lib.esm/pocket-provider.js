"use strict";import{Logger}from"@ethersproject/logger";import{version}from"./_version";const logger=new Logger(version);import{UrlJsonRpcProvider}from"./url-json-rpc-provider";const defaultApplicationId="62e1ad51b37b8e00394bda3b";export class PocketProvider extends UrlJsonRpcProvider{static getApiKey(apiKey){const apiKeyObj={applicationId:null,loadBalancer:!0,applicationSecretKey:null};return null==apiKey?apiKeyObj.applicationId=defaultApplicationId:"string"==typeof apiKey?apiKeyObj.applicationId=apiKey:null!=apiKey.applicationSecretKey?(apiKeyObj.applicationId=apiKey.applicationId,apiKeyObj.applicationSecretKey=apiKey.applicationSecretKey):apiKey.applicationId?apiKeyObj.applicationId=apiKey.applicationId:logger.throwArgumentError("unsupported PocketProvider apiKey","apiKey",apiKey),apiKeyObj}static getUrl(network,apiKey){let host=null;switch(network?network.name:"unknown"){case"goerli":host="eth-goerli.gateway.pokt.network";break;case"homestead":host="eth-mainnet.gateway.pokt.network";break;case"kovan":host="poa-kovan.gateway.pokt.network";break;case"matic":host="poly-mainnet.gateway.pokt.network";break;case"maticmum":host="polygon-mumbai-rpc.gateway.pokt.network";break;case"rinkeby":host="eth-rinkeby.gateway.pokt.network";break;case"ropsten":host="eth-ropsten.gateway.pokt.network";break;default:logger.throwError("unsupported network",Logger.errors.INVALID_ARGUMENT,{argument:"network",value:network})}const connection={headers:{},url:`https://${host}/v1/lb/${apiKey.applicationId}`};return null!=apiKey.applicationSecretKey&&(connection.user="",connection.password=apiKey.applicationSecretKey),connection}isCommunityResource(){return this.applicationId===defaultApplicationId}}
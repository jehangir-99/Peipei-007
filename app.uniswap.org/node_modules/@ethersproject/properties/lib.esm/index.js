"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P((function(resolve){resolve(value)}))).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};import{Logger}from"@ethersproject/logger";import{version}from"./_version";const logger=new Logger(version);export function defineReadOnly(object,name,value){Object.defineProperty(object,name,{enumerable:!0,value:value,writable:!1})}export function getStatic(ctor,key){for(let i=0;i<32;i++){if(ctor[key])return ctor[key];if(!ctor.prototype||"object"!=typeof ctor.prototype)break;ctor=Object.getPrototypeOf(ctor.prototype).constructor}return null}export function resolveProperties(object){return __awaiter(this,void 0,void 0,(function*(){const promises=Object.keys(object).map((key=>{const value=object[key];return Promise.resolve(value).then((v=>({key:key,value:v})))}));return(yield Promise.all(promises)).reduce(((accum,result)=>(accum[result.key]=result.value,accum)),{})}))}export function checkProperties(object,properties){object&&"object"==typeof object||logger.throwArgumentError("invalid object","object",object),Object.keys(object).forEach((key=>{properties[key]||logger.throwArgumentError("invalid object key - "+key,"transaction:"+key,object)}))}export function shallowCopy(object){const result={};for(const key in object)result[key]=object[key];return result}const opaque={bigint:!0,boolean:!0,function:!0,number:!0,string:!0};function _isFrozen(object){if(null==object||opaque[typeof object])return!0;if(Array.isArray(object)||"object"==typeof object){if(!Object.isFrozen(object))return!1;const keys=Object.keys(object);for(let i=0;i<keys.length;i++){let value=null;try{value=object[keys[i]]}catch(error){continue}if(!_isFrozen(value))return!1}return!0}return logger.throwArgumentError("Cannot deepCopy "+typeof object,"object",object)}function _deepCopy(object){if(_isFrozen(object))return object;if(Array.isArray(object))return Object.freeze(object.map((item=>deepCopy(item))));if("object"==typeof object){const result={};for(const key in object){const value=object[key];void 0!==value&&defineReadOnly(result,key,deepCopy(value))}return result}return logger.throwArgumentError("Cannot deepCopy "+typeof object,"object",object)}export function deepCopy(object){return _deepCopy(object)}export class Description{constructor(info){for(const key in info)this[key]=deepCopy(info[key])}}
import{ProviderNotFoundError,createConnector}from"@wagmi/core";import{getAddress}from"viem";safe.type="safe";export function safe(parameters={}){const{shimDisconnect:shimDisconnect=!1}=parameters;let provider_,disconnect;return createConnector((config=>({id:"safe",name:"Safe",type:safe.type,async connect(){const provider=await this.getProvider();if(!provider)throw new ProviderNotFoundError;const accounts=await this.getAccounts(),chainId=await this.getChainId();return disconnect||(disconnect=this.onDisconnect.bind(this),provider.on("disconnect",disconnect)),shimDisconnect&&await(config.storage?.removeItem("safe.disconnected")),{accounts:accounts,chainId:chainId}},async disconnect(){const provider=await this.getProvider();if(!provider)throw new ProviderNotFoundError;disconnect&&(provider.removeListener("disconnect",disconnect),disconnect=void 0),shimDisconnect&&await(config.storage?.setItem("safe.disconnected",!0))},async getAccounts(){const provider=await this.getProvider();if(!provider)throw new ProviderNotFoundError;return(await provider.request({method:"eth_accounts"})).map(getAddress)},async getProvider(){if("undefined"!=typeof window&&window?.parent!==window){if(!provider_){const{default:SafeAppsSDK}=await import("@safe-global/safe-apps-sdk");let SDK;SDK="function"!=typeof SafeAppsSDK&&"function"==typeof SafeAppsSDK.default?SafeAppsSDK.default:SafeAppsSDK;const sdk=new SDK(parameters),safe=await sdk.safe.getInfo();if(!safe)throw new Error("Could not load Safe information");const{SafeAppProvider:SafeAppProvider}=await import("@safe-global/safe-apps-provider");provider_=new SafeAppProvider(safe,sdk)}return provider_}},async getChainId(){const provider=await this.getProvider();if(!provider)throw new ProviderNotFoundError;return Number(provider.chainId)},async isAuthorized(){try{if(shimDisconnect&&await(config.storage?.getItem("safe.disconnected")))return!1;return!!(await this.getAccounts()).length}catch{return!1}},onAccountsChanged(){},onChainChanged(){},onDisconnect(){config.emitter.emit("disconnect")}})))}
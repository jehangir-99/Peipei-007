import{}from"viem";import{}from"../connectors/createConnector.js";import{}from"../createConfig.js";import{ConnectorAlreadyConnectedError}from"../errors/config.js";import{}from"../types/properties.js";import{}from"../types/utils.js";export async function connect(config,parameters){let connector;if(connector="function"==typeof parameters.connector?config._internal.connectors.setup(parameters.connector):parameters.connector,connector.uid===config.state.current)throw new ConnectorAlreadyConnectedError;try{config.setState((x=>({...x,status:"connecting"}))),connector.emitter.emit("message",{type:"connecting"});const data=await connector.connect({chainId:parameters.chainId}),accounts=data.accounts;return connector.emitter.off("connect",config._internal.events.connect),connector.emitter.on("change",config._internal.events.change),connector.emitter.on("disconnect",config._internal.events.disconnect),await(config.storage?.setItem("recentConnectorId",connector.id)),config.setState((x=>({...x,connections:new Map(x.connections).set(connector.uid,{accounts:accounts,chainId:data.chainId,connector:connector}),current:connector.uid,status:"connected"}))),{accounts:accounts,chainId:data.chainId}}catch(error){throw config.setState((x=>({...x,status:x.current?"connected":"disconnected"}))),error}}
var _Emitter_emitter,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};import{EventEmitter}from"eventemitter3";export class Emitter{constructor(uid){Object.defineProperty(this,"uid",{enumerable:!0,configurable:!0,writable:!0,value:uid}),_Emitter_emitter.set(this,new EventEmitter)}on(eventName,fn){__classPrivateFieldGet(this,_Emitter_emitter,"f").on(eventName,fn)}once(eventName,fn){__classPrivateFieldGet(this,_Emitter_emitter,"f").once(eventName,fn)}off(eventName,fn){__classPrivateFieldGet(this,_Emitter_emitter,"f").off(eventName,fn)}emit(eventName,...params){const data=params[0];__classPrivateFieldGet(this,_Emitter_emitter,"f").emit(eventName,{uid:this.uid,...data})}listenerCount(eventName){return __classPrivateFieldGet(this,_Emitter_emitter,"f").listenerCount(eventName)}}_Emitter_emitter=new WeakMap;export function createEmitter(uid){return new Emitter(uid)}
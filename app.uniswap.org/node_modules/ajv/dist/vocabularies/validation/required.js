"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const code_1=require("../code"),codegen_1=require("../../compile/codegen"),util_1=require("../../compile/util"),error={message:({params:{missingProperty:missingProperty}})=>codegen_1.str`must have required property '${missingProperty}'`,params:({params:{missingProperty:missingProperty}})=>codegen_1._`{missingProperty: ${missingProperty}}`},def={keyword:"required",type:"object",schemaType:"array",$data:!0,error:error,code(cxt){const{gen:gen,schema:schema,schemaCode:schemaCode,data:data,$data:$data,it:it}=cxt,{opts:opts}=it;if(!$data&&0===schema.length)return;const useLoop=schema.length>=opts.loopRequired;if(it.allErrors?function(){if(useLoop||$data)cxt.block$data(codegen_1.nil,loopAllRequired);else for(const prop of schema)(0,code_1.checkReportMissingProp)(cxt,prop)}():function(){const missing=gen.let("missing");if(useLoop||$data){const valid=gen.let("valid",!0);cxt.block$data(valid,(()=>function(missing,valid){cxt.setParams({missingProperty:missing}),gen.forOf(missing,schemaCode,(()=>{gen.assign(valid,(0,code_1.propertyInData)(gen,data,missing,opts.ownProperties)),gen.if((0,codegen_1.not)(valid),(()=>{cxt.error(),gen.break()}))}),codegen_1.nil)}(missing,valid))),cxt.ok(valid)}else gen.if((0,code_1.checkMissingProp)(cxt,schema,missing)),(0,code_1.reportMissingProp)(cxt,missing),gen.else()}(),opts.strictRequired){const props=cxt.parentSchema.properties,{definedProperties:definedProperties}=cxt.it;for(const requiredKey of schema)if(void 0===(null==props?void 0:props[requiredKey])&&!definedProperties.has(requiredKey)){const msg=`required property "${requiredKey}" is not defined at "${it.schemaEnv.baseId+it.errSchemaPath}" (strictRequired)`;(0,util_1.checkStrictMode)(it,msg,it.opts.strictRequired)}}function loopAllRequired(){gen.forOf("prop",schemaCode,(prop=>{cxt.setParams({missingProperty:prop}),gen.if((0,code_1.noPropertyInData)(gen,data,prop,opts.ownProperties),(()=>cxt.error()))}))}}};exports.default=def;
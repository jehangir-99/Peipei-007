"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.checkStrictMode=exports.getErrorPath=exports.Type=exports.useFunc=exports.setEvaluated=exports.evaluatedPropsToName=exports.mergeEvaluated=exports.eachItem=exports.unescapeJsonPointer=exports.escapeJsonPointer=exports.escapeFragment=exports.unescapeFragment=exports.schemaRefOrVal=exports.schemaHasRulesButRef=exports.schemaHasRules=exports.checkUnknownRules=exports.alwaysValidSchema=exports.toHash=void 0;const codegen_1=require("./codegen"),code_1=require("./codegen/code");function toHash(arr){const hash={};for(const item of arr)hash[item]=!0;return hash}function alwaysValidSchema(it,schema){return"boolean"==typeof schema?schema:0===Object.keys(schema).length||(checkUnknownRules(it,schema),!schemaHasRules(schema,it.self.RULES.all))}function checkUnknownRules(it,schema=it.schema){const{opts:opts,self:self}=it;if(!opts.strictSchema)return;if("boolean"==typeof schema)return;const rules=self.RULES.keywords;for(const key in schema)rules[key]||checkStrictMode(it,`unknown keyword: "${key}"`)}function schemaHasRules(schema,rules){if("boolean"==typeof schema)return!schema;for(const key in schema)if(rules[key])return!0;return!1}function schemaHasRulesButRef(schema,RULES){if("boolean"==typeof schema)return!schema;for(const key in schema)if("$ref"!==key&&RULES.all[key])return!0;return!1}function schemaRefOrVal({topSchemaRef:topSchemaRef,schemaPath:schemaPath},schema,keyword,$data){if(!$data){if("number"==typeof schema||"boolean"==typeof schema)return schema;if("string"==typeof schema)return codegen_1._`${schema}`}return codegen_1._`${topSchemaRef}${schemaPath}${(0,codegen_1.getProperty)(keyword)}`}function unescapeFragment(str){return unescapeJsonPointer(decodeURIComponent(str))}function escapeFragment(str){return encodeURIComponent(escapeJsonPointer(str))}function escapeJsonPointer(str){return"number"==typeof str?`${str}`:str.replace(/~/g,"~0").replace(/\//g,"~1")}function unescapeJsonPointer(str){return str.replace(/~1/g,"/").replace(/~0/g,"~")}function eachItem(xs,f){if(Array.isArray(xs))for(const x of xs)f(x);else f(xs)}function makeMergeEvaluated({mergeNames:mergeNames,mergeToName:mergeToName,mergeValues:mergeValues,resultToName:resultToName}){return(gen,from,to,toName)=>{const res=void 0===to?from:to instanceof codegen_1.Name?(from instanceof codegen_1.Name?mergeNames(gen,from,to):mergeToName(gen,from,to),to):from instanceof codegen_1.Name?(mergeToName(gen,to,from),from):mergeValues(from,to);return toName!==codegen_1.Name||res instanceof codegen_1.Name?res:resultToName(gen,res)}}function evaluatedPropsToName(gen,ps){if(!0===ps)return gen.var("props",!0);const props=gen.var("props",codegen_1._`{}`);return void 0!==ps&&setEvaluated(gen,props,ps),props}function setEvaluated(gen,props,ps){Object.keys(ps).forEach((p=>gen.assign(codegen_1._`${props}${(0,codegen_1.getProperty)(p)}`,!0)))}exports.toHash=toHash,exports.alwaysValidSchema=alwaysValidSchema,exports.checkUnknownRules=checkUnknownRules,exports.schemaHasRules=schemaHasRules,exports.schemaHasRulesButRef=schemaHasRulesButRef,exports.schemaRefOrVal=schemaRefOrVal,exports.unescapeFragment=unescapeFragment,exports.escapeFragment=escapeFragment,exports.escapeJsonPointer=escapeJsonPointer,exports.unescapeJsonPointer=unescapeJsonPointer,exports.eachItem=eachItem,exports.mergeEvaluated={props:makeMergeEvaluated({mergeNames:(gen,from,to)=>gen.if(codegen_1._`${to} !== true && ${from} !== undefined`,(()=>{gen.if(codegen_1._`${from} === true`,(()=>gen.assign(to,!0)),(()=>gen.assign(to,codegen_1._`${to} || {}`).code(codegen_1._`Object.assign(${to}, ${from})`)))})),mergeToName:(gen,from,to)=>gen.if(codegen_1._`${to} !== true`,(()=>{!0===from?gen.assign(to,!0):(gen.assign(to,codegen_1._`${to} || {}`),setEvaluated(gen,to,from))})),mergeValues:(from,to)=>!0===from||{...from,...to},resultToName:evaluatedPropsToName}),items:makeMergeEvaluated({mergeNames:(gen,from,to)=>gen.if(codegen_1._`${to} !== true && ${from} !== undefined`,(()=>gen.assign(to,codegen_1._`${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`))),mergeToName:(gen,from,to)=>gen.if(codegen_1._`${to} !== true`,(()=>gen.assign(to,!0===from||codegen_1._`${to} > ${from} ? ${to} : ${from}`))),mergeValues:(from,to)=>!0===from||Math.max(from,to),resultToName:(gen,items)=>gen.var("items",items)})},exports.evaluatedPropsToName=evaluatedPropsToName,exports.setEvaluated=setEvaluated;const snippets={};function useFunc(gen,f){return gen.scopeValue("func",{ref:f,code:snippets[f.code]||(snippets[f.code]=new code_1._Code(f.code))})}var Type;function getErrorPath(dataProp,dataPropType,jsPropertySyntax){if(dataProp instanceof codegen_1.Name){const isNumber=dataPropType===Type.Num;return jsPropertySyntax?isNumber?codegen_1._`"[" + ${dataProp} + "]"`:codegen_1._`"['" + ${dataProp} + "']"`:isNumber?codegen_1._`"/" + ${dataProp}`:codegen_1._`"/" + ${dataProp}.replace(/~/g, "~0").replace(/\\//g, "~1")`}return jsPropertySyntax?(0,codegen_1.getProperty)(dataProp).toString():"/"+escapeJsonPointer(dataProp)}function checkStrictMode(it,msg,mode=it.opts.strictSchema){if(mode){if(msg=`strict mode: ${msg}`,!0===mode)throw new Error(msg);it.self.logger.warn(msg)}}exports.useFunc=useFunc,function(Type){Type[Type.Num=0]="Num",Type[Type.Str=1]="Str"}(Type=exports.Type||(exports.Type={})),exports.getErrorPath=getErrorPath,exports.checkStrictMode=checkStrictMode;
"use strict";const varint=require("varint"),uint8ArrayConcat=require("uint8arrays/concat"),util=require("./util"),{nameToVarint:nameToVarint,constantToCode:constantToCode,nameToCode:nameToCode,codeToName:codeToName}=require("./maps");function addPrefix(multicodecStrOrCode,data){let prefix;if(multicodecStrOrCode instanceof Uint8Array)prefix=util.varintUint8ArrayEncode(multicodecStrOrCode);else{if(!nameToVarint[multicodecStrOrCode])throw new Error("multicodec not recognized");prefix=nameToVarint[multicodecStrOrCode]}return uint8ArrayConcat([prefix,data],prefix.length+data.length)}function rmPrefix(data){return varint.decode(data),data.slice(varint.decode.bytes)}function getNameFromData(prefixedData){const code=varint.decode(prefixedData),name=codeToName[code];if(void 0===name)throw new Error(`Code "${code}" not found`);return name}function getNameFromCode(codec){return codeToName[codec]}function getCodeFromName(name){const code=nameToCode[name];if(void 0===code)throw new Error(`Codec "${name}" not found`);return code}function getCodeFromData(prefixedData){return varint.decode(prefixedData)}function getVarintFromName(name){const code=nameToVarint[name];if(void 0===code)throw new Error(`Codec "${name}" not found`);return code}function getVarintFromCode(code){return util.varintEncode(code)}function getCodec(prefixedData){return getNameFromData(prefixedData)}function getName(codec){return getNameFromCode(codec)}function getNumber(name){return getCodeFromName(name)}function getCode(prefixedData){return getCodeFromData(prefixedData)}function getCodeVarint(name){return getVarintFromName(name)}function getVarint(code){return Array.from(getVarintFromCode(code))}module.exports={addPrefix:addPrefix,rmPrefix:rmPrefix,getNameFromData:getNameFromData,getNameFromCode:getNameFromCode,getCodeFromName:getCodeFromName,getCodeFromData:getCodeFromData,getVarintFromName:getVarintFromName,getVarintFromCode:getVarintFromCode,getCodec:getCodec,getName:getName,getNumber:getNumber,getCode:getCode,getCodeVarint:getCodeVarint,getVarint:getVarint,...constantToCode,nameToVarint:nameToVarint,nameToCode:nameToCode,codeToName:codeToName};
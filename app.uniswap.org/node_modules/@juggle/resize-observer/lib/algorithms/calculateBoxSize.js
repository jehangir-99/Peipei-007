import{ResizeObserverBoxOptions}from"../ResizeObserverBoxOptions";import{ResizeObserverSize}from"../ResizeObserverSize";import{DOMRectReadOnly}from"../DOMRectReadOnly";import{isSVG,isHidden}from"../utils/element";import{freeze}from"../utils/freeze";import{global}from"../utils/global";var cache=new WeakMap,scrollRegexp=/auto|scroll/,verticalRegexp=/^tb|vertical/,IE=/msie|trident/i.test(global.navigator&&global.navigator.userAgent),parseDimension=function(pixel){return parseFloat(pixel||"0")},size=function(inlineSize,blockSize,switchSizes){return void 0===inlineSize&&(inlineSize=0),void 0===blockSize&&(blockSize=0),void 0===switchSizes&&(switchSizes=!1),new ResizeObserverSize((switchSizes?blockSize:inlineSize)||0,(switchSizes?inlineSize:blockSize)||0)},zeroBoxes=freeze({devicePixelContentBoxSize:size(),borderBoxSize:size(),contentBoxSize:size(),contentRect:new DOMRectReadOnly(0,0,0,0)}),calculateBoxSizes=function(target,forceRecalculation){if(void 0===forceRecalculation&&(forceRecalculation=!1),cache.has(target)&&!forceRecalculation)return cache.get(target);if(isHidden(target))return cache.set(target,zeroBoxes),zeroBoxes;var cs=getComputedStyle(target),svg=isSVG(target)&&target.ownerSVGElement&&target.getBBox(),removePadding=!IE&&"border-box"===cs.boxSizing,switchSizes=verticalRegexp.test(cs.writingMode||""),canScrollVertically=!svg&&scrollRegexp.test(cs.overflowY||""),canScrollHorizontally=!svg&&scrollRegexp.test(cs.overflowX||""),paddingTop=svg?0:parseDimension(cs.paddingTop),paddingRight=svg?0:parseDimension(cs.paddingRight),paddingBottom=svg?0:parseDimension(cs.paddingBottom),paddingLeft=svg?0:parseDimension(cs.paddingLeft),borderTop=svg?0:parseDimension(cs.borderTopWidth),borderRight=svg?0:parseDimension(cs.borderRightWidth),borderBottom=svg?0:parseDimension(cs.borderBottomWidth),horizontalPadding=paddingLeft+paddingRight,verticalPadding=paddingTop+paddingBottom,horizontalBorderArea=(svg?0:parseDimension(cs.borderLeftWidth))+borderRight,verticalBorderArea=borderTop+borderBottom,horizontalScrollbarThickness=canScrollHorizontally?target.offsetHeight-verticalBorderArea-target.clientHeight:0,verticalScrollbarThickness=canScrollVertically?target.offsetWidth-horizontalBorderArea-target.clientWidth:0,widthReduction=removePadding?horizontalPadding+horizontalBorderArea:0,heightReduction=removePadding?verticalPadding+verticalBorderArea:0,contentWidth=svg?svg.width:parseDimension(cs.width)-widthReduction-verticalScrollbarThickness,contentHeight=svg?svg.height:parseDimension(cs.height)-heightReduction-horizontalScrollbarThickness,borderBoxWidth=contentWidth+horizontalPadding+verticalScrollbarThickness+horizontalBorderArea,borderBoxHeight=contentHeight+verticalPadding+horizontalScrollbarThickness+verticalBorderArea,boxes=freeze({devicePixelContentBoxSize:size(Math.round(contentWidth*devicePixelRatio),Math.round(contentHeight*devicePixelRatio),switchSizes),borderBoxSize:size(borderBoxWidth,borderBoxHeight,switchSizes),contentBoxSize:size(contentWidth,contentHeight,switchSizes),contentRect:new DOMRectReadOnly(paddingLeft,paddingTop,contentWidth,contentHeight)});return cache.set(target,boxes),boxes},calculateBoxSize=function(target,observedBox,forceRecalculation){var _a=calculateBoxSizes(target,forceRecalculation),borderBoxSize=_a.borderBoxSize,contentBoxSize=_a.contentBoxSize,devicePixelContentBoxSize=_a.devicePixelContentBoxSize;switch(observedBox){case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:return devicePixelContentBoxSize;case ResizeObserverBoxOptions.BORDER_BOX:return borderBoxSize;default:return contentBoxSize}};export{calculateBoxSize,calculateBoxSizes};
var isServer="undefined"==typeof window||"Deno"in globalThis;function noop(){}function functionalUpdate(updater,input){return"function"==typeof updater?updater(input):updater}function isValidTimeout(value){return"number"==typeof value&&value>=0&&value!==1/0}function timeUntilStale(updatedAt,staleTime){return Math.max(updatedAt+(staleTime||0)-Date.now(),0)}function matchQuery(filters,query){const{type:type="all",exact:exact,fetchStatus:fetchStatus,predicate:predicate,queryKey:queryKey,stale:stale}=filters;if(queryKey)if(exact){if(query.queryHash!==hashQueryKeyByOptions(queryKey,query.options))return!1}else if(!partialMatchKey(query.queryKey,queryKey))return!1;if("all"!==type){const isActive=query.isActive();if("active"===type&&!isActive)return!1;if("inactive"===type&&isActive)return!1}return("boolean"!=typeof stale||query.isStale()===stale)&&((!fetchStatus||fetchStatus===query.state.fetchStatus)&&!(predicate&&!predicate(query)))}function matchMutation(filters,mutation){const{exact:exact,status:status,predicate:predicate,mutationKey:mutationKey}=filters;if(mutationKey){if(!mutation.options.mutationKey)return!1;if(exact){if(hashKey(mutation.options.mutationKey)!==hashKey(mutationKey))return!1}else if(!partialMatchKey(mutation.options.mutationKey,mutationKey))return!1}return(!status||mutation.state.status===status)&&!(predicate&&!predicate(mutation))}function hashQueryKeyByOptions(queryKey,options){return(options?.queryKeyHashFn||hashKey)(queryKey)}function hashKey(queryKey){return JSON.stringify(queryKey,((_,val)=>isPlainObject(val)?Object.keys(val).sort().reduce(((result,key)=>(result[key]=val[key],result)),{}):val))}function partialMatchKey(a,b){return a===b||typeof a==typeof b&&(!(!a||!b||"object"!=typeof a||"object"!=typeof b)&&!Object.keys(b).some((key=>!partialMatchKey(a[key],b[key]))))}function replaceEqualDeep(a,b){if(a===b)return a;const array=isPlainArray(a)&&isPlainArray(b);if(array||isPlainObject(a)&&isPlainObject(b)){const aItems=array?a:Object.keys(a),aSize=aItems.length,bItems=array?b:Object.keys(b),bSize=bItems.length,copy=array?[]:{};let equalItems=0;for(let i=0;i<bSize;i++){const key=array?i:bItems[i];!array&&void 0===a[key]&&void 0===b[key]&&aItems.includes(key)?(copy[key]=void 0,equalItems++):(copy[key]=replaceEqualDeep(a[key],b[key]),copy[key]===a[key]&&void 0!==a[key]&&equalItems++)}return aSize===bSize&&equalItems===aSize?a:copy}return b}function shallowEqualObjects(a,b){if(!b||Object.keys(a).length!==Object.keys(b).length)return!1;for(const key in a)if(a[key]!==b[key])return!1;return!0}function isPlainArray(value){return Array.isArray(value)&&value.length===Object.keys(value).length}function isPlainObject(o){if(!hasObjectPrototype(o))return!1;const ctor=o.constructor;if(void 0===ctor)return!0;const prot=ctor.prototype;return!!hasObjectPrototype(prot)&&!!prot.hasOwnProperty("isPrototypeOf")}function hasObjectPrototype(o){return"[object Object]"===Object.prototype.toString.call(o)}function sleep(ms){return new Promise((resolve=>{setTimeout(resolve,ms)}))}function replaceData(prevData,data,options){return"function"==typeof options.structuralSharing?options.structuralSharing(prevData,data):!1!==options.structuralSharing?replaceEqualDeep(prevData,data):data}function keepPreviousData(previousData){return previousData}function addToEnd(items,item,max=0){const newItems=[...items,item];return max&&newItems.length>max?newItems.slice(1):newItems}function addToStart(items,item,max=0){const newItems=[item,...items];return max&&newItems.length>max?newItems.slice(0,-1):newItems}var skipToken=Symbol();export{addToEnd,addToStart,functionalUpdate,hashKey,hashQueryKeyByOptions,isPlainArray,isPlainObject,isServer,isValidTimeout,keepPreviousData,matchMutation,matchQuery,noop,partialMatchKey,replaceData,replaceEqualDeep,shallowEqualObjects,skipToken,sleep,timeUntilStale};
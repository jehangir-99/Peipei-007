import React,{forwardRef,useEffect,useRef,useCallback}from"react";import Portal from"@reach/portal";import{checkStyles,useForkedRef,wrapEvent,getOwnerDocument,noop,isString}from"@reach/utils";import FocusLock from"react-focus-lock";import{RemoveScroll}from"react-remove-scroll";import PropTypes from"prop-types";function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}var overlayPropTypes={allowPinchZoom:PropTypes.bool,dangerouslyBypassFocusLock:PropTypes.bool,dangerouslyBypassScrollLock:PropTypes.bool,initialFocusRef:function(){return null},onDismiss:PropTypes.func},DialogOverlay=forwardRef((function(_ref,forwardedRef){var _ref$isOpen=_ref.isOpen,isOpen=void 0===_ref$isOpen||_ref$isOpen,props=_objectWithoutPropertiesLoose(_ref,["isOpen"]);return useEffect((function(){return checkStyles("dialog")}),[]),useEffect((function(){isOpen?window.__REACH_DISABLE_TOOLTIPS=!0:window.requestAnimationFrame((function(){window.__REACH_DISABLE_TOOLTIPS=!1}))}),[isOpen]),isOpen?React.createElement(Portal,{"data-reach-dialog-wrapper":""},React.createElement(DialogInner,Object.assign({ref:forwardedRef},props))):null}));"production"!==process.env.NODE_ENV&&(DialogOverlay.displayName="DialogOverlay",DialogOverlay.propTypes=_extends({},overlayPropTypes,{isOpen:PropTypes.bool}));var DialogInner=forwardRef((function(_ref2,forwardedRef){var allowPinchZoom=_ref2.allowPinchZoom,_ref2$dangerouslyBypa=_ref2.dangerouslyBypassFocusLock,dangerouslyBypassFocusLock=void 0!==_ref2$dangerouslyBypa&&_ref2$dangerouslyBypa,_ref2$dangerouslyBypa2=_ref2.dangerouslyBypassScrollLock,dangerouslyBypassScrollLock=void 0!==_ref2$dangerouslyBypa2&&_ref2$dangerouslyBypa2,initialFocusRef=_ref2.initialFocusRef,onClick=_ref2.onClick,_ref2$onDismiss=_ref2.onDismiss,onDismiss=void 0===_ref2$onDismiss?noop:_ref2$onDismiss,onKeyDown=_ref2.onKeyDown,onMouseDown=_ref2.onMouseDown,_ref2$unstable_lockFo=_ref2.unstable_lockFocusAcrossFrames,unstable_lockFocusAcrossFrames=void 0===_ref2$unstable_lockFo||_ref2$unstable_lockFo,props=_objectWithoutPropertiesLoose(_ref2,["allowPinchZoom","dangerouslyBypassFocusLock","dangerouslyBypassScrollLock","initialFocusRef","onClick","onDismiss","onKeyDown","onMouseDown","unstable_lockFocusAcrossFrames"]),mouseDownTarget=useRef(null),overlayNode=useRef(null),ref=useForkedRef(overlayNode,forwardedRef),activateFocusLock=useCallback((function(){initialFocusRef&&initialFocusRef.current&&initialFocusRef.current.focus()}),[initialFocusRef]);return useEffect((function(){return overlayNode.current?createAriaHider(overlayNode.current):void 0}),[]),React.createElement(FocusLock,{autoFocus:!0,returnFocus:!0,onActivation:activateFocusLock,disabled:dangerouslyBypassFocusLock,crossFrame:unstable_lockFocusAcrossFrames},React.createElement(RemoveScroll,{allowPinchZoom:allowPinchZoom,enabled:!dangerouslyBypassScrollLock},React.createElement("div",Object.assign({},props,{ref:ref,"data-reach-dialog-overlay":"",onClick:wrapEvent(onClick,(function(event){mouseDownTarget.current===event.target&&(event.stopPropagation(),onDismiss(event))})),onKeyDown:wrapEvent(onKeyDown,(function(event){"Escape"===event.key&&(event.stopPropagation(),onDismiss(event))})),onMouseDown:wrapEvent(onMouseDown,(function(event){mouseDownTarget.current=event.target}))}))))}));"production"!==process.env.NODE_ENV&&(DialogOverlay.displayName="DialogOverlay",DialogOverlay.propTypes=_extends({},overlayPropTypes));var DialogContent=forwardRef((function(_ref3,forwardedRef){var onClick=_ref3.onClick,props=(_ref3.onKeyDown,_objectWithoutPropertiesLoose(_ref3,["onClick","onKeyDown"]));return React.createElement("div",Object.assign({"aria-modal":"true",role:"dialog",tabIndex:-1},props,{ref:forwardedRef,"data-reach-dialog-content":"",onClick:wrapEvent(onClick,(function(event){event.stopPropagation()}))}))}));"production"!==process.env.NODE_ENV&&(DialogContent.displayName="DialogContent",DialogContent.propTypes={"aria-label":ariaLabelType,"aria-labelledby":ariaLabelType});var Dialog=forwardRef((function(_ref4,forwardedRef){var _ref4$allowPinchZoom=_ref4.allowPinchZoom,allowPinchZoom=void 0!==_ref4$allowPinchZoom&&_ref4$allowPinchZoom,initialFocusRef=_ref4.initialFocusRef,isOpen=_ref4.isOpen,_ref4$onDismiss=_ref4.onDismiss,onDismiss=void 0===_ref4$onDismiss?noop:_ref4$onDismiss,props=_objectWithoutPropertiesLoose(_ref4,["allowPinchZoom","initialFocusRef","isOpen","onDismiss"]);return React.createElement(DialogOverlay,{allowPinchZoom:allowPinchZoom,initialFocusRef:initialFocusRef,isOpen:isOpen,onDismiss:onDismiss},React.createElement(DialogContent,Object.assign({ref:forwardedRef},props)))}));function createAriaHider(dialogNode){var originalValues=[],rootNodes=[],ownerDocument=getOwnerDocument(dialogNode)||document;return dialogNode?(Array.prototype.forEach.call(ownerDocument.querySelectorAll("body > *"),(function(node){var _dialogNode$parentNod,_dialogNode$parentNod2;if(node!==(null===(_dialogNode$parentNod=dialogNode.parentNode)||void 0===_dialogNode$parentNod||null===(_dialogNode$parentNod2=_dialogNode$parentNod.parentNode)||void 0===_dialogNode$parentNod2?void 0:_dialogNode$parentNod2.parentNode)){var attr=node.getAttribute("aria-hidden");null!==attr&&"false"!==attr||(originalValues.push(attr),rootNodes.push(node),node.setAttribute("aria-hidden","true"))}})),function(){rootNodes.forEach((function(node,index){var originalValue=originalValues[index];null===originalValue?node.removeAttribute("aria-hidden"):node.setAttribute("aria-hidden",originalValue)}))}):("production"!==process.env.NODE_ENV&&console.warn("A ref has not yet been attached to a dialog node when attempting to call `createAriaHider`."),noop)}function ariaLabelType(props,propName,compName,location,propFullName){var details="\nSee https://www.w3.org/TR/wai-aria/#aria-label for details.";return props["aria-label"]||props["aria-labelledby"]?props["aria-label"]&&props["aria-labelledby"]?new Error("You provided both `aria-label` and `aria-labelledby` props to a <"+compName+">. If the a label for this component is visible on the screen, that label's component should be given a unique ID prop, and that ID should be passed as the `aria-labelledby` prop into <"+compName+">. If the label cannot be determined programmatically from the content of the element, an alternative label should be provided as the `aria-label` prop, which will be used as an `aria-label` on the HTML tag."+details):null==props[propName]||isString(props[propName])?null:new Error("Invalid prop `"+propName+"` supplied to `"+compName+"`. Expected `string`, received `"+(Array.isArray(propFullName)?"array":typeof propFullName)+"`."):new Error("A <"+compName+"> must have either an `aria-label` or `aria-labelledby` prop.\n      "+details)}"production"!==process.env.NODE_ENV&&(Dialog.displayName="Dialog",Dialog.propTypes={isOpen:PropTypes.bool,onDismiss:PropTypes.func,"aria-label":ariaLabelType,"aria-labelledby":ariaLabelType});export default Dialog;export{Dialog,DialogContent,DialogOverlay};
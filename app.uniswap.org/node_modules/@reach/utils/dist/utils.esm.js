import React,{isValidElement,cloneElement,createContext,useRef,useState,useCallback,useEffect,useMemo}from"react";export{default as warning}from"warning";var useIsomorphicLayoutEffect=canUseDOM()?React.useLayoutEffect:React.useEffect,checkedPkgs={},checkStyles=noop;if("production"!==process.env.NODE_ENV){var _ref="undefined"!=typeof process?process:{env:{NODE_ENV:"development"}},env=_ref.env;checkStyles=function(packageName){checkedPkgs[packageName]||(checkedPkgs[packageName]=!0,"test"!==env.NODE_ENV&&1!==parseInt(window.getComputedStyle(document.body).getPropertyValue("--reach-"+packageName),10)&&console.warn("@reach/"+packageName+' styles not found. If you are using a bundler like webpack or parcel include this in the entry file of your app before any of your own styles:\n\n    import "@reach/'+packageName+'/styles.css";\n\n  Otherwise you\'ll need to include them some other way:\n\n    <link rel="stylesheet" type="text/css" href="node_modules/@reach/'+packageName+'/styles.css" />\n\n  For more information visit https://ui.reach.tech/styling.\n  '))}}var ponyfillGlobal="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();function assignRef(ref,value){if(null!=ref)if(isFunction(ref))ref(value);else try{ref.current=value}catch(error){throw new Error('Cannot assign value "'+value+'" to ref "'+ref+'"')}}function boolOrBoolString(value){return"true"===value||!!isBoolean(value)&&value}function canUseDOM(){return!("undefined"==typeof window||!window.document||!window.document.createElement)}function cloneValidElement(element,props){for(var _len=arguments.length,children=new Array(_len>2?_len-2:0),_key=2;_key<_len;_key++)children[_key-2]=arguments[_key];return isValidElement(element)?cloneElement.apply(void 0,[element,props].concat(children)):element}function createNamedContext(name,defaultValue){var Ctx=createContext(defaultValue);return Ctx.displayName=name,Ctx}function forwardRefWithAs(render){return React.forwardRef(render)}function memoWithAs(Component,propsAreEqual){return React.memo(Component,propsAreEqual)}function getDocumentDimensions(element){if(!canUseDOM())return{width:0,height:0};var doc=element?getOwnerDocument(element):document,win=element?getOwnerWindow(element):window;return{width:doc.documentElement.clientWidth||win.innerWidth,height:doc.documentElement.clientHeight||win.innerHeight}}function getScrollPosition(element){if(!canUseDOM())return{scrollX:0,scrollY:0};var win=element?getOwnerWindow(element):window;return{scrollX:win.scrollX,scrollY:win.scrollY}}function getElementComputedStyle(element,styleProp){var y=null,doc=getOwnerDocument(element);return element.currentStyle?y=element.currentStyle[styleProp]:doc&&doc.defaultView&&isFunction(doc.defaultView.getComputedStyle)&&(y=doc.defaultView.getComputedStyle(element,null).getPropertyValue(styleProp)),y}function getOwnerDocument(element){return element&&element.ownerDocument?element.ownerDocument:canUseDOM()?document:null}function getOwnerWindow(element){var doc=element?getOwnerDocument(element):null;return doc?doc.defaultView||window:null}function getScrollbarOffset(){try{if(window.innerWidth>document.documentElement.clientWidth)return window.innerWidth-document.documentElement.clientWidth}catch(err){}return 0}function isBoolean(value){return"boolean"==typeof value}function isFunction(value){return!(!value||"[object Function]"!={}.toString.call(value))}function isNumber(value){return"number"==typeof value}function isRightClick(nativeEvent){return 3===nativeEvent.which||2===nativeEvent.button}function isString(value){return"string"==typeof value}function makeId(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];return args.filter((function(val){return null!=val})).join("--")}function noop(){}function stateToAttributeString(state){return String(state).replace(/([\s_]+)/g,"-").toLowerCase()}function useControlledState(controlledValue,defaultValue){var controlledRef=useRef(null!=controlledValue),_useState=useState(defaultValue),valueState=_useState[0],setValue=_useState[1],set=useCallback((function(n){controlledRef.current||setValue(n)}),[]);return[controlledRef.current?controlledValue:valueState,set]}var useControlledSwitchWarning=noop;"production"!==process.env.NODE_ENV&&(useControlledSwitchWarning=function(controlledValue,controlledPropName,componentName){var controlledRef=useRef(null!=controlledValue),nameCache=useRef({componentName:componentName,controlledPropName:controlledPropName});useEffect((function(){nameCache.current={componentName:componentName,controlledPropName:controlledPropName}}),[componentName,controlledPropName]),useEffect((function(){var wasControlled=controlledRef.current,_nameCache$current=nameCache.current,componentName=_nameCache$current.componentName,controlledPropName=_nameCache$current.controlledPropName;wasControlled!==(null!=controlledValue)&&console.error("A component is changing an "+(wasControlled?"":"un")+"controlled `"+controlledPropName+"` state of "+componentName+" to be "+(wasControlled?"un":"")+"controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled "+componentName+" element for the lifetime of the component.\nMore info: https://fb.me/react-controlled-components")}),[controlledValue])});var useCheckStyles=noop;function useConstant(fn){var ref=React.useRef();return ref.current||(ref.current={v:fn()}),ref.current.v}function useEventCallback(callback){var ref=useRef(callback);return useIsomorphicLayoutEffect((function(){ref.current=callback})),useCallback((function(event){for(var _len3=arguments.length,args=new Array(_len3>1?_len3-1:0),_key3=1;_key3<_len3;_key3++)args[_key3-1]=arguments[_key3];return ref.current.apply(ref,[event].concat(args))}),[])}function useCallbackProp(callback){var ref=useRef(callback);return useEffect((function(){ref.current=callback})),useCallback((function(){return ref.current&&ref.current.apply(ref,arguments)}),[])}function useEventListener(eventName,listener,element){void 0===element&&(element=window);var savedHandler=useRef(listener);useEffect((function(){savedHandler.current=listener}),[listener]),useEffect((function(){if(element&&element.addEventListener)return element.addEventListener(eventName,eventListener),function(){element.removeEventListener(eventName,eventListener)};function eventListener(event){savedHandler.current(event)}"production"!==process.env.NODE_ENV&&console.warn("Event listener not supported on the element provided")}),[eventName,element])}function useFocusChange(handleChange,when,ownerDocument){void 0===handleChange&&(handleChange=console.log),void 0===when&&(when="focus"),void 0===ownerDocument&&(ownerDocument=document);var lastActiveElement=useRef(ownerDocument.activeElement);useEffect((function(){function onChange(event){lastActiveElement.current!==ownerDocument.activeElement&&(handleChange(ownerDocument.activeElement,lastActiveElement.current,event),lastActiveElement.current=ownerDocument.activeElement)}return lastActiveElement.current=ownerDocument.activeElement,ownerDocument.addEventListener(when,onChange,!0),function(){ownerDocument.removeEventListener(when,onChange)}}),[when,handleChange,ownerDocument])}function useForkedRef(){for(var _len4=arguments.length,refs=new Array(_len4),_key4=0;_key4<_len4;_key4++)refs[_key4]=arguments[_key4];return useMemo((function(){return refs.every((function(ref){return null==ref}))?null:function(node){refs.forEach((function(ref){assignRef(ref,node)}))}}),[].concat(refs))}function usePrevious(value){var ref=useRef(null);return useEffect((function(){ref.current=value}),[value]),ref.current}function useUpdateEffect(effect,deps){var mounted=useRef(!1);useEffect((function(){mounted.current?effect():mounted.current=!0}),deps)}"production"!==process.env.NODE_ENV&&(useCheckStyles=function(pkg){var name=useRef(pkg);useEffect((function(){name.current=pkg}),[pkg]),useEffect((function(){return checkStyles(name.current)}),[])});var useStateLogger=noop;function wrapEvent(theirHandler,ourHandler){return function(event){if(theirHandler&&theirHandler(event),!event.defaultPrevented)return ourHandler(event)}}"production"!==process.env.NODE_ENV&&(useStateLogger=function(state,DEBUG){void 0===DEBUG&&(DEBUG=!1);var debugRef=useRef(DEBUG);useEffect((function(){debugRef.current=DEBUG}),[DEBUG]),useEffect((function(){debugRef.current&&(console.group("State Updated"),console.log("%c"+state,"font-weight: normal; font-size: 120%; font-style: italic;"),console.groupEnd())}),[state])});export{assignRef,boolOrBoolString,canUseDOM,checkStyles,cloneValidElement,createNamedContext,forwardRefWithAs,getDocumentDimensions,getElementComputedStyle,getOwnerDocument,getOwnerWindow,getScrollPosition,getScrollbarOffset,isBoolean,isFunction,isNumber,isRightClick,isString,makeId,memoWithAs,noop,ponyfillGlobal,stateToAttributeString,useCallbackProp,useCheckStyles,useConstant,useControlledState,useControlledSwitchWarning,useEventCallback,useEventListener,useFocusChange,useForkedRef,useIsomorphicLayoutEffect,usePrevious,useStateLogger,useUpdateEffect,wrapEvent};
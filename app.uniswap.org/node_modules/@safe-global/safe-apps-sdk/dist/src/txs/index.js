"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TXs=void 0;const methods_1=require("../communication/methods"),types_1=require("../types");class TXs{constructor(communicator){this.communicator=communicator}async getBySafeTxHash(safeTxHash){if(!safeTxHash)throw new Error("Invalid safeTxHash");return(await this.communicator.send(methods_1.Methods.getTxBySafeTxHash,{safeTxHash:safeTxHash})).data}async signMessage(message){const messagePayload={message:message};return(await this.communicator.send(methods_1.Methods.signMessage,messagePayload)).data}async signTypedMessage(typedData){if(!(0,types_1.isObjectEIP712TypedData)(typedData))throw new Error("Invalid typed data");return(await this.communicator.send(methods_1.Methods.signTypedMessage,{typedData:typedData})).data}async send({txs:txs,params:params}){if(!txs||!txs.length)throw new Error("No transactions were passed");const messagePayload={txs:txs,params:params};return(await this.communicator.send(methods_1.Methods.sendTransactions,messagePayload)).data}}exports.TXs=TXs;
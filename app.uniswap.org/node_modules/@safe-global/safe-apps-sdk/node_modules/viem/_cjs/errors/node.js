"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.UnknownNodeError=exports.TipAboveFeeCapError=exports.TransactionTypeNotSupportedError=exports.IntrinsicGasTooLowError=exports.IntrinsicGasTooHighError=exports.InsufficientFundsError=exports.NonceMaxValueError=exports.NonceTooLowError=exports.NonceTooHighError=exports.FeeCapTooLowError=exports.FeeCapTooHighError=exports.ExecutionRevertedError=void 0;const formatGwei_js_1=require("../utils/unit/formatGwei.js"),base_js_1=require("./base.js");class ExecutionRevertedError extends base_js_1.BaseError{constructor({cause:cause,message:message}={}){const reason=message?.replace("execution reverted: ","")?.replace("execution reverted","");super(`Execution reverted ${reason?`with reason: ${reason}`:"for an unknown reason"}.`,{cause:cause}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"ExecutionRevertedError"})}}Object.defineProperty(ExecutionRevertedError,"code",{enumerable:!0,configurable:!0,writable:!0,value:3}),Object.defineProperty(ExecutionRevertedError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/execution reverted/}),exports.ExecutionRevertedError=ExecutionRevertedError;class FeeCapTooHighError extends base_js_1.BaseError{constructor({cause:cause,maxFeePerGas:maxFeePerGas}={}){super(`The fee cap (\`maxFeePerGas\`${maxFeePerGas?` = ${(0,formatGwei_js_1.formatGwei)(maxFeePerGas)} gwei`:""}) cannot be higher than the maximum allowed value (2^256-1).`,{cause:cause}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"FeeCapTooHigh"})}}Object.defineProperty(FeeCapTooHighError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/max fee per gas higher than 2\^256-1|fee cap higher than 2\^256-1/}),exports.FeeCapTooHighError=FeeCapTooHighError;class FeeCapTooLowError extends base_js_1.BaseError{constructor({cause:cause,maxFeePerGas:maxFeePerGas}={}){super(`The fee cap (\`maxFeePerGas\`${maxFeePerGas?` = ${(0,formatGwei_js_1.formatGwei)(maxFeePerGas)}`:""} gwei) cannot be lower than the block base fee.`,{cause:cause}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"FeeCapTooLow"})}}Object.defineProperty(FeeCapTooLowError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/}),exports.FeeCapTooLowError=FeeCapTooLowError;class NonceTooHighError extends base_js_1.BaseError{constructor({cause:cause,nonce:nonce}={}){super(`Nonce provided for the transaction ${nonce?`(${nonce}) `:""}is higher than the next one expected.`,{cause:cause}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"NonceTooHighError"})}}Object.defineProperty(NonceTooHighError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/nonce too high/}),exports.NonceTooHighError=NonceTooHighError;class NonceTooLowError extends base_js_1.BaseError{constructor({cause:cause,nonce:nonce}={}){super([`Nonce provided for the transaction ${nonce?`(${nonce}) `:""}is lower than the current nonce of the account.`,"Try increasing the nonce or find the latest nonce with `getTransactionCount`."].join("\n"),{cause:cause}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"NonceTooLowError"})}}Object.defineProperty(NonceTooLowError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/nonce too low|transaction already imported|already known/}),exports.NonceTooLowError=NonceTooLowError;class NonceMaxValueError extends base_js_1.BaseError{constructor({cause:cause,nonce:nonce}={}){super(`Nonce provided for the transaction ${nonce?`(${nonce}) `:""}exceeds the maximum allowed nonce.`,{cause:cause}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"NonceMaxValueError"})}}Object.defineProperty(NonceMaxValueError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/nonce has max value/}),exports.NonceMaxValueError=NonceMaxValueError;class InsufficientFundsError extends base_js_1.BaseError{constructor({cause:cause}={}){super(["The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account."].join("\n"),{cause:cause,metaMessages:["This error could arise when the account does not have enough funds to:"," - pay for the total gas fee,"," - pay for the value to send."," ","The cost of the transaction is calculated as `gas * gas fee + value`, where:"," - `gas` is the amount of gas needed for transaction to execute,"," - `gas fee` is the gas fee,"," - `value` is the amount of ether to send to the recipient."]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"InsufficientFundsError"})}}Object.defineProperty(InsufficientFundsError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/insufficient funds/}),exports.InsufficientFundsError=InsufficientFundsError;class IntrinsicGasTooHighError extends base_js_1.BaseError{constructor({cause:cause,gas:gas}={}){super(`The amount of gas ${gas?`(${gas}) `:""}provided for the transaction exceeds the limit allowed for the block.`,{cause:cause}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"IntrinsicGasTooHighError"})}}Object.defineProperty(IntrinsicGasTooHighError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/intrinsic gas too high|gas limit reached/}),exports.IntrinsicGasTooHighError=IntrinsicGasTooHighError;class IntrinsicGasTooLowError extends base_js_1.BaseError{constructor({cause:cause,gas:gas}={}){super(`The amount of gas ${gas?`(${gas}) `:""}provided for the transaction is too low.`,{cause:cause}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"IntrinsicGasTooLowError"})}}Object.defineProperty(IntrinsicGasTooLowError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/intrinsic gas too low/}),exports.IntrinsicGasTooLowError=IntrinsicGasTooLowError;class TransactionTypeNotSupportedError extends base_js_1.BaseError{constructor({cause:cause}){super("The transaction type is not supported for this chain.",{cause:cause}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"TransactionTypeNotSupportedError"})}}Object.defineProperty(TransactionTypeNotSupportedError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/transaction type not valid/}),exports.TransactionTypeNotSupportedError=TransactionTypeNotSupportedError;class TipAboveFeeCapError extends base_js_1.BaseError{constructor({cause:cause,maxPriorityFeePerGas:maxPriorityFeePerGas,maxFeePerGas:maxFeePerGas}={}){super([`The provided tip (\`maxPriorityFeePerGas\`${maxPriorityFeePerGas?` = ${(0,formatGwei_js_1.formatGwei)(maxPriorityFeePerGas)} gwei`:""}) cannot be higher than the fee cap (\`maxFeePerGas\`${maxFeePerGas?` = ${(0,formatGwei_js_1.formatGwei)(maxFeePerGas)} gwei`:""}).`].join("\n"),{cause:cause}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"TipAboveFeeCapError"})}}Object.defineProperty(TipAboveFeeCapError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/max priority fee per gas higher than max fee per gas|tip higher than fee cap/}),exports.TipAboveFeeCapError=TipAboveFeeCapError;class UnknownNodeError extends base_js_1.BaseError{constructor({cause:cause}){super(`An error occurred while executing: ${cause?.shortMessage}`,{cause:cause}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"UnknownNodeError"})}}exports.UnknownNodeError=UnknownNodeError;
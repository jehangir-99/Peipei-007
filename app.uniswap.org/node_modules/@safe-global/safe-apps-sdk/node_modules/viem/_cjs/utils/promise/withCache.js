"use strict";function getCache(cacheKey){const buildCache=(cacheKey,cache)=>({clear:()=>cache.delete(cacheKey),get:()=>cache.get(cacheKey),set:data=>cache.set(cacheKey,data)}),promise=buildCache(cacheKey,exports.promiseCache),response=buildCache(cacheKey,exports.responseCache);return{clear:()=>{promise.clear(),response.clear()},promise:promise,response:response}}async function withCache(fn,{cacheKey:cacheKey,cacheTime:cacheTime=1/0}){const cache=getCache(cacheKey),response=cache.response.get();if(response&&cacheTime>0){if((new Date).getTime()-response.created.getTime()<cacheTime)return response.data}let promise=cache.promise.get();promise||(promise=fn(),cache.promise.set(promise));try{const data=await promise;return cache.response.set({created:new Date,data:data}),data}finally{cache.promise.clear()}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.withCache=exports.getCache=exports.responseCache=exports.promiseCache=void 0,exports.promiseCache=new Map,exports.responseCache=new Map,exports.getCache=getCache,exports.withCache=withCache;
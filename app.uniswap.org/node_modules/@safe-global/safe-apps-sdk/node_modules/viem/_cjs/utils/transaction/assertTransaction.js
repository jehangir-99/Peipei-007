"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.assertTransactionLegacy=exports.assertTransactionEIP2930=exports.assertTransactionEIP1559=void 0;const address_js_1=require("../../errors/address.js"),base_js_1=require("../../errors/base.js"),chain_js_1=require("../../errors/chain.js"),node_js_1=require("../../errors/node.js"),isAddress_js_1=require("../address/isAddress.js");function assertTransactionEIP1559(transaction){const{chainId:chainId,maxPriorityFeePerGas:maxPriorityFeePerGas,gasPrice:gasPrice,maxFeePerGas:maxFeePerGas,to:to}=transaction;if(chainId<=0)throw new chain_js_1.InvalidChainIdError({chainId:chainId});if(to&&!(0,isAddress_js_1.isAddress)(to))throw new address_js_1.InvalidAddressError({address:to});if(gasPrice)throw new base_js_1.BaseError("`gasPrice` is not a valid EIP-1559 Transaction attribute.");if(maxFeePerGas&&maxFeePerGas>2n**256n-1n)throw new node_js_1.FeeCapTooHighError({maxFeePerGas:maxFeePerGas});if(maxPriorityFeePerGas&&maxFeePerGas&&maxPriorityFeePerGas>maxFeePerGas)throw new node_js_1.TipAboveFeeCapError({maxFeePerGas:maxFeePerGas,maxPriorityFeePerGas:maxPriorityFeePerGas})}function assertTransactionEIP2930(transaction){const{chainId:chainId,maxPriorityFeePerGas:maxPriorityFeePerGas,gasPrice:gasPrice,maxFeePerGas:maxFeePerGas,to:to}=transaction;if(chainId<=0)throw new chain_js_1.InvalidChainIdError({chainId:chainId});if(to&&!(0,isAddress_js_1.isAddress)(to))throw new address_js_1.InvalidAddressError({address:to});if(maxPriorityFeePerGas||maxFeePerGas)throw new base_js_1.BaseError("`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.");if(gasPrice&&gasPrice>2n**256n-1n)throw new node_js_1.FeeCapTooHighError({maxFeePerGas:gasPrice})}function assertTransactionLegacy(transaction){const{chainId:chainId,maxPriorityFeePerGas:maxPriorityFeePerGas,gasPrice:gasPrice,maxFeePerGas:maxFeePerGas,to:to,accessList:accessList}=transaction;if(to&&!(0,isAddress_js_1.isAddress)(to))throw new address_js_1.InvalidAddressError({address:to});if(void 0!==chainId&&chainId<=0)throw new chain_js_1.InvalidChainIdError({chainId:chainId});if(maxPriorityFeePerGas||maxFeePerGas)throw new base_js_1.BaseError("`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.");if(gasPrice&&gasPrice>2n**256n-1n)throw new node_js_1.FeeCapTooHighError({maxFeePerGas:gasPrice});if(accessList)throw new base_js_1.BaseError("`accessList` is not a valid Legacy Transaction attribute.")}exports.assertTransactionEIP1559=assertTransactionEIP1559,exports.assertTransactionEIP2930=assertTransactionEIP2930,exports.assertTransactionLegacy=assertTransactionLegacy;
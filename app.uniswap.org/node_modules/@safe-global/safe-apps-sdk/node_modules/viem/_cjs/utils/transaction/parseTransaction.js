"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.parseAccessList=exports.toTransactionArray=exports.parseTransaction=void 0;const address_js_1=require("../../errors/address.js"),transaction_js_1=require("../../errors/transaction.js"),isAddress_js_1=require("../address/isAddress.js"),isHex_js_1=require("../data/isHex.js"),pad_js_1=require("../data/pad.js"),trim_js_1=require("../data/trim.js"),fromHex_js_1=require("../encoding/fromHex.js"),fromRlp_js_1=require("../encoding/fromRlp.js"),isHash_js_1=require("../hash/isHash.js"),assertTransaction_js_1=require("./assertTransaction.js"),getSerializedTransactionType_js_1=require("./getSerializedTransactionType.js");function parseTransaction(serializedTransaction){const type=(0,getSerializedTransactionType_js_1.getSerializedTransactionType)(serializedTransaction);return"eip1559"===type?parseTransactionEIP1559(serializedTransaction):"eip2930"===type?parseTransactionEIP2930(serializedTransaction):parseTransactionLegacy(serializedTransaction)}function parseTransactionEIP1559(serializedTransaction){const transactionArray=toTransactionArray(serializedTransaction),[chainId,nonce,maxPriorityFeePerGas,maxFeePerGas,gas,to,value,data,accessList,v,r,s]=transactionArray;if(9!==transactionArray.length&&12!==transactionArray.length)throw new transaction_js_1.InvalidSerializedTransactionError({attributes:{chainId:chainId,nonce:nonce,maxPriorityFeePerGas:maxPriorityFeePerGas,maxFeePerGas:maxFeePerGas,gas:gas,to:to,value:value,data:data,accessList:accessList,...transactionArray.length>9?{v:v,r:r,s:s}:{}},serializedTransaction:serializedTransaction,type:"eip1559"});const transaction={chainId:(0,fromHex_js_1.hexToNumber)(chainId),type:"eip1559"};(0,isHex_js_1.isHex)(to)&&"0x"!==to&&(transaction.to=to),(0,isHex_js_1.isHex)(gas)&&"0x"!==gas&&(transaction.gas=(0,fromHex_js_1.hexToBigInt)(gas)),(0,isHex_js_1.isHex)(data)&&"0x"!==data&&(transaction.data=data),(0,isHex_js_1.isHex)(nonce)&&"0x"!==nonce&&(transaction.nonce=(0,fromHex_js_1.hexToNumber)(nonce)),(0,isHex_js_1.isHex)(value)&&"0x"!==value&&(transaction.value=(0,fromHex_js_1.hexToBigInt)(value)),(0,isHex_js_1.isHex)(maxFeePerGas)&&"0x"!==maxFeePerGas&&(transaction.maxFeePerGas=(0,fromHex_js_1.hexToBigInt)(maxFeePerGas)),(0,isHex_js_1.isHex)(maxPriorityFeePerGas)&&"0x"!==maxPriorityFeePerGas&&(transaction.maxPriorityFeePerGas=(0,fromHex_js_1.hexToBigInt)(maxPriorityFeePerGas)),0!==accessList.length&&"0x"!==accessList&&(transaction.accessList=parseAccessList(accessList)),(0,assertTransaction_js_1.assertTransactionEIP1559)(transaction);return{...12===transactionArray.length?parseEIP155Signature(transactionArray):void 0,...transaction}}function parseTransactionEIP2930(serializedTransaction){const transactionArray=toTransactionArray(serializedTransaction),[chainId,nonce,gasPrice,gas,to,value,data,accessList,v,r,s]=transactionArray;if(8!==transactionArray.length&&11!==transactionArray.length)throw new transaction_js_1.InvalidSerializedTransactionError({attributes:{chainId:chainId,nonce:nonce,gasPrice:gasPrice,gas:gas,to:to,value:value,data:data,accessList:accessList,...transactionArray.length>8?{v:v,r:r,s:s}:{}},serializedTransaction:serializedTransaction,type:"eip2930"});const transaction={chainId:(0,fromHex_js_1.hexToNumber)(chainId),type:"eip2930"};(0,isHex_js_1.isHex)(to)&&"0x"!==to&&(transaction.to=to),(0,isHex_js_1.isHex)(gas)&&"0x"!==gas&&(transaction.gas=(0,fromHex_js_1.hexToBigInt)(gas)),(0,isHex_js_1.isHex)(data)&&"0x"!==data&&(transaction.data=data),(0,isHex_js_1.isHex)(nonce)&&"0x"!==nonce&&(transaction.nonce=(0,fromHex_js_1.hexToNumber)(nonce)),(0,isHex_js_1.isHex)(value)&&"0x"!==value&&(transaction.value=(0,fromHex_js_1.hexToBigInt)(value)),(0,isHex_js_1.isHex)(gasPrice)&&"0x"!==gasPrice&&(transaction.gasPrice=(0,fromHex_js_1.hexToBigInt)(gasPrice)),0!==accessList.length&&"0x"!==accessList&&(transaction.accessList=parseAccessList(accessList)),(0,assertTransaction_js_1.assertTransactionEIP2930)(transaction);return{...11===transactionArray.length?parseEIP155Signature(transactionArray):void 0,...transaction}}function parseTransactionLegacy(serializedTransaction){const transactionArray=(0,fromRlp_js_1.fromRlp)(serializedTransaction,"hex"),[nonce,gasPrice,gas,to,value,data,chainIdOrV_,r,s]=transactionArray;if(6!==transactionArray.length&&9!==transactionArray.length)throw new transaction_js_1.InvalidSerializedTransactionError({attributes:{nonce:nonce,gasPrice:gasPrice,gas:gas,to:to,value:value,data:data,...transactionArray.length>6?{v:chainIdOrV_,r:r,s:s}:{}},serializedTransaction:serializedTransaction,type:"legacy"});const transaction={type:"legacy"};if((0,isHex_js_1.isHex)(to)&&"0x"!==to&&(transaction.to=to),(0,isHex_js_1.isHex)(gas)&&"0x"!==gas&&(transaction.gas=(0,fromHex_js_1.hexToBigInt)(gas)),(0,isHex_js_1.isHex)(data)&&"0x"!==data&&(transaction.data=data),(0,isHex_js_1.isHex)(nonce)&&"0x"!==nonce&&(transaction.nonce=(0,fromHex_js_1.hexToNumber)(nonce)),(0,isHex_js_1.isHex)(value)&&"0x"!==value&&(transaction.value=(0,fromHex_js_1.hexToBigInt)(value)),(0,isHex_js_1.isHex)(gasPrice)&&"0x"!==gasPrice&&(transaction.gasPrice=(0,fromHex_js_1.hexToBigInt)(gasPrice)),(0,assertTransaction_js_1.assertTransactionLegacy)(transaction),6===transactionArray.length)return transaction;const chainIdOrV=(0,isHex_js_1.isHex)(chainIdOrV_)&&"0x"!==chainIdOrV_?(0,fromHex_js_1.hexToBigInt)(chainIdOrV_):0n;if("0x"===s&&"0x"===r)return chainIdOrV>0&&(transaction.chainId=Number(chainIdOrV)),transaction;const v=chainIdOrV,chainId=Number((v-35n)/2n);if(chainId>0)transaction.chainId=chainId;else if(27n!==v&&28n!==v)throw new transaction_js_1.InvalidLegacyVError({v:v});return transaction.v=v,transaction.s=s,transaction.r=r,transaction}function toTransactionArray(serializedTransaction){return(0,fromRlp_js_1.fromRlp)(`0x${serializedTransaction.slice(4)}`,"hex")}function parseAccessList(accessList_){const accessList=[];for(let i=0;i<accessList_.length;i++){const[address,storageKeys]=accessList_[i];if(!(0,isAddress_js_1.isAddress)(address))throw new address_js_1.InvalidAddressError({address:address});accessList.push({address:address,storageKeys:storageKeys.map((key=>(0,isHash_js_1.isHash)(key)?key:(0,trim_js_1.trim)(key)))})}return accessList}function parseEIP155Signature(transactionArray){const signature=transactionArray.slice(-3),v="0x"===signature[0]||0n===(0,fromHex_js_1.hexToBigInt)(signature[0])?27n:28n;return{r:(0,pad_js_1.padHex)(signature[1],{size:32}),s:(0,pad_js_1.padHex)(signature[2],{size:32}),v:v,yParity:27n===v?0:1}}exports.parseTransaction=parseTransaction,exports.toTransactionArray=toTransactionArray,exports.parseAccessList=parseAccessList;
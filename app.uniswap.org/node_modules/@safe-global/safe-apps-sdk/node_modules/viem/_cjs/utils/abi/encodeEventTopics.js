"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.encodeEventTopics=void 0;const abi_js_1=require("../../errors/abi.js"),log_js_1=require("../../errors/log.js"),toBytes_js_1=require("../encoding/toBytes.js"),getEventSelector_js_1=require("../hash/getEventSelector.js"),keccak256_js_1=require("../hash/keccak256.js"),encodeAbiParameters_js_1=require("./encodeAbiParameters.js"),formatAbiItem_js_1=require("./formatAbiItem.js"),getAbiItem_js_1=require("./getAbiItem.js");function encodeEventTopics({abi:abi,eventName:eventName,args:args}){let abiItem=abi[0];if(eventName&&(abiItem=(0,getAbiItem_js_1.getAbiItem)({abi:abi,args:args,name:eventName}),!abiItem))throw new abi_js_1.AbiEventNotFoundError(eventName,{docsPath:"/docs/contract/encodeEventTopics"});if("event"!==abiItem.type)throw new abi_js_1.AbiEventNotFoundError(void 0,{docsPath:"/docs/contract/encodeEventTopics"});const definition=(0,formatAbiItem_js_1.formatAbiItem)(abiItem),signature=(0,getEventSelector_js_1.getEventSelector)(definition);let topics=[];if(args&&"inputs"in abiItem){const indexedInputs=abiItem.inputs?.filter((param=>"indexed"in param&&param.indexed)),args_=Array.isArray(args)?args:Object.values(args).length>0?indexedInputs?.map((x=>args[x.name]))??[]:[];args_.length>0&&(topics=indexedInputs?.map(((param,i)=>Array.isArray(args_[i])?args_[i].map(((_,j)=>encodeArg({param:param,value:args_[i][j]}))):args_[i]?encodeArg({param:param,value:args_[i]}):null))??[])}return[signature,...topics]}function encodeArg({param:param,value:value}){if("string"===param.type||"bytes"===param.type)return(0,keccak256_js_1.keccak256)((0,toBytes_js_1.toBytes)(value));if("tuple"===param.type||param.type.match(/^(.*)\[(\d+)?\]$/))throw new log_js_1.FilterTypeNotSupportedError(param.type);return(0,encodeAbiParameters_js_1.encodeAbiParameters)([param],[value])}exports.encodeEventTopics=encodeEventTopics;
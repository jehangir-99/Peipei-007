"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.decodeEventLog=void 0;const abi_js_1=require("../../errors/abi.js"),getEventSelector_js_1=require("../hash/getEventSelector.js"),decodeAbiParameters_js_1=require("./decodeAbiParameters.js"),formatAbiItem_js_1=require("./formatAbiItem.js"),docsPath="/docs/contract/decodeEventLog";function decodeEventLog({abi:abi,data:data,strict:strict_,topics:topics}){const strict=strict_??!0,[signature,...argTopics]=topics;if(!signature)throw new abi_js_1.AbiEventSignatureEmptyTopicsError({docsPath:docsPath});const abiItem=abi.find((x=>"event"===x.type&&signature===(0,getEventSelector_js_1.getEventSelector)((0,formatAbiItem_js_1.formatAbiItem)(x))));if(!abiItem||!("name"in abiItem)||"event"!==abiItem.type)throw new abi_js_1.AbiEventSignatureNotFoundError(signature,{docsPath:docsPath});const{name:name,inputs:inputs}=abiItem,isUnnamed=inputs?.some((x=>!("name"in x&&x.name)));let args=isUnnamed?[]:{};const indexedInputs=inputs.filter((x=>"indexed"in x&&x.indexed));for(let i=0;i<indexedInputs.length;i++){const param=indexedInputs[i],topic=argTopics[i];if(!topic)throw new abi_js_1.DecodeLogTopicsMismatch({abiItem:abiItem,param:param});args[param.name||i]=decodeTopic({param:param,value:topic})}const nonIndexedInputs=inputs.filter((x=>!("indexed"in x&&x.indexed)));if(nonIndexedInputs.length>0)if(data&&"0x"!==data)try{const decodedData=(0,decodeAbiParameters_js_1.decodeAbiParameters)(nonIndexedInputs,data);if(decodedData)if(isUnnamed)args=[...args,...decodedData];else for(let i=0;i<nonIndexedInputs.length;i++)args[nonIndexedInputs[i].name]=decodedData[i]}catch(err){if(strict){if(err instanceof abi_js_1.AbiDecodingDataSizeTooSmallError)throw new abi_js_1.DecodeLogDataMismatch({abiItem:abiItem,data:err.data,params:err.params,size:err.size});throw err}}else if(strict)throw new abi_js_1.DecodeLogDataMismatch({abiItem:abiItem,data:"0x",params:nonIndexedInputs,size:0});return{eventName:name,args:Object.values(args).length>0?args:void 0}}function decodeTopic({param:param,value:value}){if("string"===param.type||"bytes"===param.type||"tuple"===param.type||param.type.match(/^(.*)\[(\d+)?\]$/))return value;return((0,decodeAbiParameters_js_1.decodeAbiParameters)([param],value)||[])[0]}exports.decodeEventLog=decodeEventLog;
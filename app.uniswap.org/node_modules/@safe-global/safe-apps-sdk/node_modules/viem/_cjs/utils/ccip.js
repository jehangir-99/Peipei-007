"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ccipFetch=exports.offchainLookup=exports.offchainLookupAbiItem=exports.offchainLookupSignature=void 0;const call_js_1=require("../actions/public/call.js"),ccip_js_1=require("../errors/ccip.js"),request_js_1=require("../errors/request.js"),decodeErrorResult_js_1=require("./abi/decodeErrorResult.js"),encodeAbiParameters_js_1=require("./abi/encodeAbiParameters.js"),isAddressEqual_js_1=require("./address/isAddressEqual.js"),concat_js_1=require("./data/concat.js"),isHex_js_1=require("./data/isHex.js"),stringify_js_1=require("./stringify.js");async function offchainLookup(client,{blockNumber:blockNumber,blockTag:blockTag,data:data,to:to}){const{args:args}=(0,decodeErrorResult_js_1.decodeErrorResult)({data:data,abi:[exports.offchainLookupAbiItem]}),[sender,urls,callData,callbackSelector,extraData]=args;try{if(!(0,isAddressEqual_js_1.isAddressEqual)(to,sender))throw new ccip_js_1.OffchainLookupSenderMismatchError({sender:sender,to:to});const result=await ccipFetch({data:callData,sender:sender,urls:urls}),{data:data_}=await(0,call_js_1.call)(client,{blockNumber:blockNumber,blockTag:blockTag,data:(0,concat_js_1.concat)([callbackSelector,(0,encodeAbiParameters_js_1.encodeAbiParameters)([{type:"bytes"},{type:"bytes"}],[result,extraData])]),to:to});return data_}catch(err){throw new ccip_js_1.OffchainLookupError({callbackSelector:callbackSelector,cause:err,data:data,extraData:extraData,sender:sender,urls:urls})}}async function ccipFetch({data:data,sender:sender,urls:urls}){let error=new Error("An unknown error occurred.");for(let i=0;i<urls.length;i++){const url=urls[i],method=url.includes("{data}")?"GET":"POST",body="POST"===method?{data:data,sender:sender}:void 0;try{const response=await fetch(url.replace("{sender}",sender).replace("{data}",data),{body:JSON.stringify(body),method:method});let result;if(result=response.headers.get("Content-Type")?.startsWith("application/json")?(await response.json()).data:await response.text(),!response.ok){error=new request_js_1.HttpRequestError({body:body,details:result?.error?(0,stringify_js_1.stringify)(result.error):response.statusText,headers:response.headers,status:response.status,url:url});continue}if(!(0,isHex_js_1.isHex)(result)){error=new ccip_js_1.OffchainLookupResponseMalformedError({result:result,url:url});continue}return result}catch(err){error=new request_js_1.HttpRequestError({body:body,details:err.message,url:url})}}throw error}exports.offchainLookupSignature="0x556f1830",exports.offchainLookupAbiItem={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]},exports.offchainLookup=offchainLookup,exports.ccipFetch=ccipFetch;
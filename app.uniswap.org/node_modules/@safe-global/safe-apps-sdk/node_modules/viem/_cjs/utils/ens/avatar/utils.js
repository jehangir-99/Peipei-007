"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getNftTokenUri=exports.parseNftUri=exports.parseAvatarUri=exports.getMetadataAvatarUri=exports.getJsonImage=exports.resolveAvatarUri=exports.getGateway=exports.isImageUri=void 0;const readContract_js_1=require("../../../actions/public/readContract.js"),ens_js_1=require("../../../errors/ens.js"),networkRegex=/(?<protocol>https?:\/\/[^\/]*|ipfs:\/|ipns:\/|ar:\/)?(?<root>\/)?(?<subpath>ipfs\/|ipns\/)?(?<target>[\w\-.]+)(?<subtarget>\/.*)?/,ipfsHashRegex=/^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\/(?<target>[\w\-.]+))?(?<subtarget>\/.*)?$/,base64Regex=/^data:([a-zA-Z\-/+]*);base64,([^"].*)/,dataURIRegex=/^data:([a-zA-Z\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/;async function isImageUri(uri){try{const res=await fetch(uri,{method:"HEAD"});if(200===res.status){const contentType=res.headers.get("content-type");return contentType?.startsWith("image/")}return!1}catch(error){return("object"!=typeof error||void 0===error.response)&&(!!globalThis.hasOwnProperty("Image")&&new Promise((resolve=>{const img=new Image;img.onload=()=>{resolve(!0)},img.onerror=()=>{resolve(!1)},img.src=uri})))}}function getGateway(custom,defaultGateway){return custom?custom.endsWith("/")?custom.slice(0,-1):custom:defaultGateway}function resolveAvatarUri({uri:uri,gatewayUrls:gatewayUrls}){const isEncoded=base64Regex.test(uri);if(isEncoded)return{uri:uri,isOnChain:!0,isEncoded:isEncoded};const ipfsGateway=getGateway(gatewayUrls?.ipfs,"https://ipfs.io"),arweaveGateway=getGateway(gatewayUrls?.arweave,"https://arweave.net"),networkRegexMatch=uri.match(networkRegex),{protocol:protocol,subpath:subpath,target:target,subtarget:subtarget=""}=networkRegexMatch?.groups||{},isIPNS="ipns:/"===protocol||"ipns/"===subpath,isIPFS="ipfs:/"===protocol||"ipfs/"===subpath||ipfsHashRegex.test(uri);if(uri.startsWith("http")&&!isIPNS&&!isIPFS){let replacedUri=uri;return gatewayUrls?.arweave&&(replacedUri=uri.replace(/https:\/\/arweave.net/g,gatewayUrls?.arweave)),{uri:replacedUri,isOnChain:!1,isEncoded:!1}}if((isIPNS||isIPFS)&&target)return{uri:`${ipfsGateway}/${isIPNS?"ipns":"ipfs"}/${target}${subtarget}`,isOnChain:!1,isEncoded:!1};if("ar:/"===protocol&&target)return{uri:`${arweaveGateway}/${target}${subtarget||""}`,isOnChain:!1,isEncoded:!1};let parsedUri=uri.replace(dataURIRegex,"");if(parsedUri.startsWith("<svg")&&(parsedUri=`data:image/svg+xml;base64,${btoa(parsedUri)}`),parsedUri.startsWith("data:")||parsedUri.startsWith("{"))return{uri:parsedUri,isOnChain:!0,isEncoded:!1};throw new ens_js_1.EnsAvatarUriResolutionError({uri:uri})}function getJsonImage(data){if("object"!=typeof data||!("image"in data)&&!("image_url"in data)&&!("image_data"in data))throw new ens_js_1.EnsAvatarInvalidMetadataError({data:data});return data.image||data.image_url||data.image_data}async function getMetadataAvatarUri({gatewayUrls:gatewayUrls,uri:uri}){try{const res=await fetch(uri).then((res=>res.json()));return await parseAvatarUri({gatewayUrls:gatewayUrls,uri:getJsonImage(res)})}catch{throw new ens_js_1.EnsAvatarUriResolutionError({uri:uri})}}async function parseAvatarUri({gatewayUrls:gatewayUrls,uri:uri}){const{uri:resolvedURI,isOnChain:isOnChain}=resolveAvatarUri({uri:uri,gatewayUrls:gatewayUrls});if(isOnChain)return resolvedURI;if(await isImageUri(resolvedURI))return resolvedURI;throw new ens_js_1.EnsAvatarUriResolutionError({uri:uri})}function parseNftUri(uri_){let uri=uri_;uri.startsWith("did:nft:")&&(uri=uri.replace("did:nft:","").replace(/_/g,"/"));const[reference,asset_namespace,tokenID]=uri.split("/"),[eip_namespace,chainID]=reference.split(":"),[erc_namespace,contractAddress]=asset_namespace.split(":");if(!eip_namespace||"eip155"!==eip_namespace.toLowerCase())throw new ens_js_1.EnsAvatarInvalidNftUriError({reason:"Only EIP-155 supported"});if(!chainID)throw new ens_js_1.EnsAvatarInvalidNftUriError({reason:"Chain ID not found"});if(!contractAddress)throw new ens_js_1.EnsAvatarInvalidNftUriError({reason:"Contract address not found"});if(!tokenID)throw new ens_js_1.EnsAvatarInvalidNftUriError({reason:"Token ID not found"});if(!erc_namespace)throw new ens_js_1.EnsAvatarInvalidNftUriError({reason:"ERC namespace not found"});return{chainID:parseInt(chainID),namespace:erc_namespace.toLowerCase(),contractAddress:contractAddress,tokenID:tokenID}}async function getNftTokenUri(client,{nft:nft}){if("erc721"===nft.namespace)return(0,readContract_js_1.readContract)(client,{address:nft.contractAddress,abi:[{name:"tokenURI",type:"function",stateMutability:"view",inputs:[{name:"tokenId",type:"uint256"}],outputs:[{name:"",type:"string"}]}],functionName:"tokenURI",args:[BigInt(nft.tokenID)]});if("erc1155"===nft.namespace)return(0,readContract_js_1.readContract)(client,{address:nft.contractAddress,abi:[{name:"uri",type:"function",stateMutability:"view",inputs:[{name:"_id",type:"uint256"}],outputs:[{name:"",type:"string"}]}],functionName:"uri",args:[BigInt(nft.tokenID)]});throw new ens_js_1.EnsAvatarUnsupportedNamespaceError({namespace:nft.namespace})}exports.isImageUri=isImageUri,exports.getGateway=getGateway,exports.resolveAvatarUri=resolveAvatarUri,exports.getJsonImage=getJsonImage,exports.getMetadataAvatarUri=getMetadataAvatarUri,exports.parseAvatarUri=parseAvatarUri,exports.parseNftUri=parseNftUri,exports.getNftTokenUri=getNftTokenUri;
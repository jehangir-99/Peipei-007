"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getEventParameters=exports.getFunctionParameters=exports.getContract=void 0;const getAction_js_1=require("../utils/getAction.js"),createContractEventFilter_js_1=require("./public/createContractEventFilter.js"),estimateContractGas_js_1=require("./public/estimateContractGas.js"),getContractEvents_js_1=require("./public/getContractEvents.js"),readContract_js_1=require("./public/readContract.js"),simulateContract_js_1=require("./public/simulateContract.js"),watchContractEvent_js_1=require("./public/watchContractEvent.js"),writeContract_js_1=require("./wallet/writeContract.js");function getContract({abi:abi,address:address,publicClient:publicClient,walletClient:walletClient}){const hasPublicClient=null!=publicClient,hasWalletClient=null!=walletClient,contract={};let hasReadFunction=!1,hasWriteFunction=!1,hasEvent=!1;for(const item of abi)if("function"===item.type?"view"===item.stateMutability||"pure"===item.stateMutability?hasReadFunction=!0:hasWriteFunction=!0:"event"===item.type&&(hasEvent=!0),hasReadFunction&&hasWriteFunction&&hasEvent)break;return hasPublicClient&&(hasReadFunction&&(contract.read=new Proxy({},{get:(_,functionName)=>(...parameters)=>{const{args:args,options:options}=getFunctionParameters(parameters);return(0,getAction_js_1.getAction)(publicClient,readContract_js_1.readContract,"readContract")({abi:abi,address:address,functionName:functionName,args:args,...options})}})),hasWriteFunction&&(contract.simulate=new Proxy({},{get:(_,functionName)=>(...parameters)=>{const{args:args,options:options}=getFunctionParameters(parameters);return(0,getAction_js_1.getAction)(publicClient,simulateContract_js_1.simulateContract,"simulateContract")({abi:abi,address:address,functionName:functionName,args:args,...options})}})),hasEvent&&(contract.createEventFilter=new Proxy({},{get:(_,eventName)=>(...parameters)=>{const abiEvent=abi.find((x=>"event"===x.type&&x.name===eventName)),{args:args,options:options}=getEventParameters(parameters,abiEvent);return(0,getAction_js_1.getAction)(publicClient,createContractEventFilter_js_1.createContractEventFilter,"createContractEventFilter")({abi:abi,address:address,eventName:eventName,args:args,...options})}}),contract.getEvents=new Proxy({},{get:(_,eventName)=>(...parameters)=>{const abiEvent=abi.find((x=>"event"===x.type&&x.name===eventName)),{args:args,options:options}=getEventParameters(parameters,abiEvent);return(0,getAction_js_1.getAction)(publicClient,getContractEvents_js_1.getContractEvents,"getContractEvents")({abi:abi,address:address,eventName:eventName,args:args,...options})}}),contract.watchEvent=new Proxy({},{get:(_,eventName)=>(...parameters)=>{const abiEvent=abi.find((x=>"event"===x.type&&x.name===eventName)),{args:args,options:options}=getEventParameters(parameters,abiEvent);return(0,getAction_js_1.getAction)(publicClient,watchContractEvent_js_1.watchContractEvent,"watchContractEvent")({abi:abi,address:address,eventName:eventName,args:args,...options})}}))),hasWalletClient&&hasWriteFunction&&(contract.write=new Proxy({},{get:(_,functionName)=>(...parameters)=>{const{args:args,options:options}=getFunctionParameters(parameters);return(0,getAction_js_1.getAction)(walletClient,writeContract_js_1.writeContract,"writeContract")({abi:abi,address:address,functionName:functionName,args:args,...options})}})),(hasPublicClient||hasWalletClient)&&hasWriteFunction&&(contract.estimateGas=new Proxy({},{get:(_,functionName)=>(...parameters)=>{const{args:args,options:options}=getFunctionParameters(parameters),client=publicClient??walletClient;return(0,getAction_js_1.getAction)(client,estimateContractGas_js_1.estimateContractGas,"estimateContractGas")({abi:abi,address:address,functionName:functionName,args:args,...options,account:options.account??walletClient.account})}})),contract.address=address,contract.abi=abi,contract}function getFunctionParameters(values){const hasArgs=values.length&&Array.isArray(values[0]);return{args:hasArgs?values[0]:[],options:(hasArgs?values[1]:values[0])??{}}}function getEventParameters(values,abiEvent){let hasArgs=!1;Array.isArray(values[0])?hasArgs=!0:1===values.length?hasArgs=abiEvent.inputs.some((x=>x.indexed)):2===values.length&&(hasArgs=!0);return{args:hasArgs?values[0]:void 0,options:(hasArgs?values[1]:values[0])??{}}}exports.getContract=getContract,exports.getFunctionParameters=getFunctionParameters,exports.getEventParameters=getEventParameters;
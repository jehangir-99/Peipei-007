"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.createEventFilter=void 0;const encodeEventTopics_js_1=require("../../utils/abi/encodeEventTopics.js"),toHex_js_1=require("../../utils/encoding/toHex.js"),createFilterRequestScope_js_1=require("../../utils/filters/createFilterRequestScope.js");async function createEventFilter(client,{address:address,args:args,event:event,events:events_,fromBlock:fromBlock,strict:strict,toBlock:toBlock}={}){const events=events_??(event?[event]:void 0),getRequest=(0,createFilterRequestScope_js_1.createFilterRequestScope)(client,{method:"eth_newFilter"});let topics=[];events&&(topics=[events.flatMap((event=>(0,encodeEventTopics_js_1.encodeEventTopics)({abi:[event],eventName:event.name,args:args})))],event&&(topics=topics[0]));const id=await client.request({method:"eth_newFilter",params:[{address:address,fromBlock:"bigint"==typeof fromBlock?(0,toHex_js_1.numberToHex)(fromBlock):fromBlock,toBlock:"bigint"==typeof toBlock?(0,toHex_js_1.numberToHex)(toBlock):toBlock,...topics.length?{topics:topics}:{}}]});return{abi:events,args:args,eventName:event?event.name:void 0,fromBlock:fromBlock,id:id,request:getRequest(id),strict:strict,toBlock:toBlock,type:"event"}}exports.createEventFilter=createEventFilter;
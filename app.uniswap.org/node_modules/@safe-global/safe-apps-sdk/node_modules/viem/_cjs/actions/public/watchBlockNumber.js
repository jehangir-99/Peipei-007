"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.watchBlockNumber=void 0;const fromHex_js_1=require("../../utils/encoding/fromHex.js"),getAction_js_1=require("../../utils/getAction.js"),observe_js_1=require("../../utils/observe.js"),poll_js_1=require("../../utils/poll.js"),stringify_js_1=require("../../utils/stringify.js"),getBlockNumber_js_1=require("./getBlockNumber.js");function watchBlockNumber(client,{emitOnBegin:emitOnBegin=!1,emitMissed:emitMissed=!1,onBlockNumber:onBlockNumber,onError:onError,poll:poll_,pollingInterval:pollingInterval=client.pollingInterval}){let prevBlockNumber;return(void 0!==poll_?poll_:"webSocket"!==client.transport.type)?(()=>{const observerId=(0,stringify_js_1.stringify)(["watchBlockNumber",client.uid,emitOnBegin,emitMissed,pollingInterval]);return(0,observe_js_1.observe)(observerId,{onBlockNumber:onBlockNumber,onError:onError},(emit=>(0,poll_js_1.poll)((async()=>{try{const blockNumber=await(0,getAction_js_1.getAction)(client,getBlockNumber_js_1.getBlockNumber,"getBlockNumber")({cacheTime:0});if(prevBlockNumber){if(blockNumber===prevBlockNumber)return;if(blockNumber-prevBlockNumber>1&&emitMissed)for(let i=prevBlockNumber+1n;i<blockNumber;i++)emit.onBlockNumber(i,prevBlockNumber),prevBlockNumber=i}(!prevBlockNumber||blockNumber>prevBlockNumber)&&(emit.onBlockNumber(blockNumber,prevBlockNumber),prevBlockNumber=blockNumber)}catch(err){emit.onError?.(err)}}),{emitOnBegin:emitOnBegin,interval:pollingInterval})))})():(()=>{let active=!0,unsubscribe=()=>active=!1;return(async()=>{try{const{unsubscribe:unsubscribe_}=await client.transport.subscribe({params:["newHeads"],onData(data){if(!active)return;const blockNumber=(0,fromHex_js_1.hexToBigInt)(data.result?.number);onBlockNumber(blockNumber,prevBlockNumber),prevBlockNumber=blockNumber},onError(error){onError?.(error)}});unsubscribe=unsubscribe_,active||unsubscribe()}catch(err){onError?.(err)}})(),unsubscribe})()}exports.watchBlockNumber=watchBlockNumber;
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.watchContractEvent=void 0;const observe_js_1=require("../../utils/observe.js"),poll_js_1=require("../../utils/poll.js"),stringify_js_1=require("../../utils/stringify.js"),abi_js_1=require("../../errors/abi.js"),rpc_js_1=require("../../errors/rpc.js"),decodeEventLog_js_1=require("../../utils/abi/decodeEventLog.js"),encodeEventTopics_js_1=require("../../utils/abi/encodeEventTopics.js"),log_js_1=require("../../utils/formatters/log.js"),getAction_js_1=require("../../utils/getAction.js"),createContractEventFilter_js_1=require("./createContractEventFilter.js"),getBlockNumber_js_1=require("./getBlockNumber.js"),getContractEvents_js_1=require("./getContractEvents.js"),getFilterChanges_js_1=require("./getFilterChanges.js"),uninstallFilter_js_1=require("./uninstallFilter.js");function watchContractEvent(client,{abi:abi,address:address,args:args,batch:batch=!0,eventName:eventName,onError:onError,onLogs:onLogs,poll:poll_,pollingInterval:pollingInterval=client.pollingInterval,strict:strict_}){return(void 0!==poll_?poll_:"webSocket"!==client.transport.type)?(()=>{const observerId=(0,stringify_js_1.stringify)(["watchContractEvent",address,args,batch,client.uid,eventName,pollingInterval]),strict=strict_??!1;return(0,observe_js_1.observe)(observerId,{onLogs:onLogs,onError:onError},(emit=>{let previousBlockNumber,filter,initialized=!1;const unwatch=(0,poll_js_1.poll)((async()=>{if(initialized)try{let logs;if(filter)logs=await(0,getAction_js_1.getAction)(client,getFilterChanges_js_1.getFilterChanges,"getFilterChanges")({filter:filter});else{const blockNumber=await(0,getAction_js_1.getAction)(client,getBlockNumber_js_1.getBlockNumber,"getBlockNumber")({});logs=previousBlockNumber&&previousBlockNumber!==blockNumber?await(0,getAction_js_1.getAction)(client,getContractEvents_js_1.getContractEvents,"getContractEvents")({abi:abi,address:address,args:args,eventName:eventName,fromBlock:previousBlockNumber+1n,toBlock:blockNumber,strict:strict}):[],previousBlockNumber=blockNumber}if(0===logs.length)return;if(batch)emit.onLogs(logs);else for(const log of logs)emit.onLogs([log])}catch(err){filter&&err instanceof rpc_js_1.InvalidInputRpcError&&(initialized=!1),emit.onError?.(err)}else{try{filter=await(0,getAction_js_1.getAction)(client,createContractEventFilter_js_1.createContractEventFilter,"createContractEventFilter")({abi:abi,address:address,args:args,eventName:eventName,strict:strict})}catch{}initialized=!0}}),{emitOnBegin:!0,interval:pollingInterval});return async()=>{filter&&await(0,getAction_js_1.getAction)(client,uninstallFilter_js_1.uninstallFilter,"uninstallFilter")({filter:filter}),unwatch()}}))})():(()=>{let active=!0,unsubscribe=()=>active=!1;return(async()=>{try{const topics=eventName?(0,encodeEventTopics_js_1.encodeEventTopics)({abi:abi,eventName:eventName,args:args}):[],{unsubscribe:unsubscribe_}=await client.transport.subscribe({params:["logs",{address:address,topics:topics}],onData(data){if(!active)return;const log=data.result;try{const{eventName:eventName,args:args}=(0,decodeEventLog_js_1.decodeEventLog)({abi:abi,data:log.data,topics:log.topics,strict:strict_}),formatted=(0,log_js_1.formatLog)(log,{args:args,eventName:eventName});onLogs([formatted])}catch(err){let eventName,isUnnamed;if(err instanceof abi_js_1.DecodeLogDataMismatch||err instanceof abi_js_1.DecodeLogTopicsMismatch){if(strict_)return;eventName=err.abiItem.name,isUnnamed=err.abiItem.inputs?.some((x=>!("name"in x&&x.name)))}const formatted=(0,log_js_1.formatLog)(log,{args:isUnnamed?[]:{},eventName:eventName});onLogs([formatted])}},onError(error){onError?.(error)}});unsubscribe=unsubscribe_,active||unsubscribe()}catch(err){onError?.(err)}})(),unsubscribe})()}exports.watchContractEvent=watchContractEvent;
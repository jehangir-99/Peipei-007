"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.webSocket=void 0;const request_js_1=require("../../errors/request.js"),transport_js_1=require("../../errors/transport.js"),rpc_js_1=require("../../utils/rpc.js"),createTransport_js_1=require("./createTransport.js");function webSocket(url,config={}){const{key:key="webSocket",name:name="WebSocket JSON-RPC",retryDelay:retryDelay}=config;return({chain:chain,retryCount:retryCount_,timeout:timeout_})=>{const retryCount=config.retryCount??retryCount_,timeout=timeout_??config.timeout??1e4,url_=url||chain?.rpcUrls.default.webSocket?.[0];if(!url_)throw new transport_js_1.UrlRequiredError;return(0,createTransport_js_1.createTransport)({key:key,name:name,async request({method:method,params:params}){const body={method:method,params:params},socket=await(0,rpc_js_1.getSocket)(url_),{error:error,result:result}=await rpc_js_1.rpc.webSocketAsync(socket,{body:body,timeout:timeout});if(error)throw new request_js_1.RpcRequestError({body:body,error:error,url:url_});return result},retryCount:retryCount,retryDelay:retryDelay,timeout:timeout,type:"webSocket"},{getSocket:()=>(0,rpc_js_1.getSocket)(url_),async subscribe({params:params,onData:onData,onError:onError}){const socket=await(0,rpc_js_1.getSocket)(url_),{result:subscriptionId}=await new Promise(((resolve,reject)=>rpc_js_1.rpc.webSocket(socket,{body:{method:"eth_subscribe",params:params},onResponse(response){if(response.error)return reject(response.error),void onError?.(response.error);"number"!=typeof response.id?"eth_subscription"===response.method&&onData(response.params):resolve(response)}})));return{subscriptionId:subscriptionId,unsubscribe:async()=>new Promise((resolve=>rpc_js_1.rpc.webSocket(socket,{body:{method:"eth_unsubscribe",params:[subscriptionId]},onResponse:resolve})))}}})}}exports.webSocket=webSocket;
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isValidDataLocation=exports.isSolidityKeyword=exports.isSolidityType=exports.splitParameters=exports.parseAbiParameter=exports.parseSignature=void 0;const regex_js_1=require("../../regex.js"),abiItem_js_1=require("../errors/abiItem.js"),abiParameter_js_1=require("../errors/abiParameter.js"),signature_js_1=require("../errors/signature.js"),splitParameters_js_1=require("../errors/splitParameters.js"),cache_js_1=require("./cache.js"),signatures_js_1=require("./signatures.js");function parseSignature(signature,structs={}){if((0,signatures_js_1.isFunctionSignature)(signature)){const match=(0,signatures_js_1.execFunctionSignature)(signature);if(!match)throw new signature_js_1.InvalidSignatureError({signature:signature,type:"function"});const inputParams=splitParameters(match.parameters),inputs=[],inputLength=inputParams.length;for(let i=0;i<inputLength;i++)inputs.push(parseAbiParameter(inputParams[i],{modifiers:signatures_js_1.functionModifiers,structs:structs,type:"function"}));const outputs=[];if(match.returns){const outputParams=splitParameters(match.returns),outputLength=outputParams.length;for(let i=0;i<outputLength;i++)outputs.push(parseAbiParameter(outputParams[i],{modifiers:signatures_js_1.functionModifiers,structs:structs,type:"function"}))}return{name:match.name,type:"function",stateMutability:match.stateMutability??"nonpayable",inputs:inputs,outputs:outputs}}if((0,signatures_js_1.isEventSignature)(signature)){const match=(0,signatures_js_1.execEventSignature)(signature);if(!match)throw new signature_js_1.InvalidSignatureError({signature:signature,type:"event"});const params=splitParameters(match.parameters),abiParameters=[],length=params.length;for(let i=0;i<length;i++)abiParameters.push(parseAbiParameter(params[i],{modifiers:signatures_js_1.eventModifiers,structs:structs,type:"event"}));return{name:match.name,type:"event",inputs:abiParameters}}if((0,signatures_js_1.isErrorSignature)(signature)){const match=(0,signatures_js_1.execErrorSignature)(signature);if(!match)throw new signature_js_1.InvalidSignatureError({signature:signature,type:"error"});const params=splitParameters(match.parameters),abiParameters=[],length=params.length;for(let i=0;i<length;i++)abiParameters.push(parseAbiParameter(params[i],{structs:structs,type:"error"}));return{name:match.name,type:"error",inputs:abiParameters}}if((0,signatures_js_1.isConstructorSignature)(signature)){const match=(0,signatures_js_1.execConstructorSignature)(signature);if(!match)throw new signature_js_1.InvalidSignatureError({signature:signature,type:"constructor"});const params=splitParameters(match.parameters),abiParameters=[],length=params.length;for(let i=0;i<length;i++)abiParameters.push(parseAbiParameter(params[i],{structs:structs,type:"constructor"}));return{type:"constructor",stateMutability:match.stateMutability??"nonpayable",inputs:abiParameters}}if((0,signatures_js_1.isFallbackSignature)(signature))return{type:"fallback"};if((0,signatures_js_1.isReceiveSignature)(signature))return{type:"receive",stateMutability:"payable"};throw new signature_js_1.UnknownSignatureError({signature:signature})}exports.parseSignature=parseSignature;const abiParameterWithoutTupleRegex=/^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/,abiParameterWithTupleRegex=/^\((?<type>.+?)\)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/,dynamicIntegerRegex=/^u?int$/;function parseAbiParameter(param,options){const parameterCacheKey=(0,cache_js_1.getParameterCacheKey)(param,options?.type);if(cache_js_1.parameterCache.has(parameterCacheKey))return cache_js_1.parameterCache.get(parameterCacheKey);const isTuple=regex_js_1.isTupleRegex.test(param),match=(0,regex_js_1.execTyped)(isTuple?abiParameterWithTupleRegex:abiParameterWithoutTupleRegex,param);if(!match)throw new abiParameter_js_1.InvalidParameterError({param:param});if(match.name&&isSolidityKeyword(match.name))throw new abiParameter_js_1.SolidityProtectedKeywordError({param:param,name:match.name});const name=match.name?{name:match.name}:{},indexed="indexed"===match.modifier?{indexed:!0}:{},structs=options?.structs??{};let type,components={};if(isTuple){type="tuple";const params=splitParameters(match.type),components_=[],length=params.length;for(let i=0;i<length;i++)components_.push(parseAbiParameter(params[i],{structs:structs}));components={components:components_}}else if(match.type in structs)type="tuple",components={components:structs[match.type]};else if(dynamicIntegerRegex.test(match.type))type=`${match.type}256`;else if(type=match.type,"struct"!==options?.type&&!isSolidityType(type))throw new abiItem_js_1.UnknownSolidityTypeError({type:type});if(match.modifier){if(!options?.modifiers?.has?.(match.modifier))throw new abiParameter_js_1.InvalidModifierError({param:param,type:options?.type,modifier:match.modifier});if(signatures_js_1.functionModifiers.has(match.modifier)&&!isValidDataLocation(type,!!match.array))throw new abiParameter_js_1.InvalidFunctionModifierError({param:param,type:options?.type,modifier:match.modifier})}const abiParameter={type:`${type}${match.array??""}`,...name,...indexed,...components};return cache_js_1.parameterCache.set(parameterCacheKey,abiParameter),abiParameter}function splitParameters(params,result=[],current="",depth=0){if(""===params){if(""===current)return result;if(0!==depth)throw new splitParameters_js_1.InvalidParenthesisError({current:current,depth:depth});return result.push(current.trim()),result}const length=params.length;for(let i=0;i<length;i++){const char=params[i],tail=params.slice(i+1);switch(char){case",":return 0===depth?splitParameters(tail,[...result,current.trim()]):splitParameters(tail,result,`${current}${char}`,depth);case"(":return splitParameters(tail,result,`${current}${char}`,depth+1);case")":return splitParameters(tail,result,`${current}${char}`,depth-1);default:return splitParameters(tail,result,`${current}${char}`,depth)}}return[]}function isSolidityType(type){return"address"===type||"bool"===type||"function"===type||"string"===type||regex_js_1.bytesRegex.test(type)||regex_js_1.integerRegex.test(type)}exports.parseAbiParameter=parseAbiParameter,exports.splitParameters=splitParameters,exports.isSolidityType=isSolidityType;const protectedKeywordsRegex=/^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/;function isSolidityKeyword(name){return"address"===name||"bool"===name||"function"===name||"string"===name||"tuple"===name||regex_js_1.bytesRegex.test(name)||regex_js_1.integerRegex.test(name)||protectedKeywordsRegex.test(name)}function isValidDataLocation(type,isArray){return isArray||"bytes"===type||"string"===type||"tuple"===type}exports.isSolidityKeyword=isSolidityKeyword,exports.isValidDataLocation=isValidDataLocation;
"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P((function(resolve){resolve(value)}))).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.deleteData=exports.fetchData=exports.stringifyQuery=exports.insertParams=void 0;const isErrorResponse=data=>"object"==typeof data&&null!==data&&"code"in data&&"message"in data;function replaceParam(str,key,value){return str.replace(new RegExp(`\\{${key}\\}`,"g"),value)}function insertParams(template,params){return params?Object.keys(params).reduce(((result,key)=>replaceParam(result,key,String(params[key]))),template):template}function stringifyQuery(query){if(!query)return"";const searchParams=new URLSearchParams;Object.keys(query).forEach((key=>{null!=query[key]&&searchParams.append(key,String(query[key]))}));const searchString=searchParams.toString();return searchString?`?${searchString}`:""}function parseResponse(resp){return __awaiter(this,void 0,void 0,(function*(){let json;try{json=yield resp.json()}catch(_a){if(resp.headers&&"0"!==resp.headers.get("content-length"))throw new Error(`Invalid response content: ${resp.statusText}`)}if(!resp.ok){const errTxt=isErrorResponse(json)?`${json.code}: ${json.message}`:resp.statusText;throw new Error(errTxt)}return json}))}function fetchData(url,body){return __awaiter(this,void 0,void 0,(function*(){let options;null!=body&&(options={method:"POST",body:"string"==typeof body?body:JSON.stringify(body),headers:{"Content-Type":"application/json"}});return parseResponse(yield fetch(url,options))}))}function deleteData(url){return __awaiter(this,void 0,void 0,(function*(){return parseResponse(yield fetch(url,{method:"DELETE"}))}))}exports.insertParams=insertParams,exports.stringifyQuery=stringifyQuery,exports.fetchData=fetchData,exports.deleteData=deleteData;
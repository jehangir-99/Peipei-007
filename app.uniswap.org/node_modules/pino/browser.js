"use strict";const format=require("quick-format-unescaped");module.exports=pino;const _console=pfGlobalThisOrFallback().console||{},stdSerializers={mapHttpRequest:mock,mapHttpResponse:mock,wrapRequestSerializer:passthrough,wrapResponseSerializer:passthrough,wrapErrorSerializer:passthrough,req:mock,res:mock,err:asErrValue};function shouldSerialize(serialize,serializers){if(Array.isArray(serialize)){return serialize.filter((function(k){return"!stdSerializers.err"!==k}))}return!0===serialize&&Object.keys(serializers)}function pino(opts){(opts=opts||{}).browser=opts.browser||{};const transmit=opts.browser.transmit;if(transmit&&"function"!=typeof transmit.send)throw Error("pino: transmit option must have a send function");const proto=opts.browser.write||_console;opts.browser.write&&(opts.browser.asObject=!0);const serializers=opts.serializers||{},serialize=shouldSerialize(opts.browser.serialize,serializers);let stdErrSerialize=opts.browser.serialize;Array.isArray(opts.browser.serialize)&&opts.browser.serialize.indexOf("!stdSerializers.err")>-1&&(stdErrSerialize=!1);"function"==typeof proto&&(proto.error=proto.fatal=proto.warn=proto.info=proto.debug=proto.trace=proto),!1===opts.enabled&&(opts.level="silent");const level=opts.level||"info",logger=Object.create(proto);logger.log||(logger.log=noop),Object.defineProperty(logger,"levelVal",{get:function(){return"silent"===this.level?1/0:this.levels.values[this.level]}}),Object.defineProperty(logger,"level",{get:function(){return this._level},set:function(level){if("silent"!==level&&!this.levels.values[level])throw Error("unknown level "+level);this._level=level,set(setOpts,logger,"error","log"),set(setOpts,logger,"fatal","error"),set(setOpts,logger,"warn","error"),set(setOpts,logger,"info","log"),set(setOpts,logger,"debug","log"),set(setOpts,logger,"trace","log")}});const setOpts={transmit:transmit,serialize:serialize,asObject:opts.browser.asObject,levels:["error","fatal","warn","info","debug","trace"],timestamp:getTimeFunction(opts)};return logger.levels=pino.levels,logger.level=level,logger.setMaxListeners=logger.getMaxListeners=logger.emit=logger.addListener=logger.on=logger.prependListener=logger.once=logger.prependOnceListener=logger.removeListener=logger.removeAllListeners=logger.listeners=logger.listenerCount=logger.eventNames=logger.write=logger.flush=noop,logger.serializers=serializers,logger._serialize=serialize,logger._stdErrSerialize=stdErrSerialize,logger.child=function(bindings,childOptions){if(!bindings)throw new Error("missing bindings for child Pino");childOptions=childOptions||{},serialize&&bindings.serializers&&(childOptions.serializers=bindings.serializers);const childOptionsSerializers=childOptions.serializers;if(serialize&&childOptionsSerializers){var childSerializers=Object.assign({},serializers,childOptionsSerializers),childSerialize=!0===opts.browser.serialize?Object.keys(childSerializers):serialize;delete bindings.serializers,applySerializers([bindings],childSerialize,childSerializers,this._stdErrSerialize)}function Child(parent){this._childLevel=1+(0|parent._childLevel),this.error=bind(parent,bindings,"error"),this.fatal=bind(parent,bindings,"fatal"),this.warn=bind(parent,bindings,"warn"),this.info=bind(parent,bindings,"info"),this.debug=bind(parent,bindings,"debug"),this.trace=bind(parent,bindings,"trace"),childSerializers&&(this.serializers=childSerializers,this._serialize=childSerialize),transmit&&(this._logEvent=createLogEventShape([].concat(parent._logEvent.bindings,bindings)))}return Child.prototype=this,new Child(this)},transmit&&(logger._logEvent=createLogEventShape()),logger}function set(opts,logger,level,fallback){const proto=Object.getPrototypeOf(logger);logger[level]=logger.levelVal>logger.levels.values[level]?noop:proto[level]?proto[level]:_console[level]||_console[fallback]||noop,wrap(opts,logger,level)}function wrap(opts,logger,level){var write;(opts.transmit||logger[level]!==noop)&&(logger[level]=(write=logger[level],function(){const ts=opts.timestamp(),args=new Array(arguments.length),proto=Object.getPrototypeOf&&Object.getPrototypeOf(this)===_console?_console:this;for(var i=0;i<args.length;i++)args[i]=arguments[i];if(opts.serialize&&!opts.asObject&&applySerializers(args,this._serialize,this.serializers,this._stdErrSerialize),opts.asObject?write.call(proto,asObject(this,level,args,ts)):write.apply(proto,args),opts.transmit){const transmitLevel=opts.transmit.level||logger.level,transmitValue=pino.levels.values[transmitLevel],methodValue=pino.levels.values[level];if(methodValue<transmitValue)return;transmit(this,{ts:ts,methodLevel:level,methodValue:methodValue,transmitLevel:transmitLevel,transmitValue:pino.levels.values[opts.transmit.level||logger.level],send:opts.transmit.send,val:logger.levelVal},args)}}))}function asObject(logger,level,args,ts){logger._serialize&&applySerializers(args,logger._serialize,logger.serializers,logger._stdErrSerialize);const argsCloned=args.slice();let msg=argsCloned[0];const o={};ts&&(o.time=ts),o.level=pino.levels.values[level];let lvl=1+(0|logger._childLevel);if(lvl<1&&(lvl=1),null!==msg&&"object"==typeof msg){for(;lvl--&&"object"==typeof argsCloned[0];)Object.assign(o,argsCloned.shift());msg=argsCloned.length?format(argsCloned.shift(),argsCloned):void 0}else"string"==typeof msg&&(msg=format(argsCloned.shift(),argsCloned));return void 0!==msg&&(o.msg=msg),o}function applySerializers(args,serialize,serializers,stdErrSerialize){for(const i in args)if(stdErrSerialize&&args[i]instanceof Error)args[i]=pino.stdSerializers.err(args[i]);else if("object"==typeof args[i]&&!Array.isArray(args[i]))for(const k in args[i])serialize&&serialize.indexOf(k)>-1&&k in serializers&&(args[i][k]=serializers[k](args[i][k]))}function bind(parent,bindings,level){return function(){const args=new Array(1+arguments.length);args[0]=bindings;for(var i=1;i<args.length;i++)args[i]=arguments[i-1];return parent[level].apply(this,args)}}function transmit(logger,opts,args){const send=opts.send,ts=opts.ts,methodLevel=opts.methodLevel,methodValue=opts.methodValue,val=opts.val,bindings=logger._logEvent.bindings;applySerializers(args,logger._serialize||Object.keys(logger.serializers),logger.serializers,void 0===logger._stdErrSerialize||logger._stdErrSerialize),logger._logEvent.ts=ts,logger._logEvent.messages=args.filter((function(arg){return-1===bindings.indexOf(arg)})),logger._logEvent.level.label=methodLevel,logger._logEvent.level.value=methodValue,send(methodLevel,logger._logEvent,val),logger._logEvent=createLogEventShape(bindings)}function createLogEventShape(bindings){return{ts:0,messages:[],bindings:bindings||[],level:{label:"",value:0}}}function asErrValue(err){const obj={type:err.constructor.name,msg:err.message,stack:err.stack};for(const key in err)void 0===obj[key]&&(obj[key]=err[key]);return obj}function getTimeFunction(opts){return"function"==typeof opts.timestamp?opts.timestamp:!1===opts.timestamp?nullTime:epochTime}function mock(){return{}}function passthrough(a){return a}function noop(){}function nullTime(){return!1}function epochTime(){return Date.now()}function unixTime(){return Math.round(Date.now()/1e3)}function isoTime(){return new Date(Date.now()).toISOString()}function pfGlobalThisOrFallback(){function defd(o){return void 0!==o&&o}try{return"undefined"!=typeof globalThis||Object.defineProperty(Object.prototype,"globalThis",{get:function(){return delete Object.prototype.globalThis,this.globalThis=this},configurable:!0}),globalThis}catch(e){return defd(self)||defd(window)||defd(this)||{}}}pino.levels={values:{fatal:60,error:50,warn:40,info:30,debug:20,trace:10},labels:{10:"trace",20:"debug",30:"info",40:"warn",50:"error",60:"fatal"}},pino.stdSerializers=stdSerializers,pino.stdTimeFunctions=Object.assign({},{nullTime:nullTime,epochTime:epochTime,unixTime:unixTime,isoTime:isoTime});
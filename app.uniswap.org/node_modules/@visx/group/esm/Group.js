import _pt from"prop-types";var _excluded=["top","left","transform","className","children","innerRef"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React from"react";import cx from"classnames";export default function Group(_ref){var _ref$top=_ref.top,top=void 0===_ref$top?0:_ref$top,_ref$left=_ref.left,left=void 0===_ref$left?0:_ref$left,transform=_ref.transform,className=_ref.className,children=_ref.children,innerRef=_ref.innerRef,restProps=_objectWithoutPropertiesLoose(_ref,_excluded);return React.createElement("g",_extends({ref:innerRef,className:cx("visx-group",className),transform:transform||"translate("+left+", "+top+")"},restProps),children)}Group.propTypes={top:_pt.number,left:_pt.number,transform:_pt.string,className:_pt.string,children:_pt.node,innerRef:_pt.oneOfType([_pt.string,_pt.func,_pt.object])};
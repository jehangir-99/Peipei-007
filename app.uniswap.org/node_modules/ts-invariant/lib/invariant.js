import{__extends}from"tslib";var genericMessage="Invariant Violation",_a=Object.setPrototypeOf,setPrototypeOf=void 0===_a?function(obj,proto){return obj.__proto__=proto,obj}:_a,InvariantError=function(_super){function InvariantError(message){void 0===message&&(message=genericMessage);var _this=_super.call(this,"number"==typeof message?genericMessage+": "+message+" (see https://github.com/apollographql/invariant-packages)":message)||this;return _this.framesToPop=1,_this.name=genericMessage,setPrototypeOf(_this,InvariantError.prototype),_this}return __extends(InvariantError,_super),InvariantError}(Error);export{InvariantError};export function invariant(condition,message){if(!condition)throw new InvariantError(message)}var verbosityLevels=["debug","log","warn","error","silent"],verbosityLevel=verbosityLevels.indexOf("log");function wrapConsoleMethod(name){return function(){if(verbosityLevels.indexOf(name)>=verbosityLevel)return(console[name]||console.log).apply(console,arguments)}}!function(invariant){invariant.debug=wrapConsoleMethod("debug"),invariant.log=wrapConsoleMethod("log"),invariant.warn=wrapConsoleMethod("warn"),invariant.error=wrapConsoleMethod("error")}(invariant||(invariant={}));export function setVerbosity(level){var old=verbosityLevels[verbosityLevel];return verbosityLevel=Math.max(0,verbosityLevels.indexOf(level)),old}export default invariant;
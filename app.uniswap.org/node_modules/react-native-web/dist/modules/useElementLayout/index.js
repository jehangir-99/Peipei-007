import useLayoutEffect from"../useLayoutEffect";import UIManager from"../../exports/UIManager";import canUseDOM from"../canUseDom";var DOM_LAYOUT_HANDLER_NAME="__reactLayoutHandler",didWarn=!canUseDOM,resizeObserver=null;function getResizeObserver(){return canUseDOM&&void 0!==window.ResizeObserver?null==resizeObserver&&(resizeObserver=new window.ResizeObserver((function(entries){entries.forEach((entry=>{var node=entry.target,onLayout=node[DOM_LAYOUT_HANDLER_NAME];"function"==typeof onLayout&&UIManager.measure(node,((x,y,width,height,left,top)=>{var event={nativeEvent:{layout:{x:x,y:y,width:width,height:height,left:left,top:top}},timeStamp:Date.now()};Object.defineProperty(event.nativeEvent,"target",{enumerable:!0,get:()=>entry.target}),onLayout(event)}))}))}))):didWarn||"production"!==process.env.NODE_ENV&&"test"!==process.env.NODE_ENV&&(console.warn("onLayout relies on ResizeObserver which is not supported by your browser. Please include a polyfill, e.g., https://github.com/que-etc/resize-observer-polyfill."),didWarn=!0),resizeObserver}export default function useElementLayout(ref,onLayout){var observer=getResizeObserver();useLayoutEffect((()=>{var node=ref.current;null!=node&&(node[DOM_LAYOUT_HANDLER_NAME]=onLayout)}),[ref,onLayout]),useLayoutEffect((()=>{var node=ref.current;return null!=node&&null!=observer&&("function"==typeof node[DOM_LAYOUT_HANDLER_NAME]?observer.observe(node):observer.unobserve(node)),()=>{null!=node&&null!=observer&&observer.unobserve(node)}}),[ref,observer])}
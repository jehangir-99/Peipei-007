import _objectSpread from"@babel/runtime/helpers/objectSpread2";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/objectWithoutPropertiesLoose";var _excluded=["hrefAttrs","numberOfLines","onClick","onLayout","onPress","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","selectable"];import*as React from"react";import createElement from"../createElement";import*as forwardedProps from"../../modules/forwardedProps";import pick from"../../modules/pick";import useElementLayout from"../../modules/useElementLayout";import useMergeRefs from"../../modules/useMergeRefs";import usePlatformMethods from"../../modules/usePlatformMethods";import useResponderEvents from"../../modules/useResponderEvents";import StyleSheet from"../StyleSheet";import TextAncestorContext from"./TextAncestorContext";import{useLocaleContext,getLocaleDirection}from"../../modules/useLocale";import{warnOnce}from"../../modules/warnOnce";var forwardPropsList=Object.assign({},forwardedProps.defaultProps,forwardedProps.accessibilityProps,forwardedProps.clickProps,forwardedProps.focusProps,forwardedProps.keyboardProps,forwardedProps.mouseProps,forwardedProps.touchProps,forwardedProps.styleProps,{href:!0,lang:!0,pointerEvents:!0}),pickProps=props=>pick(props,forwardPropsList),Text=React.forwardRef(((props,forwardedRef)=>{var hrefAttrs=props.hrefAttrs,numberOfLines=props.numberOfLines,onClick=props.onClick,onLayout=props.onLayout,onPress=props.onPress,onMoveShouldSetResponder=props.onMoveShouldSetResponder,onMoveShouldSetResponderCapture=props.onMoveShouldSetResponderCapture,onResponderEnd=props.onResponderEnd,onResponderGrant=props.onResponderGrant,onResponderMove=props.onResponderMove,onResponderReject=props.onResponderReject,onResponderRelease=props.onResponderRelease,onResponderStart=props.onResponderStart,onResponderTerminate=props.onResponderTerminate,onResponderTerminationRequest=props.onResponderTerminationRequest,onScrollShouldSetResponder=props.onScrollShouldSetResponder,onScrollShouldSetResponderCapture=props.onScrollShouldSetResponderCapture,onSelectionChangeShouldSetResponder=props.onSelectionChangeShouldSetResponder,onSelectionChangeShouldSetResponderCapture=props.onSelectionChangeShouldSetResponderCapture,onStartShouldSetResponder=props.onStartShouldSetResponder,onStartShouldSetResponderCapture=props.onStartShouldSetResponderCapture,selectable=props.selectable,rest=_objectWithoutPropertiesLoose(props,_excluded);null!=selectable&&warnOnce("selectable","selectable prop is deprecated. Use styles.userSelect.");var hasTextAncestor=React.useContext(TextAncestorContext),hostRef=React.useRef(null),contextDirection=useLocaleContext().direction;useElementLayout(hostRef,onLayout),useResponderEvents(hostRef,{onMoveShouldSetResponder:onMoveShouldSetResponder,onMoveShouldSetResponderCapture:onMoveShouldSetResponderCapture,onResponderEnd:onResponderEnd,onResponderGrant:onResponderGrant,onResponderMove:onResponderMove,onResponderReject:onResponderReject,onResponderRelease:onResponderRelease,onResponderStart:onResponderStart,onResponderTerminate:onResponderTerminate,onResponderTerminationRequest:onResponderTerminationRequest,onScrollShouldSetResponder:onScrollShouldSetResponder,onScrollShouldSetResponderCapture:onScrollShouldSetResponderCapture,onSelectionChangeShouldSetResponder:onSelectionChangeShouldSetResponder,onSelectionChangeShouldSetResponderCapture:onSelectionChangeShouldSetResponderCapture,onStartShouldSetResponder:onStartShouldSetResponder,onStartShouldSetResponderCapture:onStartShouldSetResponderCapture});var handleClick=React.useCallback((e=>{null!=onClick?onClick(e):null!=onPress&&(e.stopPropagation(),onPress(e))}),[onClick,onPress]),component=hasTextAncestor?"span":"div",langDirection=null!=props.lang?getLocaleDirection(props.lang):null,componentDirection=props.dir||langDirection,writingDirection=componentDirection||contextDirection,supportedProps=pickProps(rest);if(supportedProps.dir=componentDirection,hasTextAncestor||(supportedProps.dir=null!=componentDirection?componentDirection:"auto"),(onClick||onPress)&&(supportedProps.onClick=handleClick),supportedProps.style=[null!=numberOfLines&&numberOfLines>1&&{WebkitLineClamp:numberOfLines},!0===hasTextAncestor?styles.textHasAncestor$raw:styles.text$raw,1===numberOfLines&&styles.textOneLine,null!=numberOfLines&&numberOfLines>1&&styles.textMultiLine,props.style,!0===selectable&&styles.selectable,!1===selectable&&styles.notSelectable,onPress&&styles.pressable],null!=props.href&&(component="a",null!=hrefAttrs)){var download=hrefAttrs.download,rel=hrefAttrs.rel,target=hrefAttrs.target;null!=download&&(supportedProps.download=download),null!=rel&&(supportedProps.rel=rel),"string"==typeof target&&(supportedProps.target="_"!==target.charAt(0)?"_"+target:target)}var platformMethodsRef=usePlatformMethods(supportedProps),setRef=useMergeRefs(hostRef,platformMethodsRef,forwardedRef);supportedProps.ref=setRef;var element=createElement(component,supportedProps,{writingDirection:writingDirection});return hasTextAncestor?element:React.createElement(TextAncestorContext.Provider,{value:!0},element)}));Text.displayName="Text";var textStyle={backgroundColor:"transparent",border:"0 solid black",boxSizing:"border-box",color:"black",display:"inline",font:"14px System",listStyle:"none",margin:0,padding:0,position:"relative",textAlign:"start",textDecoration:"none",whiteSpace:"pre-wrap",wordWrap:"break-word"},styles=StyleSheet.create({text$raw:textStyle,textHasAncestor$raw:_objectSpread(_objectSpread({},textStyle),{},{color:"inherit",font:"inherit",textAlign:"inherit",whiteSpace:"inherit"}),textOneLine:{maxWidth:"100%",overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap",wordWrap:"normal"},textMultiLine:{display:"-webkit-box",maxWidth:"100%",overflow:"hidden",textOverflow:"ellipsis",WebkitBoxOrient:"vertical"},notSelectable:{userSelect:"none"},selectable:{userSelect:"text"},pressable:{cursor:"pointer"}});export default Text;
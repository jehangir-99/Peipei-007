import setValueForStyles from"../../modules/setValueForStyles";var getRect=node=>{var height=node.offsetHeight,width=node.offsetWidth,left=node.offsetLeft,top=node.offsetTop;for(node=node.offsetParent;node&&1===node.nodeType;)left+=node.offsetLeft+node.clientLeft-node.scrollLeft,top+=node.offsetTop+node.clientTop-node.scrollTop,node=node.offsetParent;return{width:width,height:height,top:top-=window.scrollY,left:left-=window.scrollX}},measureLayout=(node,relativeToNativeNode,callback)=>{var relativeNode=relativeToNativeNode||node&&node.parentNode;node&&relativeNode&&setTimeout((()=>{if(node.isConnected&&relativeNode.isConnected){var relativeRect=getRect(relativeNode),_getRect=getRect(node),height=_getRect.height,left=_getRect.left,top=_getRect.top,width=_getRect.width,x=left-relativeRect.left,y=top-relativeRect.top;callback(x,y,width,height,left,top)}}),0)},elementsToIgnore={A:!0,BODY:!0,INPUT:!0,SELECT:!0,TEXTAREA:!0},UIManager={blur(node){try{node.blur()}catch(err){}},focus(node){try{var name=node.nodeName;null==node.getAttribute("tabIndex")&&!0!==node.isContentEditable&&null==elementsToIgnore[name]&&node.setAttribute("tabIndex","-1"),node.focus()}catch(err){}},measure(node,callback){measureLayout(node,null,callback)},measureInWindow(node,callback){node&&setTimeout((()=>{var _getRect2=getRect(node),height=_getRect2.height,left=_getRect2.left,top=_getRect2.top,width=_getRect2.width;callback(left,top,width,height)}),0)},measureLayout(node,relativeToNativeNode,onFail,onSuccess){measureLayout(node,relativeToNativeNode,onSuccess)},updateView(node,props){for(var prop in props)if(Object.prototype.hasOwnProperty.call(props,prop)){var value=props[prop];switch(prop){case"style":setValueForStyles(node,value);break;case"class":case"className":node.setAttribute("class",value);break;case"text":case"value":node.value=value;break;default:node.setAttribute(prop,value)}}},configureNextLayoutAnimation(config,onAnimationDidEnd){onAnimationDidEnd()},setLayoutAnimationEnabledExperimental(){}};export default UIManager;
import _extends from"@babel/runtime/helpers/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/objectWithoutPropertiesLoose";var _excluded=["onScroll","onTouchMove","onWheel","scrollEnabled","scrollEventThrottle","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","style"];import*as React from"react";import StyleSheet from"../StyleSheet";import View from"../View";import useMergeRefs from"../../modules/useMergeRefs";function normalizeScrollEvent(e){return{nativeEvent:{contentOffset:{get x(){return e.target.scrollLeft},get y(){return e.target.scrollTop}},contentSize:{get height(){return e.target.scrollHeight},get width(){return e.target.scrollWidth}},layoutMeasurement:{get height(){return e.target.offsetHeight},get width(){return e.target.offsetWidth}}},timeStamp:Date.now()}}function shouldEmitScrollEvent(lastTick,eventThrottle){var timeSinceLastTick=Date.now()-lastTick;return eventThrottle>0&&timeSinceLastTick>=eventThrottle}var ScrollViewBase=React.forwardRef(((props,forwardedRef)=>{var onScroll=props.onScroll,onTouchMove=props.onTouchMove,onWheel=props.onWheel,_props$scrollEnabled=props.scrollEnabled,scrollEnabled=void 0===_props$scrollEnabled||_props$scrollEnabled,_props$scrollEventThr=props.scrollEventThrottle,scrollEventThrottle=void 0===_props$scrollEventThr?0:_props$scrollEventThr,showsHorizontalScrollIndicator=props.showsHorizontalScrollIndicator,showsVerticalScrollIndicator=props.showsVerticalScrollIndicator,style=props.style,rest=_objectWithoutPropertiesLoose(props,_excluded),scrollState=React.useRef({isScrolling:!1,scrollLastTick:0}),scrollTimeout=React.useRef(null),scrollRef=React.useRef(null);function createPreventableScrollHandler(handler){return e=>{scrollEnabled&&handler&&handler(e)}}function handleScrollTick(e){scrollState.current.scrollLastTick=Date.now(),onScroll&&onScroll(normalizeScrollEvent(e))}var hideScrollbar=!1===showsHorizontalScrollIndicator||!1===showsVerticalScrollIndicator;return React.createElement(View,_extends({},rest,{onScroll:function(e){e.stopPropagation(),e.target===scrollRef.current&&(e.persist(),null!=scrollTimeout.current&&clearTimeout(scrollTimeout.current),scrollTimeout.current=setTimeout((()=>{!function(e){scrollState.current.isScrolling=!1,onScroll&&onScroll(normalizeScrollEvent(e))}(e)}),100),scrollState.current.isScrolling?shouldEmitScrollEvent(scrollState.current.scrollLastTick,scrollEventThrottle)&&handleScrollTick(e):function(e){scrollState.current.isScrolling=!0,handleScrollTick(e)}(e))},onTouchMove:createPreventableScrollHandler(onTouchMove),onWheel:createPreventableScrollHandler(onWheel),ref:useMergeRefs(scrollRef,forwardedRef),style:[style,!scrollEnabled&&styles.scrollDisabled,hideScrollbar&&styles.hideScrollbar]}))})),styles=StyleSheet.create({scrollDisabled:{overflowX:"hidden",overflowY:"hidden",touchAction:"none"},hideScrollbar:{scrollbarWidth:"none"}});export default ScrollViewBase;
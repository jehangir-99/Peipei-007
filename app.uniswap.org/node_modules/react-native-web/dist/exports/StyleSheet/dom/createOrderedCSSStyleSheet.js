var slice=Array.prototype.slice;export default function createOrderedCSSStyleSheet(sheet){var group,groups={},selectors={};null!=sheet&&slice.call(sheet.cssRules).forEach(((cssRule,i)=>{var cssText=cssRule.cssText;if(cssText.indexOf("stylesheet-group")>-1)group=decodeGroupRule(cssRule),groups[group]={start:i,rules:[cssText]};else{var selectorText=getSelectorText(cssText);null!=selectorText&&(selectors[selectorText]=!0,groups[group].rules.push(cssText))}}));function sheetInsert(sheet,group,text){var orderedGroups=getOrderedGroups(groups),nextGroupIndex=orderedGroups.indexOf(group)+1,nextGroup=orderedGroups[nextGroupIndex],position=null!=nextGroup&&null!=groups[nextGroup].start?groups[nextGroup].start:sheet.cssRules.length,isInserted=insertRuleAt(sheet,text,position);if(isInserted){null==groups[group].start&&(groups[group].start=position);for(var i=nextGroupIndex;i<orderedGroups.length;i+=1){var groupNumber=orderedGroups[i],previousStart=groups[groupNumber].start||0;groups[groupNumber].start=previousStart+1}}return isInserted}var OrderedCSSStyleSheet={getTextContent:()=>getOrderedGroups(groups).map((group=>{var rules=groups[group].rules,marker=rules.shift();return rules.sort(),rules.unshift(marker),rules.join("\n")})).join("\n"),insert(cssText,groupValue){var group=Number(groupValue);if(null==groups[group]){var markerRule=encodeGroupRule(group);groups[group]={start:null,rules:[markerRule]},null!=sheet&&sheetInsert(sheet,group,markerRule)}var selectorText=getSelectorText(cssText);null!=selectorText&&null==selectors[selectorText]&&(selectors[selectorText]=!0,groups[group].rules.push(cssText),null!=sheet&&(sheetInsert(sheet,group,cssText)||groups[group].rules.pop()))}};return OrderedCSSStyleSheet}function encodeGroupRule(group){return'[stylesheet-group="'+group+'"]{}'}var groupPattern=/["']/g;function decodeGroupRule(cssRule){return Number(cssRule.selectorText.split(groupPattern)[1])}function getOrderedGroups(obj){return Object.keys(obj).map(Number).sort(((a,b)=>a>b?1:-1))}var selectorPattern=/\s*([,])\s*/g;function getSelectorText(cssText){var selector=cssText.split("{")[0].trim();return""!==selector?selector.replace(selectorPattern,"$1"):null}function insertRuleAt(root,cssText,position){try{return root.insertRule(cssText,position),!0}catch(e){return!1}}
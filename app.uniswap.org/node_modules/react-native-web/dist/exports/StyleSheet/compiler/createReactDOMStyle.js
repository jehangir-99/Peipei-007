import normalizeValueWithProperty from"./normalizeValueWithProperty";import canUseDOM from"../../../modules/canUseDom";var emptyObject={},supportsCSS3TextDecoration=!canUseDOM||null!=window.CSS&&null!=window.CSS.supports&&(window.CSS.supports("text-decoration-line","none")||window.CSS.supports("-webkit-text-decoration-line","none")),MONOSPACE_FONT_STACK="monospace,monospace",SYSTEM_FONT_STACK='-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif',STYLE_SHORT_FORM_EXPANSIONS={borderColor:["borderTopColor","borderRightColor","borderBottomColor","borderLeftColor"],borderBlockColor:["borderTopColor","borderBottomColor"],borderInlineColor:["borderRightColor","borderLeftColor"],borderRadius:["borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius"],borderStyle:["borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle"],borderBlockStyle:["borderTopStyle","borderBottomStyle"],borderInlineStyle:["borderRightStyle","borderLeftStyle"],borderWidth:["borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth"],borderBlockWidth:["borderTopWidth","borderBottomWidth"],borderInlineWidth:["borderRightWidth","borderLeftWidth"],insetBlock:["top","bottom"],insetInline:["left","right"],marginBlock:["marginTop","marginBottom"],marginInline:["marginRight","marginLeft"],paddingBlock:["paddingTop","paddingBottom"],paddingInline:["paddingRight","paddingLeft"],overflow:["overflowX","overflowY"],overscrollBehavior:["overscrollBehaviorX","overscrollBehaviorY"],borderBlockStartColor:["borderTopColor"],borderBlockStartStyle:["borderTopStyle"],borderBlockStartWidth:["borderTopWidth"],borderBlockEndColor:["borderBottomColor"],borderBlockEndStyle:["borderBottomStyle"],borderBlockEndWidth:["borderBottomWidth"],borderEndStartRadius:["borderBottomLeftRadius"],borderEndEndRadius:["borderBottomRightRadius"],borderStartStartRadius:["borderTopLeftRadius"],borderStartEndRadius:["borderTopRightRadius"],insetBlockEnd:["bottom"],insetBlockStart:["top"],marginBlockStart:["marginTop"],marginBlockEnd:["marginBottom"],paddingBlockStart:["paddingTop"],paddingBlockEnd:["paddingBottom"]},createReactDOMStyle=(style,isInline)=>{if(!style)return emptyObject;var resolvedStyle={},_loop=function(){var value=style[prop];if(null==value)return"continue";if("backgroundClip"===prop)"text"===value&&(resolvedStyle.backgroundClip=value,resolvedStyle.WebkitBackgroundClip=value);else if("flex"===prop)-1===value?(resolvedStyle.flexGrow=0,resolvedStyle.flexShrink=1,resolvedStyle.flexBasis="auto"):resolvedStyle.flex=value;else if("font"===prop)resolvedStyle[prop]=value.replace("System",SYSTEM_FONT_STACK);else if("fontFamily"===prop)if(value.indexOf("System")>-1){var stack=value.split(/,\s*/);stack[stack.indexOf("System")]=SYSTEM_FONT_STACK,resolvedStyle[prop]=stack.join(",")}else resolvedStyle[prop]="monospace"===value?MONOSPACE_FONT_STACK:value;else if("textDecorationLine"===prop)supportsCSS3TextDecoration?resolvedStyle.textDecorationLine=value:resolvedStyle.textDecoration=value;else if("writingDirection"===prop)resolvedStyle.direction=value;else{var _value=normalizeValueWithProperty(style[prop],prop),longFormProperties=STYLE_SHORT_FORM_EXPANSIONS[prop];isInline&&"inset"===prop?(null==style.insetInline&&(resolvedStyle.left=_value,resolvedStyle.right=_value),null==style.insetBlock&&(resolvedStyle.top=_value,resolvedStyle.bottom=_value)):isInline&&"margin"===prop?(null==style.marginInline&&(resolvedStyle.marginLeft=_value,resolvedStyle.marginRight=_value),null==style.marginBlock&&(resolvedStyle.marginTop=_value,resolvedStyle.marginBottom=_value)):isInline&&"padding"===prop?(null==style.paddingInline&&(resolvedStyle.paddingLeft=_value,resolvedStyle.paddingRight=_value),null==style.paddingBlock&&(resolvedStyle.paddingTop=_value,resolvedStyle.paddingBottom=_value)):longFormProperties?longFormProperties.forEach(((longForm,i)=>{null==style[longForm]&&(resolvedStyle[longForm]=_value)})):resolvedStyle[prop]=_value}};for(var prop in style)_loop();return resolvedStyle};export default createReactDOMStyle;
import _objectSpread from"@babel/runtime/helpers/objectSpread2";import invariant from"fbjs/lib/invariant";class TaskQueue{constructor(_ref){var onMoreTasks=_ref.onMoreTasks;this._onMoreTasks=onMoreTasks,this._queueStack=[{tasks:[],popable:!0}]}enqueue(task){this._getCurrentQueue().push(task)}enqueueTasks(tasks){tasks.forEach((task=>this.enqueue(task)))}cancelTasks(tasksToCancel){this._queueStack=this._queueStack.map((queue=>_objectSpread(_objectSpread({},queue),{},{tasks:queue.tasks.filter((task=>-1===tasksToCancel.indexOf(task)))}))).filter(((queue,idx)=>queue.tasks.length>0||0===idx))}hasTasksToProcess(){return this._getCurrentQueue().length>0}processNext(){var queue=this._getCurrentQueue();if(queue.length){var task=queue.shift();try{"object"==typeof task&&task.gen?this._genPromise(task):"object"==typeof task&&task.run?task.run():(invariant("function"==typeof task,"Expected Function, SimpleTask, or PromiseTask, but got:\n"+JSON.stringify(task,null,2)),task())}catch(e){throw e.message="TaskQueue: Error with task "+(task.name||"")+": "+e.message,e}}}_getCurrentQueue(){var stackIdx=this._queueStack.length-1,queue=this._queueStack[stackIdx];return queue.popable&&0===queue.tasks.length&&stackIdx>0?(this._queueStack.pop(),this._getCurrentQueue()):queue.tasks}_genPromise(task){var stackIdx=this._queueStack.push({tasks:[],popable:!1})-1,stackItem=this._queueStack[stackIdx];task.gen().then((()=>{stackItem.popable=!0,this.hasTasksToProcess()&&this._onMoreTasks()})).catch((ex=>{setTimeout((()=>{throw ex.message="TaskQueue: Error resolving Promise in task "+task.name+": "+ex.message,ex}),0)}))}}export default TaskQueue;
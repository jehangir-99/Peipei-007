import{useRef,useEffect,useCallback,useState,useMemo}from"react";function useResolvedElement(subscriber,refOrElement){var lastReportRef=useRef(null),refOrElementRef=useRef(null);refOrElementRef.current=refOrElement;var cbElementRef=useRef(null);useEffect((function(){evaluateSubscription()}));var evaluateSubscription=useCallback((function(){var cbElement=cbElementRef.current,refOrElement=refOrElementRef.current,element=cbElement||(refOrElement?refOrElement instanceof Element?refOrElement:refOrElement.current:null);lastReportRef.current&&lastReportRef.current.element===element&&lastReportRef.current.subscriber===subscriber||(lastReportRef.current&&lastReportRef.current.cleanup&&lastReportRef.current.cleanup(),lastReportRef.current={element:element,subscriber:subscriber,cleanup:element?subscriber(element):void 0})}),[subscriber]);return useEffect((function(){return function(){lastReportRef.current&&lastReportRef.current.cleanup&&(lastReportRef.current.cleanup(),lastReportRef.current=null)}}),[]),useCallback((function(element){cbElementRef.current=element,evaluateSubscription()}),[evaluateSubscription])}function extractSize(entry,boxProp,sizeType){return entry[boxProp]?entry[boxProp][0]?entry[boxProp][0][sizeType]:entry[boxProp][sizeType]:"contentBoxSize"===boxProp?entry.contentRect["inlineSize"===sizeType?"width":"height"]:void 0}function useResizeObserver(opts){void 0===opts&&(opts={});var onResize=opts.onResize,onResizeRef=useRef(void 0);onResizeRef.current=onResize;var round=opts.round||Math.round,resizeObserverRef=useRef(),_useState=useState({width:void 0,height:void 0}),size=_useState[0],setSize=_useState[1],didUnmount=useRef(!1);useEffect((function(){return didUnmount.current=!1,function(){didUnmount.current=!0}}),[]);var previous=useRef({width:void 0,height:void 0}),refCallback=useResolvedElement(useCallback((function(element){return resizeObserverRef.current&&resizeObserverRef.current.box===opts.box&&resizeObserverRef.current.round===round||(resizeObserverRef.current={box:opts.box,round:round,instance:new ResizeObserver((function(entries){var entry=entries[0],boxProp="border-box"===opts.box?"borderBoxSize":"device-pixel-content-box"===opts.box?"devicePixelContentBoxSize":"contentBoxSize",reportedWidth=extractSize(entry,boxProp,"inlineSize"),reportedHeight=extractSize(entry,boxProp,"blockSize"),newWidth=reportedWidth?round(reportedWidth):void 0,newHeight=reportedHeight?round(reportedHeight):void 0;if(previous.current.width!==newWidth||previous.current.height!==newHeight){var newSize={width:newWidth,height:newHeight};previous.current.width=newWidth,previous.current.height=newHeight,onResizeRef.current?onResizeRef.current(newSize):didUnmount.current||setSize(newSize)}}))}),resizeObserverRef.current.instance.observe(element,{box:opts.box}),function(){resizeObserverRef.current&&resizeObserverRef.current.instance.unobserve(element)}}),[opts.box,round]),opts.ref);return useMemo((function(){return{ref:refCallback,width:size.width,height:size.height}}),[refCallback,size.width,size.height])}export{useResizeObserver as default};
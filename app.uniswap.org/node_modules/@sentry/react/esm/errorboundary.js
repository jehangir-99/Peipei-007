import{getCurrentHub,showReportDialog,withScope,captureException}from"@sentry/browser";import{isError,addExceptionMechanism,logger}from"@sentry/utils";import hoistNonReactStatics from"hoist-non-react-statics";import*as React from"react";const _jsxFileName="/home/runner/work/sentry-javascript/sentry-javascript/packages/react/src/errorboundary.tsx";function isAtLeastReact17(version){const major=version.match(/^([^.]+)/);return null!==major&&parseInt(major[0])>=17}const UNKNOWN_COMPONENT="unknown",INITIAL_STATE={componentStack:null,error:null,eventId:null};function setCause(error,cause){const seenErrors=new WeakMap;!function recurse(error,cause){if(!seenErrors.has(error))return error.cause?(seenErrors.set(error,!0),recurse(error.cause,cause)):void(error.cause=cause)}(error,cause)}class ErrorBoundary extends React.Component{constructor(props){super(props),ErrorBoundary.prototype.__init.call(this),this.state=INITIAL_STATE,this._openFallbackReportDialog=!0;const client=getCurrentHub().getClient();client&&client.on&&props.showDialog&&(this._openFallbackReportDialog=!1,client.on("afterSendEvent",(event=>{event.type||event.event_id!==this._lastEventId||showReportDialog({...props.dialogOptions,eventId:this._lastEventId})})))}componentDidCatch(error,{componentStack:componentStack}){const{beforeCapture:beforeCapture,onError:onError,showDialog:showDialog,dialogOptions:dialogOptions}=this.props;withScope((scope=>{if(isAtLeastReact17(React.version)&&isError(error)){const errorBoundaryError=new Error(error.message);errorBoundaryError.name=`React ErrorBoundary ${error.name}`,errorBoundaryError.stack=componentStack,setCause(error,errorBoundaryError)}beforeCapture&&beforeCapture(scope,error,componentStack),scope.addEventProcessor((event=>(addExceptionMechanism(event,{handled:!1}),event)));const eventId=captureException(error,{contexts:{react:{componentStack:componentStack}}});onError&&onError(error,componentStack,eventId),showDialog&&(this._lastEventId=eventId,this._openFallbackReportDialog&&showReportDialog({...dialogOptions,eventId:eventId})),this.setState({error:error,componentStack:componentStack,eventId:eventId})}))}componentDidMount(){const{onMount:onMount}=this.props;onMount&&onMount()}componentWillUnmount(){const{error:error,componentStack:componentStack,eventId:eventId}=this.state,{onUnmount:onUnmount}=this.props;onUnmount&&onUnmount(error,componentStack,eventId)}__init(){this.resetErrorBoundary=()=>{const{onReset:onReset}=this.props,{error:error,componentStack:componentStack,eventId:eventId}=this.state;onReset&&onReset(error,componentStack,eventId),this.setState(INITIAL_STATE)}}render(){const{fallback:fallback,children:children}=this.props,state=this.state;if(state.error){let element;return element="function"==typeof fallback?fallback({error:state.error,componentStack:state.componentStack,resetError:this.resetErrorBoundary,eventId:state.eventId}):fallback,React.isValidElement(element)?element:(fallback&&("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.warn("fallback did not produce a valid ReactElement"),null)}return"function"==typeof children?children():children}}function withErrorBoundary(WrappedComponent,errorBoundaryOptions){const componentDisplayName=WrappedComponent.displayName||WrappedComponent.name||"unknown",Wrapped=props=>React.createElement(ErrorBoundary,{...errorBoundaryOptions,__self:this,__source:{fileName:_jsxFileName,lineNumber:234}},React.createElement(WrappedComponent,{...props,__self:this,__source:{fileName:_jsxFileName,lineNumber:235}}));return Wrapped.displayName=`errorBoundary(${componentDisplayName})`,hoistNonReactStatics(Wrapped,WrappedComponent),Wrapped}export{ErrorBoundary,UNKNOWN_COMPONENT,isAtLeastReact17,withErrorBoundary};
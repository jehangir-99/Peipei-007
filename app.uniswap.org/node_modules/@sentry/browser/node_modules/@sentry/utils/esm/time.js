import{isNodeEnv,dynamicRequire}from"./node.js";import{getGlobalObject}from"./worldwide.js";const WINDOW=getGlobalObject(),dateTimestampSource={nowSeconds:()=>Date.now()/1e3};function getBrowserPerformance(){const{performance:performance}=WINDOW;if(!performance||!performance.now)return;return{now:()=>performance.now(),timeOrigin:Date.now()-performance.now()}}function getNodePerformance(){try{return dynamicRequire(module,"perf_hooks").performance}catch(_){return}}const platformPerformance=isNodeEnv()?getNodePerformance():getBrowserPerformance(),timestampSource=void 0===platformPerformance?dateTimestampSource:{nowSeconds:()=>(platformPerformance.timeOrigin+platformPerformance.now())/1e3},dateTimestampInSeconds=dateTimestampSource.nowSeconds.bind(dateTimestampSource),timestampInSeconds=timestampSource.nowSeconds.bind(timestampSource),timestampWithMs=timestampInSeconds,usingPerformanceAPI=void 0!==platformPerformance;let _browserPerformanceTimeOriginMode;const browserPerformanceTimeOrigin=(()=>{const{performance:performance}=WINDOW;if(!performance||!performance.now)return void(_browserPerformanceTimeOriginMode="none");const performanceNow=performance.now(),dateNow=Date.now(),timeOriginDelta=performance.timeOrigin?Math.abs(performance.timeOrigin+performanceNow-dateNow):36e5,timeOriginIsReliable=timeOriginDelta<36e5,navigationStart=performance.timing&&performance.timing.navigationStart,navigationStartDelta="number"==typeof navigationStart?Math.abs(navigationStart+performanceNow-dateNow):36e5;return timeOriginIsReliable||navigationStartDelta<36e5?timeOriginDelta<=navigationStartDelta?(_browserPerformanceTimeOriginMode="timeOrigin",performance.timeOrigin):(_browserPerformanceTimeOriginMode="navigationStart",navigationStart):(_browserPerformanceTimeOriginMode="dateNow",dateNow)})();export{_browserPerformanceTimeOriginMode,browserPerformanceTimeOrigin,dateTimestampInSeconds,timestampInSeconds,timestampWithMs,usingPerformanceAPI};
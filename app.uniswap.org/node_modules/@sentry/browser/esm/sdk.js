import{Integrations,getIntegrationsToSetup,initAndBind,getReportDialogEndpoint,getCurrentHub}from"@sentry/core";import{stackParserFromStackParserOptions,supportsFetch,logger,addInstrumentationHandler}from"@sentry/utils";import{BrowserClient}from"./client.js";import{WINDOW,wrap as wrap$1}from"./helpers.js";import{GlobalHandlers}from"./integrations/globalhandlers.js";import{TryCatch}from"./integrations/trycatch.js";import{Breadcrumbs}from"./integrations/breadcrumbs.js";import{LinkedErrors}from"./integrations/linkederrors.js";import{HttpContext}from"./integrations/httpcontext.js";import{Dedupe}from"./integrations/dedupe.js";import{defaultStackParser}from"./stack-parsers.js";import{makeFetchTransport}from"./transports/fetch.js";import{makeXHRTransport}from"./transports/xhr.js";const defaultIntegrations=[new Integrations.InboundFilters,new Integrations.FunctionToString,new TryCatch,new Breadcrumbs,new GlobalHandlers,new LinkedErrors,new Dedupe,new HttpContext];function init(options={}){void 0===options.defaultIntegrations&&(options.defaultIntegrations=defaultIntegrations),void 0===options.release&&("string"==typeof __SENTRY_RELEASE__&&(options.release=__SENTRY_RELEASE__),WINDOW.SENTRY_RELEASE&&WINDOW.SENTRY_RELEASE.id&&(options.release=WINDOW.SENTRY_RELEASE.id)),void 0===options.autoSessionTracking&&(options.autoSessionTracking=!0),void 0===options.sendClientReports&&(options.sendClientReports=!0);const clientOptions={...options,stackParser:stackParserFromStackParserOptions(options.stackParser||defaultStackParser),integrations:getIntegrationsToSetup(options),transport:options.transport||(supportsFetch()?makeFetchTransport:makeXHRTransport)};initAndBind(BrowserClient,clientOptions),options.autoSessionTracking&&startSessionTracking()}function showReportDialog(options={},hub=getCurrentHub()){if(!WINDOW.document)return void(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.error("Global document not defined in showReportDialog call"));const{client:client,scope:scope}=hub.getStackTop(),dsn=options.dsn||client&&client.getDsn();if(!dsn)return void(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.error("DSN not configured for showReportDialog call"));scope&&(options.user={...scope.getUser(),...options.user}),options.eventId||(options.eventId=hub.lastEventId());const script=WINDOW.document.createElement("script");script.async=!0,script.crossOrigin="anonymous",script.src=getReportDialogEndpoint(dsn,options),options.onLoad&&(script.onload=options.onLoad);const injectionPoint=WINDOW.document.head||WINDOW.document.body;injectionPoint?injectionPoint.appendChild(script):("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.error("Not injecting report dialog. No injection point found in HTML")}function forceLoad(){}function onLoad(callback){callback()}function wrap(fn){return wrap$1(fn)()}function startSessionOnHub(hub){hub.startSession({ignoreDuration:!0}),hub.captureSession()}function startSessionTracking(){if(void 0===WINDOW.document)return void(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.warn("Session tracking in non-browser environment with @sentry/browser is not supported."));const hub=getCurrentHub();hub.captureSession&&(startSessionOnHub(hub),addInstrumentationHandler("history",(({from:from,to:to})=>{void 0!==from&&from!==to&&startSessionOnHub(getCurrentHub())})))}function captureUserFeedback(feedback){const client=getCurrentHub().getClient();client&&client.captureUserFeedback(feedback)}export{captureUserFeedback,defaultIntegrations,forceLoad,init,onLoad,showReportDialog,wrap};
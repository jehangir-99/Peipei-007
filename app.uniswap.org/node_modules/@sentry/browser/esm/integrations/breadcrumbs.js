import{getCurrentHub}from"@sentry/core";import{addInstrumentationHandler,getEventDescription,severityLevelFromString,safeJoin,SENTRY_XHR_DATA_KEY,parseUrl,logger,htmlTreeAsString}from"@sentry/utils";import{WINDOW}from"../helpers.js";const MAX_ALLOWED_STRING_LENGTH=1024;class Breadcrumbs{static __initStatic(){this.id="Breadcrumbs"}constructor(options){this.name=Breadcrumbs.id,this.options={console:!0,dom:!0,fetch:!0,history:!0,sentry:!0,xhr:!0,...options}}setupOnce(){if(this.options.console&&addInstrumentationHandler("console",_consoleBreadcrumb),this.options.dom&&addInstrumentationHandler("dom",_domBreadcrumb(this.options.dom)),this.options.xhr&&addInstrumentationHandler("xhr",_xhrBreadcrumb),this.options.fetch&&addInstrumentationHandler("fetch",_fetchBreadcrumb),this.options.history&&addInstrumentationHandler("history",_historyBreadcrumb),this.options.sentry){const client=getCurrentHub().getClient();client&&client.on&&client.on("beforeSendEvent",addSentryBreadcrumb)}}}function addSentryBreadcrumb(event){getCurrentHub().addBreadcrumb({category:"sentry."+("transaction"===event.type?"transaction":"event"),event_id:event.event_id,level:event.level,message:getEventDescription(event)},{event:event})}function _domBreadcrumb(dom){return function(handlerData){let target,keyAttrs="object"==typeof dom?dom.serializeAttribute:void 0,maxStringLength="object"==typeof dom&&"number"==typeof dom.maxStringLength?dom.maxStringLength:void 0;maxStringLength&&maxStringLength>1024&&(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.warn(`\`dom.maxStringLength\` cannot exceed 1024, but a value of ${maxStringLength} was configured. Sentry will use 1024 instead.`),maxStringLength=1024),"string"==typeof keyAttrs&&(keyAttrs=[keyAttrs]);try{const event=handlerData.event;target=_isEvent(event)?htmlTreeAsString(event.target,{keyAttrs:keyAttrs,maxStringLength:maxStringLength}):htmlTreeAsString(event,{keyAttrs:keyAttrs,maxStringLength:maxStringLength})}catch(e){target="<unknown>"}0!==target.length&&getCurrentHub().addBreadcrumb({category:`ui.${handlerData.name}`,message:target},{event:handlerData.event,name:handlerData.name,global:handlerData.global})}}function _consoleBreadcrumb(handlerData){const breadcrumb={category:"console",data:{arguments:handlerData.args,logger:"console"},level:severityLevelFromString(handlerData.level),message:safeJoin(handlerData.args," ")};if("assert"===handlerData.level){if(!1!==handlerData.args[0])return;breadcrumb.message=`Assertion failed: ${safeJoin(handlerData.args.slice(1)," ")||"console.assert"}`,breadcrumb.data.arguments=handlerData.args.slice(1)}getCurrentHub().addBreadcrumb(breadcrumb,{input:handlerData.args,level:handlerData.level})}function _xhrBreadcrumb(handlerData){const{startTimestamp:startTimestamp,endTimestamp:endTimestamp}=handlerData,sentryXhrData=handlerData.xhr[SENTRY_XHR_DATA_KEY];if(!startTimestamp||!endTimestamp||!sentryXhrData)return;const{method:method,url:url,status_code:status_code,body:body}=sentryXhrData,data={method:method,url:url,status_code:status_code},hint={xhr:handlerData.xhr,input:body,startTimestamp:startTimestamp,endTimestamp:endTimestamp};getCurrentHub().addBreadcrumb({category:"xhr",data:data,type:"http"},hint)}function _fetchBreadcrumb(handlerData){const{startTimestamp:startTimestamp,endTimestamp:endTimestamp}=handlerData;if(endTimestamp&&(!handlerData.fetchData.url.match(/sentry_key/)||"POST"!==handlerData.fetchData.method))if(handlerData.error){const data=handlerData.fetchData,hint={data:handlerData.error,input:handlerData.args,startTimestamp:startTimestamp,endTimestamp:endTimestamp};getCurrentHub().addBreadcrumb({category:"fetch",data:data,level:"error",type:"http"},hint)}else{const data={...handlerData.fetchData,status_code:handlerData.response&&handlerData.response.status},hint={input:handlerData.args,response:handlerData.response,startTimestamp:startTimestamp,endTimestamp:endTimestamp};getCurrentHub().addBreadcrumb({category:"fetch",data:data,type:"http"},hint)}}function _historyBreadcrumb(handlerData){let from=handlerData.from,to=handlerData.to;const parsedLoc=parseUrl(WINDOW.location.href);let parsedFrom=parseUrl(from);const parsedTo=parseUrl(to);parsedFrom.path||(parsedFrom=parsedLoc),parsedLoc.protocol===parsedTo.protocol&&parsedLoc.host===parsedTo.host&&(to=parsedTo.relative),parsedLoc.protocol===parsedFrom.protocol&&parsedLoc.host===parsedFrom.host&&(from=parsedFrom.relative),getCurrentHub().addBreadcrumb({category:"navigation",data:{from:from,to:to}})}function _isEvent(event){return!!event&&!!event.target}Breadcrumbs.__initStatic();export{Breadcrumbs};
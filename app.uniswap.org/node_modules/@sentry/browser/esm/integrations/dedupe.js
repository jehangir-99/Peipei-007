import{logger}from"@sentry/utils";class Dedupe{static __initStatic(){this.id="Dedupe"}constructor(){this.name=Dedupe.id}setupOnce(_addGlobaleventProcessor,_getCurrentHub){}processEvent(currentEvent){if(currentEvent.type)return currentEvent;try{if(_shouldDropEvent(currentEvent,this._previousEvent))return("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.warn("Event dropped due to being a duplicate of previously captured event."),null}catch(_oO){}return this._previousEvent=currentEvent}}function _shouldDropEvent(currentEvent,previousEvent){return!!previousEvent&&(!!_isSameMessageEvent(currentEvent,previousEvent)||!!_isSameExceptionEvent(currentEvent,previousEvent))}function _isSameMessageEvent(currentEvent,previousEvent){const currentMessage=currentEvent.message,previousMessage=previousEvent.message;return!(!currentMessage&&!previousMessage)&&(!(currentMessage&&!previousMessage||!currentMessage&&previousMessage)&&(currentMessage===previousMessage&&(!!_isSameFingerprint(currentEvent,previousEvent)&&!!_isSameStacktrace(currentEvent,previousEvent))))}function _isSameExceptionEvent(currentEvent,previousEvent){const previousException=_getExceptionFromEvent(previousEvent),currentException=_getExceptionFromEvent(currentEvent);return!(!previousException||!currentException)&&(previousException.type===currentException.type&&previousException.value===currentException.value&&(!!_isSameFingerprint(currentEvent,previousEvent)&&!!_isSameStacktrace(currentEvent,previousEvent)))}function _isSameStacktrace(currentEvent,previousEvent){let currentFrames=_getFramesFromEvent(currentEvent),previousFrames=_getFramesFromEvent(previousEvent);if(!currentFrames&&!previousFrames)return!0;if(currentFrames&&!previousFrames||!currentFrames&&previousFrames)return!1;if(previousFrames.length!==currentFrames.length)return!1;for(let i=0;i<previousFrames.length;i++){const frameA=previousFrames[i],frameB=currentFrames[i];if(frameA.filename!==frameB.filename||frameA.lineno!==frameB.lineno||frameA.colno!==frameB.colno||frameA.function!==frameB.function)return!1}return!0}function _isSameFingerprint(currentEvent,previousEvent){let currentFingerprint=currentEvent.fingerprint,previousFingerprint=previousEvent.fingerprint;if(!currentFingerprint&&!previousFingerprint)return!0;if(currentFingerprint&&!previousFingerprint||!currentFingerprint&&previousFingerprint)return!1;try{return!(currentFingerprint.join("")!==previousFingerprint.join(""))}catch(_oO){return!1}}function _getExceptionFromEvent(event){return event.exception&&event.exception.values&&event.exception.values[0]}function _getFramesFromEvent(event){const exception=event.exception;if(exception)try{return exception.values[0].stacktrace.frames}catch(_oO){return}}Dedupe.__initStatic();export{Dedupe};
import{createStackParser}from"@sentry/utils";const UNKNOWN_FUNCTION="?",OPERA10_PRIORITY=10,OPERA11_PRIORITY=20,CHROME_PRIORITY=30,WINJS_PRIORITY=40,GECKO_PRIORITY=50;function createFrame(filename,func,lineno,colno){const frame={filename:filename,function:func,in_app:!0};return void 0!==lineno&&(frame.lineno=lineno),void 0!==colno&&(frame.colno=colno),frame}const chromeRegex=/^\s*at (?:(.+?\)(?: \[.+\])?|.*?) ?\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\/)?.*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i,chromeEvalRegex=/\((\S*)(?::(\d+))(?::(\d+))\)/,chrome=line=>{const parts=chromeRegex.exec(line);if(parts){if(parts[2]&&0===parts[2].indexOf("eval")){const subMatch=chromeEvalRegex.exec(parts[2]);subMatch&&(parts[2]=subMatch[1],parts[3]=subMatch[2],parts[4]=subMatch[3])}const[func,filename]=extractSafariExtensionDetails(parts[1]||"?",parts[2]);return createFrame(filename,func,parts[3]?+parts[3]:void 0,parts[4]?+parts[4]:void 0)}},chromeStackLineParser=[30,chrome],geckoREgex=/^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:[-a-z]+)?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js)|\/[\w\-. /=]+)(?::(\d+))?(?::(\d+))?\s*$/i,geckoEvalRegex=/(\S+) line (\d+)(?: > eval line \d+)* > eval/i,gecko=line=>{const parts=geckoREgex.exec(line);if(parts){if(parts[3]&&parts[3].indexOf(" > eval")>-1){const subMatch=geckoEvalRegex.exec(parts[3]);subMatch&&(parts[1]=parts[1]||"eval",parts[3]=subMatch[1],parts[4]=subMatch[2],parts[5]="")}let filename=parts[3],func=parts[1]||"?";return[func,filename]=extractSafariExtensionDetails(func,filename),createFrame(filename,func,parts[4]?+parts[4]:void 0,parts[5]?+parts[5]:void 0)}},geckoStackLineParser=[50,gecko],winjsRegex=/^\s*at (?:((?:\[object object\])?.+) )?\(?((?:[-a-z]+):.*?):(\d+)(?::(\d+))?\)?\s*$/i,winjs=line=>{const parts=winjsRegex.exec(line);return parts?createFrame(parts[2],parts[1]||"?",+parts[3],parts[4]?+parts[4]:void 0):void 0},winjsStackLineParser=[40,winjs],opera10Regex=/ line (\d+).*script (?:in )?(\S+)(?:: in function (\S+))?$/i,opera10=line=>{const parts=opera10Regex.exec(line);return parts?createFrame(parts[2],parts[3]||"?",+parts[1]):void 0},opera10StackLineParser=[10,opera10],opera11Regex=/ line (\d+), column (\d+)\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\(.*\))? in (.*):\s*$/i,opera11=line=>{const parts=opera11Regex.exec(line);return parts?createFrame(parts[5],parts[3]||parts[4]||"?",+parts[1],+parts[2]):void 0},opera11StackLineParser=[20,opera11],defaultStackLineParsers=[chromeStackLineParser,geckoStackLineParser,winjsStackLineParser],defaultStackParser=createStackParser(...defaultStackLineParsers),extractSafariExtensionDetails=(func,filename)=>{const isSafariExtension=-1!==func.indexOf("safari-extension"),isSafariWebExtension=-1!==func.indexOf("safari-web-extension");return isSafariExtension||isSafariWebExtension?[-1!==func.indexOf("@")?func.split("@")[0]:"?",isSafariExtension?`safari-extension:${filename}`:`safari-web-extension:${filename}`]:[func,filename]};export{chromeStackLineParser,defaultStackLineParsers,defaultStackParser,geckoStackLineParser,opera10StackLineParser,opera11StackLineParser,winjsStackLineParser};
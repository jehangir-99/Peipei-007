import{GLOBAL_OBJ}from"./worldwide.js";const PREFIX="Sentry Logger ",CONSOLE_LEVELS=["debug","info","warn","error","log","assert","trace"],originalConsoleMethods={};function consoleSandbox(callback){if(!("console"in GLOBAL_OBJ))return callback();const console=GLOBAL_OBJ.console,wrappedFuncs={},wrappedLevels=Object.keys(originalConsoleMethods);wrappedLevels.forEach((level=>{const originalConsoleMethod=originalConsoleMethods[level];wrappedFuncs[level]=console[level],console[level]=originalConsoleMethod}));try{return callback()}finally{wrappedLevels.forEach((level=>{console[level]=wrappedFuncs[level]}))}}function makeLogger(){let enabled=!1;const logger={enable:()=>{enabled=!0},disable:()=>{enabled=!1},isEnabled:()=>enabled};return"undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__?CONSOLE_LEVELS.forEach((name=>{logger[name]=(...args)=>{enabled&&consoleSandbox((()=>{GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`,...args)}))}})):CONSOLE_LEVELS.forEach((name=>{logger[name]=()=>{}})),logger}const logger=makeLogger();export{CONSOLE_LEVELS,consoleSandbox,logger,originalConsoleMethods};
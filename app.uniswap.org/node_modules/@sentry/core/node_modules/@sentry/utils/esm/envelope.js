import{dsnToString}from"./dsn.js";import{normalize}from"./normalize.js";import{dropUndefinedKeys}from"./object.js";function createEnvelope(headers,items=[]){return[headers,items]}function addItemToEnvelope(envelope,newItem){const[headers,items]=envelope;return[headers,[...items,newItem]]}function forEachEnvelopeItem(envelope,callback){const envelopeItems=envelope[1];for(const envelopeItem of envelopeItems){if(callback(envelopeItem,envelopeItem[0].type))return!0}return!1}function envelopeContainsItemType(envelope,types){return forEachEnvelopeItem(envelope,((_,type)=>types.includes(type)))}function encodeUTF8(input,textEncoder){return(textEncoder||new TextEncoder).encode(input)}function serializeEnvelope(envelope,textEncoder){const[envHeaders,items]=envelope;let parts=JSON.stringify(envHeaders);function append(next){"string"==typeof parts?parts="string"==typeof next?parts+next:[encodeUTF8(parts,textEncoder),next]:parts.push("string"==typeof next?encodeUTF8(next,textEncoder):next)}for(const item of items){const[itemHeaders,payload]=item;if(append(`\n${JSON.stringify(itemHeaders)}\n`),"string"==typeof payload||payload instanceof Uint8Array)append(payload);else{let stringifiedPayload;try{stringifiedPayload=JSON.stringify(payload)}catch(e){stringifiedPayload=JSON.stringify(normalize(payload))}append(stringifiedPayload)}}return"string"==typeof parts?parts:concatBuffers(parts)}function concatBuffers(buffers){const totalLength=buffers.reduce(((acc,buf)=>acc+buf.length),0),merged=new Uint8Array(totalLength);let offset=0;for(const buffer of buffers)merged.set(buffer,offset),offset+=buffer.length;return merged}function parseEnvelope(env,textEncoder,textDecoder){let buffer="string"==typeof env?textEncoder.encode(env):env;function readBinary(length){const bin=buffer.subarray(0,length);return buffer=buffer.subarray(length+1),bin}function readJson(){let i=buffer.indexOf(10);return i<0&&(i=buffer.length),JSON.parse(textDecoder.decode(readBinary(i)))}const envelopeHeader=readJson(),items=[];for(;buffer.length;){const itemHeader=readJson(),binaryLength="number"==typeof itemHeader.length?itemHeader.length:void 0;items.push([itemHeader,binaryLength?readBinary(binaryLength):readJson()])}return[envelopeHeader,items]}function createAttachmentEnvelopeItem(attachment,textEncoder){const buffer="string"==typeof attachment.data?encodeUTF8(attachment.data,textEncoder):attachment.data;return[dropUndefinedKeys({type:"attachment",length:buffer.length,filename:attachment.filename,content_type:attachment.contentType,attachment_type:attachment.attachmentType}),buffer]}const ITEM_TYPE_TO_DATA_CATEGORY_MAP={session:"session",sessions:"session",attachment:"attachment",transaction:"transaction",event:"error",client_report:"internal",user_report:"default",profile:"profile",replay_event:"replay",replay_recording:"replay",check_in:"monitor",feedback:"feedback",statsd:"unknown"};function envelopeItemTypeToDataCategory(type){return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type]}function getSdkMetadataForEnvelopeHeader(metadataOrEvent){if(!metadataOrEvent||!metadataOrEvent.sdk)return;const{name:name,version:version}=metadataOrEvent.sdk;return{name:name,version:version}}function createEventEnvelopeHeaders(event,sdkInfo,tunnel,dsn){const dynamicSamplingContext=event.sdkProcessingMetadata&&event.sdkProcessingMetadata.dynamicSamplingContext;return{event_id:event.event_id,sent_at:(new Date).toISOString(),...sdkInfo&&{sdk:sdkInfo},...!!tunnel&&dsn&&{dsn:dsnToString(dsn)},...dynamicSamplingContext&&{trace:dropUndefinedKeys({...dynamicSamplingContext})}}}export{addItemToEnvelope,createAttachmentEnvelopeItem,createEnvelope,createEventEnvelopeHeaders,envelopeContainsItemType,envelopeItemTypeToDataCategory,forEachEnvelopeItem,getSdkMetadataForEnvelopeHeader,parseEnvelope,serializeEnvelope};
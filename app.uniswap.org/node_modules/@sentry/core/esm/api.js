import{makeDsn,dsnToString,urlEncode}from"@sentry/utils";const SENTRY_API_VERSION="7";function getBaseApiEndpoint(dsn){const protocol=dsn.protocol?`${dsn.protocol}:`:"",port=dsn.port?`:${dsn.port}`:"";return`${protocol}//${dsn.host}${port}${dsn.path?`/${dsn.path}`:""}/api/`}function _getIngestEndpoint(dsn){return`${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`}function _encodedAuth(dsn,sdkInfo){return urlEncode({sentry_key:dsn.publicKey,sentry_version:SENTRY_API_VERSION,...sdkInfo&&{sentry_client:`${sdkInfo.name}/${sdkInfo.version}`}})}function getEnvelopeEndpointWithUrlEncodedAuth(dsn,tunnelOrOptions={}){const tunnel="string"==typeof tunnelOrOptions?tunnelOrOptions:tunnelOrOptions.tunnel,sdkInfo="string"!=typeof tunnelOrOptions&&tunnelOrOptions._metadata?tunnelOrOptions._metadata.sdk:void 0;return tunnel||`${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn,sdkInfo)}`}function getReportDialogEndpoint(dsnLike,dialogOptions){const dsn=makeDsn(dsnLike);if(!dsn)return"";const endpoint=`${getBaseApiEndpoint(dsn)}embed/error-page/`;let encodedOptions=`dsn=${dsnToString(dsn)}`;for(const key in dialogOptions)if("dsn"!==key)if("user"===key){const user=dialogOptions.user;if(!user)continue;user.name&&(encodedOptions+=`&name=${encodeURIComponent(user.name)}`),user.email&&(encodedOptions+=`&email=${encodeURIComponent(user.email)}`)}else encodedOptions+=`&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key])}`;return`${endpoint}?${encodedOptions}`}export{getEnvelopeEndpointWithUrlEncodedAuth,getReportDialogEndpoint};
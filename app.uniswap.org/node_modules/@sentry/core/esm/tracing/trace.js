import{isThenable,tracingContextFromHeaders,logger,dropUndefinedKeys}from"@sentry/utils";import{getCurrentHub}from"../hub.js";import{hasTracingEnabled}from"../utils/hasTracingEnabled.js";function trace(context,callback,onError=(()=>{})){const ctx=normalizeContext(context),hub=getCurrentHub(),scope=hub.getScope(),parentSpan=scope.getSpan(),activeSpan=createChildSpanOrTransaction(hub,parentSpan,ctx);function finishAndSetSpan(){activeSpan&&activeSpan.finish(),hub.getScope().setSpan(parentSpan)}let maybePromiseResult;scope.setSpan(activeSpan);try{maybePromiseResult=callback(activeSpan)}catch(e){throw activeSpan&&activeSpan.setStatus("internal_error"),onError(e),finishAndSetSpan(),e}return isThenable(maybePromiseResult)?Promise.resolve(maybePromiseResult).then((()=>{finishAndSetSpan()}),(e=>{activeSpan&&activeSpan.setStatus("internal_error"),onError(e),finishAndSetSpan()})):finishAndSetSpan(),maybePromiseResult}function startSpan(context,callback){const ctx=normalizeContext(context),hub=getCurrentHub(),scope=hub.getScope(),parentSpan=scope.getSpan(),activeSpan=createChildSpanOrTransaction(hub,parentSpan,ctx);function finishAndSetSpan(){activeSpan&&activeSpan.finish(),hub.getScope().setSpan(parentSpan)}let maybePromiseResult;scope.setSpan(activeSpan);try{maybePromiseResult=callback(activeSpan)}catch(e){throw activeSpan&&activeSpan.setStatus("internal_error"),finishAndSetSpan(),e}return isThenable(maybePromiseResult)?Promise.resolve(maybePromiseResult).then((()=>{finishAndSetSpan()}),(()=>{activeSpan&&activeSpan.setStatus("internal_error"),finishAndSetSpan()})):finishAndSetSpan(),maybePromiseResult}const startActiveSpan=startSpan;function startSpanManual(context,callback){const ctx=normalizeContext(context),hub=getCurrentHub(),scope=hub.getScope(),parentSpan=scope.getSpan(),activeSpan=createChildSpanOrTransaction(hub,parentSpan,ctx);let maybePromiseResult;scope.setSpan(activeSpan);try{maybePromiseResult=callback(activeSpan,(function(){activeSpan&&activeSpan.finish(),hub.getScope().setSpan(parentSpan)}))}catch(e){throw activeSpan&&activeSpan.setStatus("internal_error"),e}return isThenable(maybePromiseResult)&&Promise.resolve(maybePromiseResult).then(void 0,(()=>{activeSpan&&activeSpan.setStatus("internal_error")})),maybePromiseResult}function startInactiveSpan(context){if(!hasTracingEnabled())return;const ctx={...context};void 0!==ctx.name&&void 0===ctx.description&&(ctx.description=ctx.name);const hub=getCurrentHub(),parentSpan=getActiveSpan();return parentSpan?parentSpan.startChild(ctx):hub.startTransaction(ctx)}function getActiveSpan(){return getCurrentHub().getScope().getSpan()}function continueTrace({sentryTrace:sentryTrace,baggage:baggage},callback){const currentScope=getCurrentHub().getScope(),{traceparentData:traceparentData,dynamicSamplingContext:dynamicSamplingContext,propagationContext:propagationContext}=tracingContextFromHeaders(sentryTrace,baggage);currentScope.setPropagationContext(propagationContext),("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&traceparentData&&logger.log(`[Tracing] Continuing trace ${traceparentData.traceId}.`);return callback({...traceparentData,metadata:dropUndefinedKeys({dynamicSamplingContext:traceparentData&&!dynamicSamplingContext?{}:dynamicSamplingContext})})}function createChildSpanOrTransaction(hub,parentSpan,ctx){if(hasTracingEnabled())return parentSpan?parentSpan.startChild(ctx):hub.startTransaction(ctx)}function normalizeContext(context){const ctx={...context};return void 0!==ctx.name&&void 0===ctx.description&&(ctx.description=ctx.name),ctx}export{continueTrace,getActiveSpan,startActiveSpan,startInactiveSpan,startSpan,startSpanManual,trace};
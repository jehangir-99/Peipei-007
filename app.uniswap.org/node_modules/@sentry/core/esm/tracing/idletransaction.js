import{logger,timestampInSeconds}from"@sentry/utils";import{SpanRecorder}from"./span.js";import{Transaction}from"./transaction.js";const TRACING_DEFAULTS={idleTimeout:1e3,finalTimeout:3e4,heartbeatInterval:5e3},FINISH_REASON_TAG="finishReason",IDLE_TRANSACTION_FINISH_REASONS=["heartbeatFailed","idleTimeout","documentHidden","finalTimeout","externalFinish","cancelled"];class IdleTransactionSpanRecorder extends SpanRecorder{constructor(_pushActivity,_popActivity,transactionSpanId,maxlen){super(maxlen),this._pushActivity=_pushActivity,this._popActivity=_popActivity,this.transactionSpanId=transactionSpanId}add(span){span.spanId!==this.transactionSpanId&&(span.finish=endTimestamp=>{span.endTimestamp="number"==typeof endTimestamp?endTimestamp:timestampInSeconds(),this._popActivity(span.spanId)},void 0===span.endTimestamp&&this._pushActivity(span.spanId)),super.add(span)}}class IdleTransaction extends Transaction{constructor(transactionContext,_idleHub,_idleTimeout=TRACING_DEFAULTS.idleTimeout,_finalTimeout=TRACING_DEFAULTS.finalTimeout,_heartbeatInterval=TRACING_DEFAULTS.heartbeatInterval,_onScope=!1){super(transactionContext,_idleHub),this._idleHub=_idleHub,this._idleTimeout=_idleTimeout,this._finalTimeout=_finalTimeout,this._heartbeatInterval=_heartbeatInterval,this._onScope=_onScope,this.activities={},this._heartbeatCounter=0,this._finished=!1,this._idleTimeoutCanceledPermanently=!1,this._beforeFinishCallbacks=[],this._finishReason=IDLE_TRANSACTION_FINISH_REASONS[4],_onScope&&(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.log(`Setting idle transaction on scope. Span ID: ${this.spanId}`),_idleHub.configureScope((scope=>scope.setSpan(this)))),this._restartIdleTimeout(),setTimeout((()=>{this._finished||(this.setStatus("deadline_exceeded"),this._finishReason=IDLE_TRANSACTION_FINISH_REASONS[3],this.finish())}),this._finalTimeout)}finish(endTimestamp=timestampInSeconds()){if(this._finished=!0,this.activities={},"ui.action.click"===this.op&&this.setTag("finishReason",this._finishReason),this.spanRecorder){("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.log("[Tracing] finishing IdleTransaction",new Date(1e3*endTimestamp).toISOString(),this.op);for(const callback of this._beforeFinishCallbacks)callback(this,endTimestamp);this.spanRecorder.spans=this.spanRecorder.spans.filter((span=>{if(span.spanId===this.spanId)return!0;span.endTimestamp||(span.endTimestamp=endTimestamp,span.setStatus("cancelled"),("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.log("[Tracing] cancelling span since transaction ended early",JSON.stringify(span,void 0,2)));const spanStartedBeforeTransactionFinish=span.startTimestamp<endTimestamp,timeoutWithMarginOfError=(this._finalTimeout+this._idleTimeout)/1e3,spanEndedBeforeFinalTimeout=span.endTimestamp-this.startTimestamp<timeoutWithMarginOfError;if("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__){const stringifiedSpan=JSON.stringify(span,void 0,2);spanStartedBeforeTransactionFinish?spanEndedBeforeFinalTimeout||logger.log("[Tracing] discarding Span since it finished after Transaction final timeout",stringifiedSpan):logger.log("[Tracing] discarding Span since it happened after Transaction was finished",stringifiedSpan)}return spanStartedBeforeTransactionFinish&&spanEndedBeforeFinalTimeout})),("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.log("[Tracing] flushing IdleTransaction")}else("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.log("[Tracing] No active IdleTransaction");if(this._onScope){const scope=this._idleHub.getScope();scope.getTransaction()===this&&scope.setSpan(void 0)}return super.finish(endTimestamp)}registerBeforeFinishCallback(callback){this._beforeFinishCallbacks.push(callback)}initSpanRecorder(maxlen){if(!this.spanRecorder){const pushActivity=id=>{this._finished||this._pushActivity(id)},popActivity=id=>{this._finished||this._popActivity(id)};this.spanRecorder=new IdleTransactionSpanRecorder(pushActivity,popActivity,this.spanId,maxlen),("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.log("Starting heartbeat"),this._pingHeartbeat()}this.spanRecorder.add(this)}cancelIdleTimeout(endTimestamp,{restartOnChildSpanChange:restartOnChildSpanChange}={restartOnChildSpanChange:!0}){this._idleTimeoutCanceledPermanently=!1===restartOnChildSpanChange,this._idleTimeoutID&&(clearTimeout(this._idleTimeoutID),this._idleTimeoutID=void 0,0===Object.keys(this.activities).length&&this._idleTimeoutCanceledPermanently&&(this._finishReason=IDLE_TRANSACTION_FINISH_REASONS[5],this.finish(endTimestamp)))}setFinishReason(reason){this._finishReason=reason}_restartIdleTimeout(endTimestamp){this.cancelIdleTimeout(),this._idleTimeoutID=setTimeout((()=>{this._finished||0!==Object.keys(this.activities).length||(this._finishReason=IDLE_TRANSACTION_FINISH_REASONS[1],this.finish(endTimestamp))}),this._idleTimeout)}_pushActivity(spanId){this.cancelIdleTimeout(void 0,{restartOnChildSpanChange:!this._idleTimeoutCanceledPermanently}),("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.log(`[Tracing] pushActivity: ${spanId}`),this.activities[spanId]=!0,("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.log("[Tracing] new activities count",Object.keys(this.activities).length)}_popActivity(spanId){if(this.activities[spanId]&&(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.log(`[Tracing] popActivity ${spanId}`),delete this.activities[spanId],("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.log("[Tracing] new activities count",Object.keys(this.activities).length)),0===Object.keys(this.activities).length){const endTimestamp=timestampInSeconds();this._idleTimeoutCanceledPermanently?(this._finishReason=IDLE_TRANSACTION_FINISH_REASONS[5],this.finish(endTimestamp)):this._restartIdleTimeout(endTimestamp+this._idleTimeout/1e3)}}_beat(){if(this._finished)return;const heartbeatString=Object.keys(this.activities).join("");heartbeatString===this._prevHeartbeatString?this._heartbeatCounter++:this._heartbeatCounter=1,this._prevHeartbeatString=heartbeatString,this._heartbeatCounter>=3?(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.log("[Tracing] Transaction finished because of no change for 3 heart beats"),this.setStatus("deadline_exceeded"),this._finishReason=IDLE_TRANSACTION_FINISH_REASONS[0],this.finish()):this._pingHeartbeat()}_pingHeartbeat(){("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`),setTimeout((()=>{this._beat()}),this._heartbeatInterval)}}export{IdleTransaction,IdleTransactionSpanRecorder,TRACING_DEFAULTS};
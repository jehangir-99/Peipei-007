import{addInstrumentationHandler,logger}from"@sentry/utils";import{getActiveTransaction}from"./utils.js";let errorsInstrumented=!1;function registerErrorInstrumentation(){errorsInstrumented||(errorsInstrumented=!0,addInstrumentationHandler("error",errorCallback),addInstrumentationHandler("unhandledrejection",errorCallback))}function errorCallback(){const activeTransaction=getActiveTransaction();if(activeTransaction){const status="internal_error";("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.log(`[Tracing] Transaction: ${status} -> Global error occured`),activeTransaction.setStatus(status)}}errorCallback.tag="sentry_tracingErrorCallback";export{registerErrorInstrumentation};
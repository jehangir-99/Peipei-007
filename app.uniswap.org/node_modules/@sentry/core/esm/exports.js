import{logger,uuid4,timestampInSeconds,isThenable}from"@sentry/utils";import{getCurrentHub}from"./hub.js";function captureException(exception,captureContext){return getCurrentHub().captureException(exception,{captureContext:captureContext})}function captureMessage(message,captureContext){const level="string"==typeof captureContext?captureContext:void 0,context="string"!=typeof captureContext?{captureContext:captureContext}:void 0;return getCurrentHub().captureMessage(message,level,context)}function captureEvent(event,hint){return getCurrentHub().captureEvent(event,hint)}function configureScope(callback){getCurrentHub().configureScope(callback)}function addBreadcrumb(breadcrumb){getCurrentHub().addBreadcrumb(breadcrumb)}function setContext(name,context){getCurrentHub().setContext(name,context)}function setExtras(extras){getCurrentHub().setExtras(extras)}function setExtra(key,extra){getCurrentHub().setExtra(key,extra)}function setTags(tags){getCurrentHub().setTags(tags)}function setTag(key,value){getCurrentHub().setTag(key,value)}function setUser(user){getCurrentHub().setUser(user)}function withScope(callback){getCurrentHub().withScope(callback)}function startTransaction(context,customSamplingContext){return getCurrentHub().startTransaction({...context},customSamplingContext)}function captureCheckIn(checkIn,upsertMonitorConfig){const hub=getCurrentHub(),scope=hub.getScope(),client=hub.getClient();if(client){if(client.captureCheckIn)return client.captureCheckIn(checkIn,upsertMonitorConfig,scope);("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.warn("Cannot capture check-in. Client does not support sending check-ins.")}else("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.warn("Cannot capture check-in. No client defined.");return uuid4()}function withMonitor(monitorSlug,callback,upsertMonitorConfig){const checkInId=captureCheckIn({monitorSlug:monitorSlug,status:"in_progress"},upsertMonitorConfig),now=timestampInSeconds();function finishCheckIn(status){captureCheckIn({monitorSlug:monitorSlug,status:status,checkInId:checkInId,duration:timestampInSeconds()-now})}let maybePromiseResult;try{maybePromiseResult=callback()}catch(e){throw finishCheckIn("error"),e}return isThenable(maybePromiseResult)?Promise.resolve(maybePromiseResult).then((()=>{finishCheckIn("ok")}),(()=>{finishCheckIn("error")})):finishCheckIn("ok"),maybePromiseResult}async function flush(timeout){const client=getCurrentHub().getClient();return client?client.flush(timeout):(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.warn("Cannot flush events. No client defined."),Promise.resolve(!1))}async function close(timeout){const client=getCurrentHub().getClient();return client?client.close(timeout):(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.warn("Cannot flush events and disable SDK. No client defined."),Promise.resolve(!1))}function lastEventId(){return getCurrentHub().lastEventId()}export{addBreadcrumb,captureCheckIn,captureEvent,captureException,captureMessage,close,configureScope,flush,lastEventId,setContext,setExtra,setExtras,setTag,setTags,setUser,startTransaction,withMonitor,withScope};
import{logger,getEventDescription,stringMatchesSomePattern}from"@sentry/utils";const DEFAULT_IGNORE_ERRORS=[/^Script error\.?$/,/^Javascript error: Script error\.? on line 0$/],DEFAULT_IGNORE_TRANSACTIONS=[/^.*\/healthcheck$/,/^.*\/healthy$/,/^.*\/live$/,/^.*\/ready$/,/^.*\/heartbeat$/,/^.*\/health$/,/^.*\/healthz$/];class InboundFilters{static __initStatic(){this.id="InboundFilters"}constructor(options={}){this.name=InboundFilters.id,this._options=options}setupOnce(_addGlobaleventProcessor,_getCurrentHub){}processEvent(event,_eventHint,client){const clientOptions=client.getOptions();return _shouldDropEvent(event,_mergeOptions(this._options,clientOptions))?null:event}}function _mergeOptions(internalOptions={},clientOptions={}){return{allowUrls:[...internalOptions.allowUrls||[],...clientOptions.allowUrls||[]],denyUrls:[...internalOptions.denyUrls||[],...clientOptions.denyUrls||[]],ignoreErrors:[...internalOptions.ignoreErrors||[],...clientOptions.ignoreErrors||[],...internalOptions.disableErrorDefaults?[]:DEFAULT_IGNORE_ERRORS],ignoreTransactions:[...internalOptions.ignoreTransactions||[],...clientOptions.ignoreTransactions||[],...internalOptions.disableTransactionDefaults?[]:DEFAULT_IGNORE_TRANSACTIONS],ignoreInternal:void 0===internalOptions.ignoreInternal||internalOptions.ignoreInternal}}function _shouldDropEvent(event,options){return options.ignoreInternal&&_isSentryError(event)?(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.warn(`Event dropped due to being internal Sentry Error.\nEvent: ${getEventDescription(event)}`),!0):_isIgnoredError(event,options.ignoreErrors)?(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.warn(`Event dropped due to being matched by \`ignoreErrors\` option.\nEvent: ${getEventDescription(event)}`),!0):_isIgnoredTransaction(event,options.ignoreTransactions)?(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.warn(`Event dropped due to being matched by \`ignoreTransactions\` option.\nEvent: ${getEventDescription(event)}`),!0):_isDeniedUrl(event,options.denyUrls)?(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.warn(`Event dropped due to being matched by \`denyUrls\` option.\nEvent: ${getEventDescription(event)}.\nUrl: ${_getEventFilterUrl(event)}`),!0):!_isAllowedUrl(event,options.allowUrls)&&(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.warn(`Event dropped due to not being matched by \`allowUrls\` option.\nEvent: ${getEventDescription(event)}.\nUrl: ${_getEventFilterUrl(event)}`),!0)}function _isIgnoredError(event,ignoreErrors){return!(event.type||!ignoreErrors||!ignoreErrors.length)&&_getPossibleEventMessages(event).some((message=>stringMatchesSomePattern(message,ignoreErrors)))}function _isIgnoredTransaction(event,ignoreTransactions){if("transaction"!==event.type||!ignoreTransactions||!ignoreTransactions.length)return!1;const name=event.transaction;return!!name&&stringMatchesSomePattern(name,ignoreTransactions)}function _isDeniedUrl(event,denyUrls){if(!denyUrls||!denyUrls.length)return!1;const url=_getEventFilterUrl(event);return!!url&&stringMatchesSomePattern(url,denyUrls)}function _isAllowedUrl(event,allowUrls){if(!allowUrls||!allowUrls.length)return!0;const url=_getEventFilterUrl(event);return!url||stringMatchesSomePattern(url,allowUrls)}function _getPossibleEventMessages(event){const possibleMessages=[];let lastException;event.message&&possibleMessages.push(event.message);try{lastException=event.exception.values[event.exception.values.length-1]}catch(e){}return lastException&&lastException.value&&(possibleMessages.push(lastException.value),lastException.type&&possibleMessages.push(`${lastException.type}: ${lastException.value}`)),"undefined"!=typeof __SENTRY_DEBUG__&&!__SENTRY_DEBUG__||0!==possibleMessages.length||logger.error(`Could not extract message for event ${getEventDescription(event)}`),possibleMessages}function _isSentryError(event){try{return"SentryError"===event.exception.values[0].type}catch(e){}return!1}function _getLastValidUrl(frames=[]){for(let i=frames.length-1;i>=0;i--){const frame=frames[i];if(frame&&"<anonymous>"!==frame.filename&&"[native code]"!==frame.filename)return frame.filename||null}return null}function _getEventFilterUrl(event){try{let frames;try{frames=event.exception.values[0].stacktrace.frames}catch(e){}return frames?_getLastValidUrl(frames):null}catch(oO){return("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&logger.error(`Cannot extract url for event ${getEventDescription(event)}`),null}}InboundFilters.__initStatic();export{InboundFilters,_mergeOptions,_shouldDropEvent};
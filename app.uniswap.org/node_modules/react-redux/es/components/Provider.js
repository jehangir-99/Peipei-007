import React,{useMemo}from"react";import{ReactReduxContext}from"./Context";import{createSubscription}from"../utils/Subscription";import{useIsomorphicLayoutEffect}from"../utils/useIsomorphicLayoutEffect";function Provider({store:store,context:context,children:children,serverState:serverState}){const contextValue=useMemo((()=>{const subscription=createSubscription(store);return{store:store,subscription:subscription,getServerState:serverState?()=>serverState:void 0}}),[store,serverState]),previousState=useMemo((()=>store.getState()),[store]);useIsomorphicLayoutEffect((()=>{const{subscription:subscription}=contextValue;return subscription.onStateChange=subscription.notifyNestedSubs,subscription.trySubscribe(),previousState!==store.getState()&&subscription.notifyNestedSubs(),()=>{subscription.tryUnsubscribe(),subscription.onStateChange=void 0}}),[contextValue,previousState]);const Context=context||ReactReduxContext;return React.createElement(Context.Provider,{value:contextValue},children)}export default Provider;
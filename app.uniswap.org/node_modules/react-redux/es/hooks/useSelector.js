import{useContext,useDebugValue}from"react";import{useReduxContext as useDefaultReduxContext}from"./useReduxContext";import{ReactReduxContext}from"../components/Context";import{notInitialized}from"../utils/useSyncExternalStore";let useSyncExternalStoreWithSelector=notInitialized;export const initializeUseSelector=fn=>{useSyncExternalStoreWithSelector=fn};const refEquality=(a,b)=>a===b;export function createSelectorHook(context=ReactReduxContext){const useReduxContext=context===ReactReduxContext?useDefaultReduxContext:()=>useContext(context);return function(selector,equalityFn=refEquality){if("production"!==process.env.NODE_ENV){if(!selector)throw new Error("You must pass a selector to useSelector");if("function"!=typeof selector)throw new Error("You must pass a function as a selector to useSelector");if("function"!=typeof equalityFn)throw new Error("You must pass a function as an equality function to useSelector")}const{store:store,subscription:subscription,getServerState:getServerState}=useReduxContext(),selectedState=useSyncExternalStoreWithSelector(subscription.addNestedSub,store.getState,getServerState||store.getState,selector,equalityFn);return useDebugValue(selectedState),selectedState}}export const useSelector=createSelectorHook();
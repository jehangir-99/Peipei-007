"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.hmac=exports.HMAC=void 0;const _assert_js_1=require("./_assert.js"),utils_js_1=require("./utils.js");class HMAC extends utils_js_1.Hash{constructor(hash,_key){super(),this.finished=!1,this.destroyed=!1,(0,_assert_js_1.hash)(hash);const key=(0,utils_js_1.toBytes)(_key);if(this.iHash=hash.create(),"function"!=typeof this.iHash.update)throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const blockLen=this.blockLen,pad=new Uint8Array(blockLen);pad.set(key.length>blockLen?hash.create().update(key).digest():key);for(let i=0;i<pad.length;i++)pad[i]^=54;this.iHash.update(pad),this.oHash=hash.create();for(let i=0;i<pad.length;i++)pad[i]^=106;this.oHash.update(pad),pad.fill(0)}update(buf){return(0,_assert_js_1.exists)(this),this.iHash.update(buf),this}digestInto(out){(0,_assert_js_1.exists)(this),(0,_assert_js_1.bytes)(out,this.outputLen),this.finished=!0,this.iHash.digestInto(out),this.oHash.update(out),this.oHash.digestInto(out),this.destroy()}digest(){const out=new Uint8Array(this.oHash.outputLen);return this.digestInto(out),out}_cloneInto(to){to||(to=Object.create(Object.getPrototypeOf(this),{}));const{oHash:oHash,iHash:iHash,finished:finished,destroyed:destroyed,blockLen:blockLen,outputLen:outputLen}=this;return to.finished=finished,to.destroyed=destroyed,to.blockLen=blockLen,to.outputLen=outputLen,to.oHash=oHash._cloneInto(to.oHash),to.iHash=iHash._cloneInto(to.iHash),to}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}exports.HMAC=HMAC;const hmac=(hash,key,message)=>new HMAC(hash,key).update(message).digest();exports.hmac=hmac,exports.hmac.create=(hash,key)=>new HMAC(hash,key);
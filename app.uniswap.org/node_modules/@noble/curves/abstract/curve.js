"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.validateBasic=exports.wNAF=void 0;
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const modular_js_1=require("./modular.js"),utils_js_1=require("./utils.js"),_0n=BigInt(0),_1n=BigInt(1);function wNAF(c,bits){const constTimeNegate=(condition,item)=>{const neg=item.negate();return condition?neg:item},opts=W=>({windows:Math.ceil(bits/W)+1,windowSize:2**(W-1)});return{constTimeNegate:constTimeNegate,unsafeLadder(elm,n){let p=c.ZERO,d=elm;for(;n>_0n;)n&_1n&&(p=p.add(d)),d=d.double(),n>>=_1n;return p},precomputeWindow(elm,W){const{windows:windows,windowSize:windowSize}=opts(W),points=[];let p=elm,base=p;for(let window=0;window<windows;window++){base=p,points.push(base);for(let i=1;i<windowSize;i++)base=base.add(p),points.push(base);p=base.double()}return points},wNAF(W,precomputes,n){const{windows:windows,windowSize:windowSize}=opts(W);let p=c.ZERO,f=c.BASE;const mask=BigInt(2**W-1),maxNumber=2**W,shiftBy=BigInt(W);for(let window=0;window<windows;window++){const offset=window*windowSize;let wbits=Number(n&mask);n>>=shiftBy,wbits>windowSize&&(wbits-=maxNumber,n+=_1n);const offset1=offset,offset2=offset+Math.abs(wbits)-1,cond1=window%2!=0,cond2=wbits<0;0===wbits?f=f.add(constTimeNegate(cond1,precomputes[offset1])):p=p.add(constTimeNegate(cond2,precomputes[offset2]))}return{p:p,f:f}},wNAFCached(P,precomputesMap,n,transform){const W=P._WINDOW_SIZE||1;let comp=precomputesMap.get(P);return comp||(comp=this.precomputeWindow(P,W),1!==W&&precomputesMap.set(P,transform(comp))),this.wNAF(W,comp,n)}}}function validateBasic(curve){return(0,modular_js_1.validateField)(curve.Fp),(0,utils_js_1.validateObject)(curve,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...(0,modular_js_1.nLength)(curve.n,curve.nBitLength),...curve,p:curve.Fp.ORDER})}exports.wNAF=wNAF,exports.validateBasic=validateBasic;
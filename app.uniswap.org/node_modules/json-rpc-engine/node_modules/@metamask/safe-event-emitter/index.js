"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const events_1=require("events");function safeApply(handler,context,args){try{Reflect.apply(handler,context,args)}catch(err){setTimeout((()=>{throw err}))}}function arrayClone(arr){const n=arr.length,copy=new Array(n);for(let i=0;i<n;i+=1)copy[i]=arr[i];return copy}class SafeEventEmitter extends events_1.EventEmitter{emit(type,...args){let doError="error"===type;const events=this._events;if(void 0!==events)doError=doError&&void 0===events.error;else if(!doError)return!1;if(doError){let er;if(args.length>0&&([er]=args),er instanceof Error)throw er;const err=new Error("Unhandled error."+(er?` (${er.message})`:""));throw err.context=er,err}const handler=events[type];if(void 0===handler)return!1;if("function"==typeof handler)safeApply(handler,this,args);else{const len=handler.length,listeners=arrayClone(handler);for(let i=0;i<len;i+=1)safeApply(listeners[i],this,args)}return!0}}exports.default=SafeEventEmitter;
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.remove0x=exports.add0x=exports.assertIsStrictHexString=exports.assertIsHexString=exports.isStrictHexString=exports.isHexString=exports.StrictHexStruct=exports.HexStruct=void 0;const superstruct_1=require("superstruct"),assert_1=require("./assert");function isHexString(value){return(0,superstruct_1.is)(value,exports.HexStruct)}function isStrictHexString(value){return(0,superstruct_1.is)(value,exports.StrictHexStruct)}function assertIsHexString(value){(0,assert_1.assert)(isHexString(value),"Value must be a hexadecimal string.")}function assertIsStrictHexString(value){(0,assert_1.assert)(isStrictHexString(value),'Value must be a hexadecimal string, starting with "0x".')}function add0x(hexadecimal){return hexadecimal.startsWith("0x")?hexadecimal:hexadecimal.startsWith("0X")?`0x${hexadecimal.substring(2)}`:`0x${hexadecimal}`}function remove0x(hexadecimal){return hexadecimal.startsWith("0x")||hexadecimal.startsWith("0X")?hexadecimal.substring(2):hexadecimal}exports.HexStruct=(0,superstruct_1.pattern)((0,superstruct_1.string)(),/^(?:0x)?[0-9a-f]+$/iu),exports.StrictHexStruct=(0,superstruct_1.pattern)((0,superstruct_1.string)(),/^0x[0-9a-f]+$/iu),exports.isHexString=isHexString,exports.isStrictHexString=isStrictHexString,exports.assertIsHexString=assertIsHexString,exports.assertIsStrictHexString=assertIsStrictHexString,exports.add0x=add0x,exports.remove0x=remove0x;
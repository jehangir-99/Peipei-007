"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.createHex=exports.createBytes=exports.createBigInt=exports.createNumber=void 0;const superstruct_1=require("superstruct"),assert_1=require("./assert"),bytes_1=require("./bytes"),hex_1=require("./hex"),NumberLikeStruct=(0,superstruct_1.union)([(0,superstruct_1.number)(),(0,superstruct_1.bigint)(),(0,superstruct_1.string)(),hex_1.StrictHexStruct]),NumberCoercer=(0,superstruct_1.coerce)((0,superstruct_1.number)(),NumberLikeStruct,Number),BigIntCoercer=(0,superstruct_1.coerce)((0,superstruct_1.bigint)(),NumberLikeStruct,BigInt),BytesLikeStruct=(0,superstruct_1.union)([hex_1.StrictHexStruct,(0,superstruct_1.instance)(Uint8Array)]),BytesCoercer=(0,superstruct_1.coerce)((0,superstruct_1.instance)(Uint8Array),(0,superstruct_1.union)([hex_1.StrictHexStruct]),bytes_1.hexToBytes),HexCoercer=(0,superstruct_1.coerce)(hex_1.StrictHexStruct,(0,superstruct_1.instance)(Uint8Array),bytes_1.bytesToHex);function createNumber(value){try{const result=(0,superstruct_1.create)(value,NumberCoercer);return(0,assert_1.assert)(Number.isFinite(result),`Expected a number-like value, got "${value}".`),result}catch(error){if(error instanceof superstruct_1.StructError)throw new Error(`Expected a number-like value, got "${value}".`);throw error}}function createBigInt(value){try{return(0,superstruct_1.create)(value,BigIntCoercer)}catch(error){if(error instanceof superstruct_1.StructError)throw new Error(`Expected a number-like value, got "${String(error.value)}".`);throw error}}function createBytes(value){if("string"==typeof value&&"0x"===value.toLowerCase())return new Uint8Array;try{return(0,superstruct_1.create)(value,BytesCoercer)}catch(error){if(error instanceof superstruct_1.StructError)throw new Error(`Expected a bytes-like value, got "${String(error.value)}".`);throw error}}function createHex(value){if(value instanceof Uint8Array&&0===value.length||"string"==typeof value&&"0x"===value.toLowerCase())return"0x";try{return(0,superstruct_1.create)(value,HexCoercer)}catch(error){if(error instanceof superstruct_1.StructError)throw new Error(`Expected a bytes-like value, got "${String(error.value)}".`);throw error}}exports.createNumber=createNumber,exports.createBigInt=createBigInt,exports.createBytes=createBytes,exports.createHex=createHex;
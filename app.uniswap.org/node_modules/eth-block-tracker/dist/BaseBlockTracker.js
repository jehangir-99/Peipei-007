"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.BaseBlockTracker=void 0;const safe_event_emitter_1=__importDefault(require("@metamask/safe-event-emitter")),sec=1e3,calculateSum=(accumulator,currentValue)=>accumulator+currentValue,blockTrackerEvents=["sync","latest"];class BaseBlockTracker extends safe_event_emitter_1.default{constructor(opts){super(),this._blockResetDuration=opts.blockResetDuration||2e4,this._usePastBlocks=opts.usePastBlocks||!1,this._currentBlock=null,this._isRunning=!1,this._onNewListener=this._onNewListener.bind(this),this._onRemoveListener=this._onRemoveListener.bind(this),this._resetCurrentBlock=this._resetCurrentBlock.bind(this),this._setupInternalEvents()}async destroy(){this._cancelBlockResetTimeout(),await this._maybeEnd(),super.removeAllListeners()}isRunning(){return this._isRunning}getCurrentBlock(){return this._currentBlock}async getLatestBlock(){if(this._currentBlock)return this._currentBlock;return await new Promise((resolve=>this.once("latest",resolve)))}removeAllListeners(eventName){return eventName?super.removeAllListeners(eventName):super.removeAllListeners(),this._setupInternalEvents(),this._onRemoveListener(),this}_setupInternalEvents(){this.removeListener("newListener",this._onNewListener),this.removeListener("removeListener",this._onRemoveListener),this.on("newListener",this._onNewListener),this.on("removeListener",this._onRemoveListener)}_onNewListener(eventName){blockTrackerEvents.includes(eventName)&&this._maybeStart()}_onRemoveListener(){this._getBlockTrackerEventCount()>0||this._maybeEnd()}async _maybeStart(){this._isRunning||(this._isRunning=!0,this._cancelBlockResetTimeout(),await this._start(),this.emit("_started"))}async _maybeEnd(){this._isRunning&&(this._isRunning=!1,this._setupBlockResetTimeout(),await this._end(),this.emit("_ended"))}_getBlockTrackerEventCount(){return blockTrackerEvents.map((eventName=>this.listenerCount(eventName))).reduce(calculateSum)}_shouldUseNewBlock(newBlock){const currentBlock=this._currentBlock;if(!currentBlock)return!0;const newBlockInt=hexToInt(newBlock),currentBlockInt=hexToInt(currentBlock);return this._usePastBlocks&&newBlockInt<currentBlockInt||newBlockInt>currentBlockInt}_newPotentialLatest(newBlock){this._shouldUseNewBlock(newBlock)&&this._setCurrentBlock(newBlock)}_setCurrentBlock(newBlock){const oldBlock=this._currentBlock;this._currentBlock=newBlock,this.emit("latest",newBlock),this.emit("sync",{oldBlock:oldBlock,newBlock:newBlock})}_setupBlockResetTimeout(){this._cancelBlockResetTimeout(),this._blockResetTimeout=setTimeout(this._resetCurrentBlock,this._blockResetDuration),this._blockResetTimeout.unref&&this._blockResetTimeout.unref()}_cancelBlockResetTimeout(){this._blockResetTimeout&&clearTimeout(this._blockResetTimeout)}_resetCurrentBlock(){this._currentBlock=null}}function hexToInt(hexInt){return Number.parseInt(hexInt,16)}exports.BaseBlockTracker=BaseBlockTracker;